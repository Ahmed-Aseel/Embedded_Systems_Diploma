

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Oct 30 00:06:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Version 2.40
    80                           ; Generated 17/11/2021 GMT
    81                           ; 
    82                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4620 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114   000000                     
   115                           	psect	idataCOMRAM
   116   0033A6                     __pidataCOMRAM:
   117                           	callstack 0
   118                           
   119                           ;initializer for _RB7_flag
   120   0033A6  01                 	db	1
   121                           
   122                           ;initializer for _RB6_flag
   123   0033A7  01                 	db	1
   124                           
   125                           ;initializer for _RB5_flag
   126   0033A8  01                 	db	1
   127                           
   128                           ;initializer for _RB4_flag
   129   0033A9  01                 	db	1
   130                           
   131                           	psect	idataBANK0
   132   003248                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _port_registers
   136   003248  80                 	db	128
   137   003249  0F                 	db	15
   138   00324A  81                 	db	129
   139   00324B  0F                 	db	15
   140   00324C  82                 	db	130
   141   00324D  0F                 	db	15
   142   00324E  83                 	db	131
   143   00324F  0F                 	db	15
   144   003250  84                 	db	132
   145   003251  0F                 	db	15
   146                           
   147                           ;initializer for _lat_registers
   148   003252  89                 	db	137
   149   003253  0F                 	db	15
   150   003254  8A                 	db	138
   151   003255  0F                 	db	15
   152   003256  8B                 	db	139
   153   003257  0F                 	db	15
   154   003258  8C                 	db	140
   155   003259  0F                 	db	15
   156   00325A  8D                 	db	141
   157   00325B  0F                 	db	15
   158                           
   159                           ;initializer for _tris_registers
   160   00325C  92                 	db	146
   161   00325D  0F                 	db	15
   162   00325E  93                 	db	147
   163   00325F  0F                 	db	15
   164   003260  94                 	db	148
   165   003261  0F                 	db	15
   166   003262  95                 	db	149
   167   003263  0F                 	db	15
   168   003264  96                 	db	150
   169   003265  0F                 	db	15
   170                           
   171                           ;initializer for _adc_obj
   172   003266  6E                 	db	low _ADC_App_ISR
   173   003267  2E                 	db	high _ADC_App_ISR
   174   003268  01                 	db	1
   175   003269  05                 	db	5
   176   00326A  05                 	db	5
   177   00326B  00                 	db	0
   178   00326C  02                 	db	2
   179                           
   180                           ;initializer for _lcd_1
   181   00326D  02                 	db	2
   182   00326E  0A                 	db	10
   183   00326F  12                 	db	18
   184   003270  1A                 	db	26
   185   003271  22                 	db	34
   186   003272  2A                 	db	42
   187                           
   188                           ;initializer for _dc_motor_2
   189   003273  13                 	db	19
   190   003274  1B                 	db	27
   191                           
   192                           ;initializer for _dc_motor_1
   193   003275  03                 	db	3
   194   003276  0B                 	db	11
   195                           
   196                           	psect	smallconst
   197   001000                     __psmallconst:
   198                           	callstack 0
   199   001000  00                 	db	0
   200   001001                     _keypad_valus:
   201                           	callstack 0
   202   001001  37                 	db	55
   203   001002  38                 	db	56
   204   001003  39                 	db	57
   205   001004  2F                 	db	47
   206   001005  34                 	db	52
   207   001006  35                 	db	53
   208   001007  36                 	db	54
   209   001008  2A                 	db	42
   210   001009  31                 	db	49
   211   00100A  32                 	db	50
   212   00100B  33                 	db	51
   213   00100C  2D                 	db	45
   214   00100D  23                 	db	35
   215   00100E  30                 	db	48
   216   00100F  3D                 	db	61
   217   001010  2B                 	db	43
   218   001011                     __end_of_keypad_valus:
   219                           	callstack 0
   220   000000                     _INTCON2bits	set	4081
   221   000000                     _EECON2	set	4007
   222   000000                     _ADCON1bits	set	4033
   223   000000                     _ADRESL	set	4035
   224   000000                     _ADRESH	set	4036
   225   000000                     _INTCONbits	set	4082
   226   000000                     _TRISD	set	3989
   227   000000                     _TRISC	set	3988
   228   000000                     _TRISB	set	3987
   229   000000                     _TRISE	set	3990
   230   001011                     STR_4:
   231   001011  4C                 	db	76	;'L'
   232   001012  4D                 	db	77	;'M'
   233   001013  33                 	db	51	;'3'
   234   001014  35                 	db	53	;'5'
   235   001015  20                 	db	32
   236   001016  54                 	db	84	;'T'
   237   001017  65                 	db	101	;'e'
   238   001018  73                 	db	115	;'s'
   239   001019  74                 	db	116	;'t'
   240   00101A  00                 	db	0
   241   00101B                     STR_5:
   242   00101B  54                 	db	84	;'T'
   243   00101C  65                 	db	101	;'e'
   244   00101D  6D                 	db	109	;'m'
   245   00101E  70                 	db	112	;'p'
   246   00101F  31                 	db	49	;'1'
   247   001020  3A                 	db	58	;':'
   248   001021  20                 	db	32
   249   001022  00                 	db	0
   250   001023                     STR_6:
   251   001023  54                 	db	84	;'T'
   252   001024  65                 	db	101	;'e'
   253   001025  6D                 	db	109	;'m'
   254   001026  70                 	db	112	;'p'
   255   001027  32                 	db	50	;'2'
   256   001028  3A                 	db	58	;':'
   257   001029  20                 	db	32
   258   00102A  00                 	db	0
   259   00102B                     STR_1:
   260   00102B  25                 	db	37
   261   00102C  69                 	db	105	;'i'
   262   00102D  00                 	db	0
   263   00102E  00                 	db	0	; dummy byte at the end
   264   000000                     
   265                           	psect	nvBANK0
   266   0000FA                     __pnvBANK0:
   267                           	callstack 0
   268   0000FA                     _ret:
   269                           	callstack 0
   270   0000FA                     	ds	1
   271   000000                     _PORTBbits	set	3969
   272   000000                     _PIE1bits	set	3997
   273   000000                     _ADCON2bits	set	4032
   274   000000                     _ADCON0bits	set	4034
   275   000000                     _PORTE	set	3972
   276   000000                     _PORTD	set	3971
   277   000000                     _PORTC	set	3970
   278   000000                     _PORTB	set	3969
   279   000000                     _PORTA	set	3968
   280   000000                     _LATA	set	3977
   281   000000                     _TRISA	set	3986
   282   000000                     _EECON1bits	set	4006
   283   000000                     _EEDATA	set	4008
   284   000000                     _EEADR	set	4009
   285   000000                     _PIR1bits	set	3998
   286   000000                     _INTCON3bits	set	4080
   287   000000                     _EEADRH	set	4010
   288   000000                     _LATE	set	3981
   289   000000                     _LATD	set	3980
   290   000000                     _LATC	set	3979
   291   000000                     _LATB	set	3978
   292                           
   293                           ; #config settings
   294                           
   295                           	psect	cinit
   296   002CCC                     __pcinit:
   297                           	callstack 0
   298   002CCC                     start_initialization:
   299                           	callstack 0
   300   002CCC                     __initialization:
   301                           	callstack 0
   302                           
   303                           ; Initialize objects allocated to BANK0 (47 bytes)
   304                           ; load TBLPTR registers with __pidataBANK0
   305   002CCC  0E48               	movlw	low __pidataBANK0
   306   002CCE  6EF6               	movwf	tblptrl,c
   307   002CD0  0E32               	movlw	high __pidataBANK0
   308   002CD2  6EF7               	movwf	tblptrh,c
   309   002CD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   310   002CD6  6EF8               	movwf	tblptru,c
   311   002CD8  EE00  F0BD         	lfsr	0,__pdataBANK0
   312   002CDC  EE10 F02F          	lfsr	1,47
   313   002CE0                     copy_data0:
   314   002CE0  0009               	tblrd		*+
   315   002CE2  CFF5 FFEE          	movff	tablat,postinc0
   316   002CE6  50E5               	movf	postdec1,w,c
   317   002CE8  50E1               	movf	fsr1l,w,c
   318   002CEA  E1FA               	bnz	copy_data0
   319                           
   320                           ; Initialize objects allocated to COMRAM (4 bytes)
   321                           ; load TBLPTR registers with __pidataCOMRAM
   322   002CEC  0EA6               	movlw	low __pidataCOMRAM
   323   002CEE  6EF6               	movwf	tblptrl,c
   324   002CF0  0E33               	movlw	high __pidataCOMRAM
   325   002CF2  6EF7               	movwf	tblptrh,c
   326   002CF4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   327   002CF6  6EF8               	movwf	tblptru,c
   328   002CF8  EE00  F065         	lfsr	0,__pdataCOMRAM
   329   002CFC  EE10 F004          	lfsr	1,4
   330   002D00                     copy_data1:
   331   002D00  0009               	tblrd		*+
   332   002D02  CFF5 FFEE          	movff	tablat,postinc0
   333   002D06  50E5               	movf	postdec1,w,c
   334   002D08  50E1               	movf	fsr1l,w,c
   335   002D0A  E1FA               	bnz	copy_data1
   336                           
   337                           ; Clear objects allocated to BANK1 (32 bytes)
   338   002D0C  EE01  F000         	lfsr	0,__pbssBANK1
   339   002D10  0E20               	movlw	32
   340   002D12                     clear_0:
   341   002D12  6AEE               	clrf	postinc0,c
   342   002D14  06E8               	decf	wreg,f,c
   343   002D16  E1FD               	bnz	clear_0
   344                           
   345                           ; Clear objects allocated to BANK0 (61 bytes)
   346   002D18  EE00  F080         	lfsr	0,__pbssBANK0
   347   002D1C  0E3D               	movlw	61
   348   002D1E                     clear_1:
   349   002D1E  6AEE               	clrf	postinc0,c
   350   002D20  06E8               	decf	wreg,f,c
   351   002D22  E1FD               	bnz	clear_1
   352                           
   353                           ; Clear objects allocated to COMRAM (12 bytes)
   354   002D24  EE00  F059         	lfsr	0,__pbssCOMRAM
   355   002D28  0E0C               	movlw	12
   356   002D2A                     clear_2:
   357   002D2A  6AEE               	clrf	postinc0,c
   358   002D2C  06E8               	decf	wreg,f,c
   359   002D2E  E1FD               	bnz	clear_2
   360   002D30                     end_of_initialization:
   361                           	callstack 0
   362   002D30                     __end_of__initialization:
   363                           	callstack 0
   364   002D30  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   365   002D32  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   366   002D34  0100               	movlb	0
   367   002D36  EFA8  F00B         	goto	_main	;jump to C main() function
   368                           
   369                           	psect	bssCOMRAM
   370   000059                     __pbssCOMRAM:
   371                           	callstack 0
   372   000059                     _lm35_res_2_celsius:
   373                           	callstack 0
   374   000059                     	ds	2
   375   00005B                     _lm35_res_1_celsius:
   376                           	callstack 0
   377   00005B                     	ds	2
   378   00005D                     _ADC_InterruptHandler:
   379                           	callstack 0
   380   00005D                     	ds	2
   381   00005F                     _flags:
   382                           	callstack 0
   383   00005F                     	ds	1
   384   000060                     _ADC_Req:
   385                           	callstack 0
   386   000060                     	ds	1
   387   000061                     _lm35_res_2:
   388                           	callstack 0
   389   000061                     	ds	2
   390   000063                     _lm35_res_1:
   391                           	callstack 0
   392   000063                     	ds	2
   393                           
   394                           	psect	dataCOMRAM
   395   000065                     __pdataCOMRAM:
   396                           	callstack 0
   397   000065                     _RB7_flag:
   398                           	callstack 0
   399   000065                     	ds	1
   400   000066                     _RB6_flag:
   401                           	callstack 0
   402   000066                     	ds	1
   403   000067                     _RB5_flag:
   404                           	callstack 0
   405   000067                     	ds	1
   406   000068                     _RB4_flag:
   407                           	callstack 0
   408   000068                     	ds	1
   409                           
   410                           	psect	bssBANK0
   411   000080                     __pbssBANK0:
   412                           	callstack 0
   413   000080                     	ds	11
   414   00008B                     	ds	6
   415   000091                     	ds	4
   416   000095                     _width:
   417                           	callstack 0
   418   000095                     	ds	2
   419   000097                     _prec:
   420                           	callstack 0
   421   000097                     	ds	2
   422   000099                     _RB7_InterruptHandler_High:
   423                           	callstack 0
   424   000099                     	ds	2
   425   00009B                     _RB7_InterruptHandler_Low:
   426                           	callstack 0
   427   00009B                     	ds	2
   428   00009D                     _RB6_InterruptHandler_High:
   429                           	callstack 0
   430   00009D                     	ds	2
   431   00009F                     _RB6_InterruptHandler_Low:
   432                           	callstack 0
   433   00009F                     	ds	2
   434   0000A1                     _RB5_InterruptHandler_High:
   435                           	callstack 0
   436   0000A1                     	ds	2
   437   0000A3                     _RB5_InterruptHandler_Low:
   438                           	callstack 0
   439   0000A3                     	ds	2
   440   0000A5                     _RB4_InterruptHandler_High:
   441                           	callstack 0
   442   0000A5                     	ds	2
   443   0000A7                     _RB4_InterruptHandler_Low:
   444                           	callstack 0
   445   0000A7                     	ds	2
   446   0000A9                     _INT2_InterruptHandler:
   447                           	callstack 0
   448   0000A9                     	ds	2
   449   0000AB                     _INT1_InterruptHandler:
   450                           	callstack 0
   451   0000AB                     	ds	2
   452   0000AD                     _INT0_InterruptHandler:
   453                           	callstack 0
   454   0000AD                     	ds	2
   455   0000AF                     _lm35_res_2_txt:
   456                           	callstack 0
   457   0000AF                     	ds	7
   458   0000B6                     _lm35_res_1_txt:
   459                           	callstack 0
   460   0000B6                     	ds	7
   461                           
   462                           	psect	dataBANK0
   463   0000BD                     __pdataBANK0:
   464                           	callstack 0
   465   0000BD                     _port_registers:
   466                           	callstack 0
   467   0000BD                     	ds	10
   468   0000C7                     _lat_registers:
   469                           	callstack 0
   470   0000C7                     	ds	10
   471   0000D1                     _tris_registers:
   472                           	callstack 0
   473   0000D1                     	ds	10
   474   0000DB                     _adc_obj:
   475                           	callstack 0
   476   0000DB                     	ds	7
   477   0000E2                     _lcd_1:
   478                           	callstack 0
   479   0000E2                     	ds	6
   480   0000E8                     _dc_motor_2:
   481                           	callstack 0
   482   0000E8                     	ds	2
   483   0000EA                     _dc_motor_1:
   484                           	callstack 0
   485   0000EA                     	ds	2
   486                           
   487                           	psect	bssBANK1
   488   000100                     __pbssBANK1:
   489                           	callstack 0
   490   000100                     _dbuf:
   491                           	callstack 0
   492   000100                     	ds	32
   493                           
   494                           	psect	cstackBANK1
   495   000120                     __pcstackBANK1:
   496                           	callstack 0
   497   000120                     convert_uint16_to_string@temp_str:
   498                           	callstack 0
   499                           
   500                           ; 6 bytes @ 0x0
   501   000120                     	ds	6
   502   000126                     convert_uint16_to_string@ret:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x6
   506   000126                     	ds	1
   507   000127                     convert_uint16_to_string@counter:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x7
   511   000127                     	ds	1
   512                           
   513                           	psect	cstackBANK0
   514   0000EC                     __pcstackBANK0:
   515                           	callstack 0
   516   0000EC                     sprintf@ap:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520   0000EC                     	ds	2
   521   0000EE                     sprintf@f:
   522                           	callstack 0
   523                           
   524                           ; 12 bytes @ 0x2
   525   0000EE                     	ds	12
   526                           
   527                           	psect	cstackCOMRAM
   528   000001                     __pcstackCOMRAM:
   529                           	callstack 0
   530   000001                     mcal_adc_GetConversionResult@_adc_config:
   531                           	callstack 0
   532   000001                     gpio_port_read_logic@direction:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x0
   536   000001                     	ds	2
   537   000003                     ??_gpio_port_read_logic:
   538   000003                     mcal_adc_GetConversionResult@conversion_result:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542   000003                     	ds	2
   543   000005                     ??_mcal_adc_GetConversionResult:
   544   000005                     gpio_port_read_logic@ret:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x4
   548   000005                     	ds	1
   549   000006                     gpio_port_read_logic@port:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x5
   553   000006                     	ds	1
   554   000007                     RB4_ISR@value:
   555                           	callstack 0
   556   000007                     RB5_ISR@value:
   557                           	callstack 0
   558   000007                     RB6_ISR@value:
   559                           	callstack 0
   560   000007                     RB7_ISR@value:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x6
   564   000007                     	ds	1
   565   000008                     mcal_adc_GetConversionResult@ret:
   566                           	callstack 0
   567   000008                     RB4_ISR@RB4_Source:
   568                           	callstack 0
   569   000008                     RB5_ISR@RB5_Source:
   570                           	callstack 0
   571   000008                     RB6_ISR@RB6_Source:
   572                           	callstack 0
   573   000008                     RB7_ISR@RB7_Source:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x7
   577   000008                     	ds	1
   578   000009                     ??_InterruptManager:
   579                           
   580                           ; 1 bytes @ 0x8
   581   000009                     	ds	8
   582   000011                     ??_adc_input_channel_port_configure:
   583   000011                     ?___awdiv:
   584                           	callstack 0
   585   000011                     ?___awmod:
   586                           	callstack 0
   587   000011                     ?___lwdiv:
   588                           	callstack 0
   589   000011                     ?___xxtofl:
   590                           	callstack 0
   591   000011                     mcal_adc_StartConversion@_adc_config:
   592                           	callstack 0
   593   000011                     adc_select_result_format@_adc_config:
   594                           	callstack 0
   595   000011                     gpio_pin_direction_initialize@_pin_config:
   596                           	callstack 0
   597   000011                     gpio_pin_write_logic@_pin_config:
   598                           	callstack 0
   599   000011                     ___awdiv@dividend:
   600                           	callstack 0
   601   000011                     ___awmod@dividend:
   602                           	callstack 0
   603   000011                     ___lwdiv@dividend:
   604                           	callstack 0
   605   000011                     memset@dest:
   606                           	callstack 0
   607   000011                     fputc@c:
   608                           	callstack 0
   609   000011                     ___xxtofl@val:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x10
   613   000011                     	ds	2
   614   000013                     ??_gpio_pin_direction_initialize:
   615   000013                     mcal_adc_StartConversion@ret:
   616                           	callstack 0
   617   000013                     adc_input_channel_port_configure@channel:
   618                           	callstack 0
   619   000013                     gpio_pin_write_logic@logic:
   620                           	callstack 0
   621   000013                     ___awdiv@divisor:
   622                           	callstack 0
   623   000013                     ___awmod@divisor:
   624                           	callstack 0
   625   000013                     ___lwdiv@divisor:
   626                           	callstack 0
   627   000013                     memset@c:
   628                           	callstack 0
   629   000013                     fputc@fp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x12
   633   000013                     	ds	1
   634   000014                     ??_gpio_pin_write_logic:
   635   000014                     mcal_adc_Init@_adc_config:
   636                           	callstack 0
   637   000014                     mcal_adc_SelectChannel@_adc_config:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x13
   641   000014                     	ds	1
   642   000015                     ??_fputc:
   643   000015                     ??___xxtofl:
   644   000015                     ___awdiv@counter:
   645                           	callstack 0
   646   000015                     ___awmod@counter:
   647                           	callstack 0
   648   000015                     ___lwdiv@quotient:
   649                           	callstack 0
   650   000015                     memset@n:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654   000015                     	ds	1
   655   000016                     ??_mcal_adc_Init:
   656   000016                     mcal_adc_SelectChannel@channel:
   657                           	callstack 0
   658   000016                     ___awdiv@sign:
   659                           	callstack 0
   660   000016                     ___awmod@sign:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x15
   664   000016                     	ds	1
   665   000017                     ??_memset:
   666   000017                     ??_mcal_adc_SelectChannel:
   667   000017                     ?_abs:
   668                           	callstack 0
   669   000017                     mcal_adc_Init@ret:
   670                           	callstack 0
   671   000017                     ___lwdiv@counter:
   672                           	callstack 0
   673   000017                     ___awdiv@quotient:
   674                           	callstack 0
   675   000017                     abs@a:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x16
   679   000017                     	ds	1
   680   000018                     mcal_adc_SelectChannel@ret:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x17
   684   000018                     	ds	1
   685   000019                     ??_abs:
   686   000019                     gpio_pin_direction_initialize@ret:
   687                           	callstack 0
   688   000019                     ___xxtofl@sign:
   689                           	callstack 0
   690   000019                     mcal_adc_StartConversion_Interrupt@_adc_config:
   691                           	callstack 0
   692   000019                     memset@k:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x18
   696   000019                     	ds	1
   697   00001A                     gpio_pin_write_logic@ret:
   698                           	callstack 0
   699   00001A                     ___xxtofl@exp:
   700                           	callstack 0
   701   00001A                     fputs@s:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x19
   705   00001A                     	ds	1
   706   00001B                     mcal_adc_StartConversion_Interrupt@channel:
   707                           	callstack 0
   708   00001B                     ecu_dc_motor_move_right@_dc_motor_config:
   709                           	callstack 0
   710   00001B                     ecu_dc_motor_move_left@_dc_motor_config:
   711                           	callstack 0
   712   00001B                     lcd_send_4bits@_lcd_4bits_config:
   713                           	callstack 0
   714   00001B                     lcd_4bits_send_enable_signal@_lcd_4bits_config:
   715                           	callstack 0
   716   00001B                     gpio_pin_initialize@_pin_config:
   717                           	callstack 0
   718   00001B                     memset@s:
   719                           	callstack 0
   720   00001B                     ___xxtofl@arg:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x1A
   724   00001B                     	ds	1
   725   00001C                     mcal_adc_StartConversion_Interrupt@ret:
   726                           	callstack 0
   727   00001C                     fputs@fp:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1B
   731   00001C                     	ds	1
   732   00001D                     ??_gpio_pin_initialize:
   733   00001D                     ecu_dc_motor_move_right@ret:
   734                           	callstack 0
   735   00001D                     ecu_dc_motor_move_left@ret:
   736                           	callstack 0
   737   00001D                     lcd_send_4bits@data_command:
   738                           	callstack 0
   739   00001D                     lcd_4bits_send_enable_signal@ret:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x1C
   743   00001D                     	ds	1
   744   00001E                     lcd_send_4bits@ret:
   745                           	callstack 0
   746   00001E                     gpio_pin_initialize@ret:
   747                           	callstack 0
   748   00001E                     fputs@c:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x1D
   752   00001E                     	ds	1
   753   00001F                     ?___flmul:
   754                           	callstack 0
   755   00001F                     ecu_dc_motor_initialize@_dc_motor_config:
   756                           	callstack 0
   757   00001F                     ecu_dc_motor_stop@_dc_motor_config:
   758                           	callstack 0
   759   00001F                     ecu_lcd_4bits_send_command@_lcd_4bits_config:
   760                           	callstack 0
   761   00001F                     ecu_lcd_4bits_send_char_data@_lcd_4bits_config:
   762                           	callstack 0
   763   00001F                     fputs@i:
   764                           	callstack 0
   765   00001F                     ___flmul@b:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x1E
   769   00001F                     	ds	2
   770   000021                     ecu_dc_motor_initialize@ret:
   771                           	callstack 0
   772   000021                     ecu_dc_motor_stop@ret:
   773                           	callstack 0
   774   000021                     ecu_lcd_4bits_send_command@command:
   775                           	callstack 0
   776   000021                     ecu_lcd_4bits_send_char_data@data:
   777                           	callstack 0
   778   000021                     pad@fp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x20
   782   000021                     	ds	1
   783   000022                     ecu_lcd_4bits_send_command@ret:
   784                           	callstack 0
   785   000022                     ecu_lcd_4bits_send_char_data@ret:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x21
   789   000022                     	ds	1
   790   000023                     ecu_lcd_4bits_initialize@_lcd_4bits_config:
   791                           	callstack 0
   792   000023                     ecu_lcd_4bits_send_string@_lcd_4bits_config:
   793                           	callstack 0
   794   000023                     lcd_4bits_set_cursor@_lcd_4bits_config:
   795                           	callstack 0
   796   000023                     pad@buf:
   797                           	callstack 0
   798   000023                     ___flmul@a:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x22
   802   000023                     	ds	2
   803   000025                     ??_ecu_lcd_4bits_initialize:
   804   000025                     lcd_4bits_set_cursor@row:
   805                           	callstack 0
   806   000025                     ecu_lcd_4bits_send_string@str:
   807                           	callstack 0
   808   000025                     pad@p:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x24
   812   000025                     	ds	1
   813   000026                     lcd_4bits_set_cursor@col:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x25
   817   000026                     	ds	1
   818   000027                     ??_lcd_4bits_set_cursor:
   819   000027                     ??___flmul:
   820   000027                     ??_pad:
   821   000027                     ecu_lcd_4bits_initialize@counter:
   822                           	callstack 0
   823   000027                     ecu_lcd_4bits_send_string@ret:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x26
   827   000027                     	ds	1
   828   000028                     ecu_lcd_4bits_initialize@ret:
   829                           	callstack 0
   830   000028                     pad@i:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x27
   834   000028                     	ds	1
   835   000029                     lcd_4bits_set_cursor@ret:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x28
   839   000029                     	ds	1
   840   00002A                     ecu_lcd_4bits_send_string_pos@_lcd_4bits_config:
   841                           	callstack 0
   842   00002A                     pad@w:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x29
   846   00002A                     	ds	1
   847   00002B                     ___flmul@sign:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x2A
   851   00002B                     	ds	1
   852   00002C                     ecu_lcd_4bits_send_string_pos@row:
   853                           	callstack 0
   854   00002C                     dtoa@fp:
   855                           	callstack 0
   856   00002C                     ___flmul@grs:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x2B
   860   00002C                     	ds	1
   861   00002D                     ecu_lcd_4bits_send_string_pos@col:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x2C
   865   00002D                     	ds	1
   866   00002E                     ecu_lcd_4bits_send_string_pos@str:
   867                           	callstack 0
   868   00002E                     dtoa@d:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x2D
   872   00002E                     	ds	2
   873   000030                     ecu_lcd_4bits_send_string_pos@ret:
   874                           	callstack 0
   875   000030                     ___flmul@aexp:
   876                           	callstack 0
   877   000030                     _dtoa$2447:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x2F
   881   000030                     	ds	1
   882   000031                     ___flmul@bexp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x30
   886   000031                     	ds	1
   887   000032                     dtoa@p:
   888                           	callstack 0
   889   000032                     ___flmul@prod:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x31
   893   000032                     	ds	2
   894   000034                     dtoa@w:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x33
   898   000034                     	ds	2
   899   000036                     dtoa@s:
   900                           	callstack 0
   901   000036                     ___flmul@temp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x35
   905   000036                     	ds	1
   906   000037                     dtoa@i:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x36
   910   000037                     	ds	1
   911   000038                     ?___fltol:
   912                           	callstack 0
   913   000038                     ___fltol@f1:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x37
   917   000038                     	ds	1
   918   000039                     vfpfcnvrt@fp:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x38
   922   000039                     	ds	2
   923   00003B                     vfpfcnvrt@fmt:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x3A
   927   00003B                     	ds	1
   928   00003C                     ??___fltol:
   929                           
   930                           ; 1 bytes @ 0x3B
   931   00003C                     	ds	1
   932   00003D                     vfpfcnvrt@ap:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x3C
   936   00003D                     	ds	2
   937   00003F                     ??_vfpfcnvrt:
   938                           
   939                           ; 1 bytes @ 0x3E
   940   00003F                     	ds	1
   941   000040                     ___fltol@sign1:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x3F
   945   000040                     	ds	1
   946   000041                     ___fltol@exp1:
   947                           	callstack 0
   948   000041                     vfpfcnvrt@convarg:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x40
   952   000041                     	ds	4
   953   000045                     vfpfcnvrt@cp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x44
   957   000045                     	ds	2
   958   000047                     ?_vfprintf:
   959                           	callstack 0
   960   000047                     vfprintf@fp:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x46
   964   000047                     	ds	2
   965   000049                     vfprintf@fmt:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x48
   969   000049                     	ds	2
   970   00004B                     vfprintf@ap:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x4A
   974   00004B                     	ds	2
   975   00004D                     vfprintf@cfmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x4C
   979   00004D                     	ds	2
   980   00004F                     ?_sprintf:
   981                           	callstack 0
   982   00004F                     sprintf@s:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x4E
   986   00004F                     	ds	2
   987   000051                     sprintf@fmt:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x50
   991   000051                     	ds	4
   992   000055                     convert_uint16_to_string@value:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x54
   996   000055                     	ds	2
   997   000057                     convert_uint16_to_string@str:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x56
  1001   000057                     	ds	2
  1002   000059                     
  1003                           ; 1 bytes @ 0x58
  1004 ;;
  1005 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1006 ;;
  1007 ;; *************** function _main *****************
  1008 ;; Defined at:
  1009 ;;		line 30 in file "application.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2  921[None  ] int 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels required when called: 13
  1029 ;; This function calls:
  1030 ;;		___flmul
  1031 ;;		___fltol
  1032 ;;		___lwdiv
  1033 ;;		___xxtofl
  1034 ;;		_application_initialize
  1035 ;;		_convert_uint16_to_string
  1036 ;;		_ecu_dc_motor_move_left
  1037 ;;		_ecu_dc_motor_move_right
  1038 ;;		_ecu_dc_motor_stop
  1039 ;;		_ecu_lcd_4bits_send_string_pos
  1040 ;;		_mcal_adc_StartConversion_Interrupt
  1041 ;; This function is called by:
  1042 ;;		Startup code after reset
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text0
  1047   001750                     __ptext0:
  1048                           	callstack 0
  1049   001750                     _main:
  1050                           	callstack 18
  1051   001750                     
  1052                           ;application.c: 32:     application_initialize();
  1053   001750  ECC8  F019         	call	_application_initialize	;wreg free
  1054   001754                     
  1055                           ;application.c: 33:     ret = ecu_lcd_4bits_send_string_pos(&lcd_1, 1, 7, "LM35 Test");
  1056   001754  0EE2               	movlw	low _lcd_1
  1057   001756  6E2A               	movwf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,c
  1058   001758  0E00               	movlw	high _lcd_1
  1059   00175A  6E2B               	movwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,c
  1060   00175C  0E01               	movlw	1
  1061   00175E  6E2C               	movwf	ecu_lcd_4bits_send_string_pos@row^0,c
  1062   001760  0E07               	movlw	7
  1063   001762  6E2D               	movwf	ecu_lcd_4bits_send_string_pos@col^0,c
  1064   001764  0E11               	movlw	low STR_4
  1065   001766  6E2E               	movwf	ecu_lcd_4bits_send_string_pos@str^0,c
  1066   001768  0E10               	movlw	high STR_4
  1067   00176A  6E2F               	movwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,c
  1068   00176C  EC66  F017         	call	_ecu_lcd_4bits_send_string_pos	;wreg free
  1069   001770  0100               	movlb	0	; () banked
  1070   001772  6FFA               	movwf	_ret& (0+255),b
  1071   001774                     
  1072                           ; BSR set to: 0
  1073                           ;application.c: 35:     ret = ecu_lcd_4bits_send_string_pos(&lcd_1, 2, 1, "Temp1: ");
  1074   001774  0EE2               	movlw	low _lcd_1
  1075   001776  6E2A               	movwf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,c
  1076   001778  0E00               	movlw	high _lcd_1
  1077   00177A  6E2B               	movwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,c
  1078   00177C  0E02               	movlw	2
  1079   00177E  6E2C               	movwf	ecu_lcd_4bits_send_string_pos@row^0,c
  1080   001780  0E01               	movlw	1
  1081   001782  6E2D               	movwf	ecu_lcd_4bits_send_string_pos@col^0,c
  1082   001784  0E1B               	movlw	low STR_5
  1083   001786  6E2E               	movwf	ecu_lcd_4bits_send_string_pos@str^0,c
  1084   001788  0E10               	movlw	high STR_5
  1085   00178A  6E2F               	movwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,c
  1086   00178C  EC66  F017         	call	_ecu_lcd_4bits_send_string_pos	;wreg free
  1087   001790  0100               	movlb	0	; () banked
  1088   001792  6FFA               	movwf	_ret& (0+255),b
  1089   001794                     
  1090                           ; BSR set to: 0
  1091                           ;application.c: 36:     ret = ecu_lcd_4bits_send_string_pos(&lcd_1, 3, 1, "Temp2: ");
  1092   001794  0EE2               	movlw	low _lcd_1
  1093   001796  6E2A               	movwf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,c
  1094   001798  0E00               	movlw	high _lcd_1
  1095   00179A  6E2B               	movwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,c
  1096   00179C  0E03               	movlw	3
  1097   00179E  6E2C               	movwf	ecu_lcd_4bits_send_string_pos@row^0,c
  1098   0017A0  0E01               	movlw	1
  1099   0017A2  6E2D               	movwf	ecu_lcd_4bits_send_string_pos@col^0,c
  1100   0017A4  0E23               	movlw	low STR_6
  1101   0017A6  6E2E               	movwf	ecu_lcd_4bits_send_string_pos@str^0,c
  1102   0017A8  0E10               	movlw	high STR_6
  1103   0017AA  6E2F               	movwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,c
  1104   0017AC  EC66  F017         	call	_ecu_lcd_4bits_send_string_pos	;wreg free
  1105   0017B0  0100               	movlb	0	; () banked
  1106   0017B2  6FFA               	movwf	_ret& (0+255),b
  1107   0017B4                     l6038:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;application.c: 39:     {;application.c: 40:         if(0 == ADC_Req)
  1111   0017B4  5060               	movf	_ADC_Req^0,w,c
  1112   0017B6  A4D8               	btfss	status,2,c
  1113   0017B8  EFE0  F00B         	goto	u5541
  1114   0017BC  EFE2  F00B         	goto	u5540
  1115   0017C0                     u5541:
  1116   0017C0  EFEE  F00B         	goto	l6042
  1117   0017C4                     u5540:
  1118   0017C4                     
  1119                           ; BSR set to: 0
  1120                           ;application.c: 41:         {;application.c: 42:             ret = mcal_adc_StartConvers
      +                          ion_Interrupt(&adc_obj, ADC_CHANNEL_AN0);
  1121   0017C4  0EDB               	movlw	low _adc_obj
  1122   0017C6  6E19               	movwf	mcal_adc_StartConversion_Interrupt@_adc_config^0,c
  1123   0017C8  0E00               	movlw	high _adc_obj
  1124   0017CA  6E1A               	movwf	(mcal_adc_StartConversion_Interrupt@_adc_config+1)^0,c
  1125   0017CC  0E00               	movlw	0
  1126   0017CE  6E1B               	movwf	mcal_adc_StartConversion_Interrupt@channel^0,c
  1127   0017D0  EC29  F018         	call	_mcal_adc_StartConversion_Interrupt	;wreg free
  1128   0017D4  0100               	movlb	0	; () banked
  1129   0017D6  6FFA               	movwf	_ret& (0+255),b
  1130                           
  1131                           ;application.c: 43:         }
  1132   0017D8  EF00  F00C         	goto	l6046
  1133   0017DC                     l6042:
  1134                           
  1135                           ; BSR set to: 0
  1136   0017DC  0460               	decf	_ADC_Req^0,w,c
  1137   0017DE  A4D8               	btfss	status,2,c
  1138   0017E0  EFF4  F00B         	goto	u5551
  1139   0017E4  EFF6  F00B         	goto	u5550
  1140   0017E8                     u5551:
  1141   0017E8  EF00  F00C         	goto	l6046
  1142   0017EC                     u5550:
  1143   0017EC                     
  1144                           ; BSR set to: 0
  1145                           ;application.c: 45:         {;application.c: 46:             ret = mcal_adc_StartConvers
      +                          ion_Interrupt(&adc_obj, ADC_CHANNEL_AN1);
  1146   0017EC  0EDB               	movlw	low _adc_obj
  1147   0017EE  6E19               	movwf	mcal_adc_StartConversion_Interrupt@_adc_config^0,c
  1148   0017F0  0E00               	movlw	high _adc_obj
  1149   0017F2  6E1A               	movwf	(mcal_adc_StartConversion_Interrupt@_adc_config+1)^0,c
  1150   0017F4  0E01               	movlw	1
  1151   0017F6  6E1B               	movwf	mcal_adc_StartConversion_Interrupt@channel^0,c
  1152   0017F8  EC29  F018         	call	_mcal_adc_StartConversion_Interrupt	;wreg free
  1153   0017FC  0100               	movlb	0	; () banked
  1154   0017FE  6FFA               	movwf	_ret& (0+255),b
  1155   001800                     l6046:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;application.c: 53:         lm35_res_1_celsius = lm35_res_1 * 4.883f;
  1159   001800  0E89               	movlw	137
  1160   001802  6E23               	movwf	___flmul@a^0,c
  1161   001804  0E41               	movlw	65
  1162   001806  6E24               	movwf	(___flmul@a+1)^0,c
  1163   001808  0E9C               	movlw	156
  1164   00180A  6E25               	movwf	(___flmul@a+2)^0,c
  1165   00180C  0E40               	movlw	64
  1166   00180E  6E26               	movwf	(___flmul@a+3)^0,c
  1167   001810  C063  F011         	movff	_lm35_res_1,___xxtofl@val
  1168   001814  C064  F012         	movff	_lm35_res_1+1,___xxtofl@val+1
  1169   001818  6A13               	clrf	(___xxtofl@val+2)^0,c
  1170   00181A  6A14               	clrf	(___xxtofl@val+3)^0,c
  1171   00181C  0E00               	movlw	0
  1172   00181E  ECE4  F00C         	call	___xxtofl
  1173   001822  C011  F01F         	movff	?___xxtofl,___flmul@b
  1174   001826  C012  F020         	movff	?___xxtofl+1,___flmul@b+1
  1175   00182A  C013  F021         	movff	?___xxtofl+2,___flmul@b+2
  1176   00182E  C014  F022         	movff	?___xxtofl+3,___flmul@b+3
  1177   001832  EC18  F008         	call	___flmul	;wreg free
  1178   001836  C01F  F038         	movff	?___flmul,___fltol@f1
  1179   00183A  C020  F039         	movff	?___flmul+1,___fltol@f1+1
  1180   00183E  C021  F03A         	movff	?___flmul+2,___fltol@f1+2
  1181   001842  C022  F03B         	movff	?___flmul+3,___fltol@f1+3
  1182   001846  ECA8  F011         	call	___fltol	;wreg free
  1183   00184A  C038  F05B         	movff	?___fltol,_lm35_res_1_celsius
  1184   00184E  C039  F05C         	movff	?___fltol+1,_lm35_res_1_celsius+1
  1185   001852                     
  1186                           ;application.c: 54:         lm35_res_1_celsius /= 10;
  1187   001852  C05B  F011         	movff	_lm35_res_1_celsius,___lwdiv@dividend
  1188   001856  C05C  F012         	movff	_lm35_res_1_celsius+1,___lwdiv@dividend+1
  1189   00185A  0E00               	movlw	0
  1190   00185C  6E14               	movwf	(___lwdiv@divisor+1)^0,c
  1191   00185E  0E0A               	movlw	10
  1192   001860  6E13               	movwf	___lwdiv@divisor^0,c
  1193   001862  EC2C  F016         	call	___lwdiv	;wreg free
  1194   001866  C011  F05B         	movff	?___lwdiv,_lm35_res_1_celsius
  1195   00186A  C012  F05C         	movff	?___lwdiv+1,_lm35_res_1_celsius+1
  1196   00186E                     
  1197                           ;application.c: 56:         lm35_res_2_celsius = lm35_res_2 * 4.883f;
  1198   00186E  0E89               	movlw	137
  1199   001870  6E23               	movwf	___flmul@a^0,c
  1200   001872  0E41               	movlw	65
  1201   001874  6E24               	movwf	(___flmul@a+1)^0,c
  1202   001876  0E9C               	movlw	156
  1203   001878  6E25               	movwf	(___flmul@a+2)^0,c
  1204   00187A  0E40               	movlw	64
  1205   00187C  6E26               	movwf	(___flmul@a+3)^0,c
  1206   00187E  C061  F011         	movff	_lm35_res_2,___xxtofl@val
  1207   001882  C062  F012         	movff	_lm35_res_2+1,___xxtofl@val+1
  1208   001886  6A13               	clrf	(___xxtofl@val+2)^0,c
  1209   001888  6A14               	clrf	(___xxtofl@val+3)^0,c
  1210   00188A  0E00               	movlw	0
  1211   00188C  ECE4  F00C         	call	___xxtofl
  1212   001890  C011  F01F         	movff	?___xxtofl,___flmul@b
  1213   001894  C012  F020         	movff	?___xxtofl+1,___flmul@b+1
  1214   001898  C013  F021         	movff	?___xxtofl+2,___flmul@b+2
  1215   00189C  C014  F022         	movff	?___xxtofl+3,___flmul@b+3
  1216   0018A0  EC18  F008         	call	___flmul	;wreg free
  1217   0018A4  C01F  F038         	movff	?___flmul,___fltol@f1
  1218   0018A8  C020  F039         	movff	?___flmul+1,___fltol@f1+1
  1219   0018AC  C021  F03A         	movff	?___flmul+2,___fltol@f1+2
  1220   0018B0  C022  F03B         	movff	?___flmul+3,___fltol@f1+3
  1221   0018B4  ECA8  F011         	call	___fltol	;wreg free
  1222   0018B8  C038  F059         	movff	?___fltol,_lm35_res_2_celsius
  1223   0018BC  C039  F05A         	movff	?___fltol+1,_lm35_res_2_celsius+1
  1224                           
  1225                           ;application.c: 57:         lm35_res_2_celsius /= 10;
  1226   0018C0  C059  F011         	movff	_lm35_res_2_celsius,___lwdiv@dividend
  1227   0018C4  C05A  F012         	movff	_lm35_res_2_celsius+1,___lwdiv@dividend+1
  1228   0018C8  0E00               	movlw	0
  1229   0018CA  6E14               	movwf	(___lwdiv@divisor+1)^0,c
  1230   0018CC  0E0A               	movlw	10
  1231   0018CE  6E13               	movwf	___lwdiv@divisor^0,c
  1232   0018D0  EC2C  F016         	call	___lwdiv	;wreg free
  1233   0018D4  C011  F059         	movff	?___lwdiv,_lm35_res_2_celsius
  1234   0018D8  C012  F05A         	movff	?___lwdiv+1,_lm35_res_2_celsius+1
  1235   0018DC                     
  1236                           ;application.c: 59:         ret = convert_uint16_to_string(lm35_res_1_celsius, lm35_res_
      +                          1_txt);
  1237   0018DC  C05B  F055         	movff	_lm35_res_1_celsius,convert_uint16_to_string@value
  1238   0018E0  C05C  F056         	movff	_lm35_res_1_celsius+1,convert_uint16_to_string@value+1
  1239   0018E4  0EB6               	movlw	low _lm35_res_1_txt
  1240   0018E6  6E57               	movwf	convert_uint16_to_string@str^0,c
  1241   0018E8  0E00               	movlw	high _lm35_res_1_txt
  1242   0018EA  6E58               	movwf	(convert_uint16_to_string@str+1)^0,c
  1243   0018EC  EC20  F014         	call	_convert_uint16_to_string	;wreg free
  1244   0018F0  0100               	movlb	0	; () banked
  1245   0018F2  6FFA               	movwf	_ret& (0+255),b
  1246   0018F4                     
  1247                           ; BSR set to: 0
  1248                           ;application.c: 60:         ret = convert_uint16_to_string(lm35_res_2_celsius, lm35_res_
      +                          2_txt);
  1249   0018F4  C059  F055         	movff	_lm35_res_2_celsius,convert_uint16_to_string@value
  1250   0018F8  C05A  F056         	movff	_lm35_res_2_celsius+1,convert_uint16_to_string@value+1
  1251   0018FC  0EAF               	movlw	low _lm35_res_2_txt
  1252   0018FE  6E57               	movwf	convert_uint16_to_string@str^0,c
  1253   001900  0E00               	movlw	high _lm35_res_2_txt
  1254   001902  6E58               	movwf	(convert_uint16_to_string@str+1)^0,c
  1255   001904  EC20  F014         	call	_convert_uint16_to_string	;wreg free
  1256   001908  0100               	movlb	0	; () banked
  1257   00190A  6FFA               	movwf	_ret& (0+255),b
  1258   00190C                     
  1259                           ; BSR set to: 0
  1260                           ;application.c: 62:         ret = ecu_lcd_4bits_send_string_pos(&lcd_1, 2, 7, lm35_res_1
      +                          _txt);
  1261   00190C  0EE2               	movlw	low _lcd_1
  1262   00190E  6E2A               	movwf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,c
  1263   001910  0E00               	movlw	high _lcd_1
  1264   001912  6E2B               	movwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,c
  1265   001914  0E02               	movlw	2
  1266   001916  6E2C               	movwf	ecu_lcd_4bits_send_string_pos@row^0,c
  1267   001918  0E07               	movlw	7
  1268   00191A  6E2D               	movwf	ecu_lcd_4bits_send_string_pos@col^0,c
  1269   00191C  0EB6               	movlw	low _lm35_res_1_txt
  1270   00191E  6E2E               	movwf	ecu_lcd_4bits_send_string_pos@str^0,c
  1271   001920  0E00               	movlw	high _lm35_res_1_txt
  1272   001922  6E2F               	movwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,c
  1273   001924  EC66  F017         	call	_ecu_lcd_4bits_send_string_pos	;wreg free
  1274   001928  0100               	movlb	0	; () banked
  1275   00192A  6FFA               	movwf	_ret& (0+255),b
  1276   00192C                     
  1277                           ; BSR set to: 0
  1278                           ;application.c: 63:         ret = ecu_lcd_4bits_send_string_pos(&lcd_1, 3, 7, lm35_res_2
      +                          _txt);
  1279   00192C  0EE2               	movlw	low _lcd_1
  1280   00192E  6E2A               	movwf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,c
  1281   001930  0E00               	movlw	high _lcd_1
  1282   001932  6E2B               	movwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,c
  1283   001934  0E03               	movlw	3
  1284   001936  6E2C               	movwf	ecu_lcd_4bits_send_string_pos@row^0,c
  1285   001938  0E07               	movlw	7
  1286   00193A  6E2D               	movwf	ecu_lcd_4bits_send_string_pos@col^0,c
  1287   00193C  0EAF               	movlw	low _lm35_res_2_txt
  1288   00193E  6E2E               	movwf	ecu_lcd_4bits_send_string_pos@str^0,c
  1289   001940  0E00               	movlw	high _lm35_res_2_txt
  1290   001942  6E2F               	movwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,c
  1291   001944  EC66  F017         	call	_ecu_lcd_4bits_send_string_pos	;wreg free
  1292   001948  0100               	movlb	0	; () banked
  1293   00194A  6FFA               	movwf	_ret& (0+255),b
  1294   00194C                     
  1295                           ; BSR set to: 0
  1296                           ;application.c: 65:         if(lm35_res_1_celsius > 20){
  1297   00194C  505C               	movf	(_lm35_res_1_celsius+1)^0,w,c
  1298   00194E  E109               	bnz	u5560
  1299   001950  0E15               	movlw	21
  1300   001952  5C5B               	subwf	_lm35_res_1_celsius^0,w,c
  1301   001954  A0D8               	btfss	status,0,c
  1302   001956  EFAF  F00C         	goto	u5561
  1303   00195A  EFB1  F00C         	goto	u5560
  1304   00195E                     u5561:
  1305   00195E  EFBB  F00C         	goto	l6064
  1306   001962                     u5560:
  1307   001962                     
  1308                           ; BSR set to: 0
  1309                           ;application.c: 66:             ret = ecu_dc_motor_move_right(&dc_motor_1);
  1310   001962  0EEA               	movlw	low _dc_motor_1
  1311   001964  6E1B               	movwf	ecu_dc_motor_move_right@_dc_motor_config^0,c
  1312   001966  0E00               	movlw	high _dc_motor_1
  1313   001968  6E1C               	movwf	(ecu_dc_motor_move_right@_dc_motor_config+1)^0,c
  1314   00196A  ECE3  F017         	call	_ecu_dc_motor_move_right	;wreg free
  1315   00196E  0100               	movlb	0	; () banked
  1316   001970  6FFA               	movwf	_ret& (0+255),b
  1317                           
  1318                           ;application.c: 67:         }
  1319   001972  EFC3  F00C         	goto	l6066
  1320   001976                     l6064:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;application.c: 69:             ret = ecu_dc_motor_stop(&dc_motor_1);
  1324   001976  0EEA               	movlw	low _dc_motor_1
  1325   001978  6E1F               	movwf	ecu_dc_motor_stop@_dc_motor_config^0,c
  1326   00197A  0E00               	movlw	high _dc_motor_1
  1327   00197C  6E20               	movwf	(ecu_dc_motor_stop@_dc_motor_config+1)^0,c
  1328   00197E  ECAF  F018         	call	_ecu_dc_motor_stop	;wreg free
  1329   001982  0100               	movlb	0	; () banked
  1330   001984  6FFA               	movwf	_ret& (0+255),b
  1331   001986                     l6066:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;application.c: 72:         if(lm35_res_2_celsius > 25){
  1335   001986  505A               	movf	(_lm35_res_2_celsius+1)^0,w,c
  1336   001988  E109               	bnz	u5570
  1337   00198A  0E1A               	movlw	26
  1338   00198C  5C59               	subwf	_lm35_res_2_celsius^0,w,c
  1339   00198E  A0D8               	btfss	status,0,c
  1340   001990  EFCC  F00C         	goto	u5571
  1341   001994  EFCE  F00C         	goto	u5570
  1342   001998                     u5571:
  1343   001998  EFD8  F00C         	goto	l6070
  1344   00199C                     u5570:
  1345   00199C                     
  1346                           ; BSR set to: 0
  1347                           ;application.c: 73:             ret = ecu_dc_motor_move_left(&dc_motor_2);
  1348   00199C  0EE8               	movlw	low _dc_motor_2
  1349   00199E  6E1B               	movwf	ecu_dc_motor_move_left@_dc_motor_config^0,c
  1350   0019A0  0E00               	movlw	high _dc_motor_2
  1351   0019A2  6E1C               	movwf	(ecu_dc_motor_move_left@_dc_motor_config+1)^0,c
  1352   0019A4  EC06  F018         	call	_ecu_dc_motor_move_left	;wreg free
  1353   0019A8  0100               	movlb	0	; () banked
  1354   0019AA  6FFA               	movwf	_ret& (0+255),b
  1355                           
  1356                           ;application.c: 74:         }
  1357   0019AC  EFDA  F00B         	goto	l6038
  1358   0019B0                     l6070:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;application.c: 76:             ret = ecu_dc_motor_stop(&dc_motor_2);
  1362   0019B0  0EE8               	movlw	low _dc_motor_2
  1363   0019B2  6E1F               	movwf	ecu_dc_motor_stop@_dc_motor_config^0,c
  1364   0019B4  0E00               	movlw	high _dc_motor_2
  1365   0019B6  6E20               	movwf	(ecu_dc_motor_stop@_dc_motor_config+1)^0,c
  1366   0019B8  ECAF  F018         	call	_ecu_dc_motor_stop	;wreg free
  1367   0019BC  0100               	movlb	0	; () banked
  1368   0019BE  6FFA               	movwf	_ret& (0+255),b
  1369   0019C0  EFDA  F00B         	goto	l6038
  1370   0019C4  EF07  F000         	goto	start
  1371   0019C8                     __end_of_main:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _mcal_adc_StartConversion_Interrupt *****************
  1375 ;; Defined at:
  1376 ;;		line 204 in file "MCAL_Layer/ADC/mcal_adc.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  _adc_config     2   24[COMRAM] PTR const struct .
  1379 ;;		 -> adc_obj(7), 
  1380 ;;  channel         1   26[COMRAM] enum E2867
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  ret             1   27[COMRAM] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      unsigned char 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        4 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 6
  1399 ;; This function calls:
  1400 ;;		_mcal_adc_SelectChannel
  1401 ;;		_mcal_adc_StartConversion
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408   003052                     __ptext1:
  1409                           	callstack 0
  1410   003052                     _mcal_adc_StartConversion_Interrupt:
  1411                           	callstack 24
  1412   003052                     
  1413                           ;MCAL_Layer/ADC/mcal_adc.c: 204: Std_ReturnType mcal_adc_StartConversion_Interrupt(const
      +                           adc_config_t* _adc_config, adc_channel_select_t channel);MCAL_Layer/ADC/mcal_adc.c: 205
      +                          : {;MCAL_Layer/ADC/mcal_adc.c: 206:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1414   003052  0E01               	movlw	1
  1415   003054  6E1C               	movwf	mcal_adc_StartConversion_Interrupt@ret^0,c
  1416   003056                     
  1417                           ;MCAL_Layer/ADC/mcal_adc.c: 208:     if(((void*)0) == _adc_config)
  1418   003056  5019               	movf	mcal_adc_StartConversion_Interrupt@_adc_config^0,w,c
  1419   003058  101A               	iorwf	(mcal_adc_StartConversion_Interrupt@_adc_config+1)^0,w,c
  1420   00305A  A4D8               	btfss	status,2,c
  1421   00305C  EF32  F018         	goto	u3571
  1422   003060  EF34  F018         	goto	u3570
  1423   003064                     u3571:
  1424   003064  EF38  F018         	goto	l396
  1425   003068                     u3570:
  1426   003068                     
  1427                           ;MCAL_Layer/ADC/mcal_adc.c: 209:     {;MCAL_Layer/ADC/mcal_adc.c: 210:         ret = (St
      +                          d_ReturnType)0x00;
  1428   003068  0E00               	movlw	0
  1429   00306A  6E1C               	movwf	mcal_adc_StartConversion_Interrupt@ret^0,c
  1430                           
  1431                           ;MCAL_Layer/ADC/mcal_adc.c: 211:     }
  1432   00306C  EF49  F018         	goto	l4578
  1433   003070                     l396:
  1434                           
  1435                           ;MCAL_Layer/ADC/mcal_adc.c: 214:     {;MCAL_Layer/ADC/mcal_adc.c: 215:         (PIR1bits
      +                          .ADIF = 0);
  1436   003070  9C9E               	bcf	158,6,c	;volatile
  1437   003072                     
  1438                           ;MCAL_Layer/ADC/mcal_adc.c: 217:         ret &= mcal_adc_SelectChannel(_adc_config, chan
      +                          nel);
  1439   003072  C019  F014         	movff	mcal_adc_StartConversion_Interrupt@_adc_config,mcal_adc_SelectChannel@_adc_config
  1440   003076  C01A  F015         	movff	mcal_adc_StartConversion_Interrupt@_adc_config+1,mcal_adc_SelectChannel@_adc_conf
      +                          ig+1
  1441   00307A  C01B  F016         	movff	mcal_adc_StartConversion_Interrupt@channel,mcal_adc_SelectChannel@channel
  1442   00307E  ECED  F018         	call	_mcal_adc_SelectChannel	;wreg free
  1443   003082  161C               	andwf	mcal_adc_StartConversion_Interrupt@ret^0,f,c
  1444                           
  1445                           ;MCAL_Layer/ADC/mcal_adc.c: 219:         ret &= mcal_adc_StartConversion(_adc_config);
  1446   003084  C019  F011         	movff	mcal_adc_StartConversion_Interrupt@_adc_config,mcal_adc_StartConversion@_adc_conf
      +                          ig
  1447   003088  C01A  F012         	movff	mcal_adc_StartConversion_Interrupt@_adc_config+1,mcal_adc_StartConversion@_adc_co
      +                          nfig+1
  1448   00308C  ECB6  F019         	call	_mcal_adc_StartConversion	;wreg free
  1449   003090  161C               	andwf	mcal_adc_StartConversion_Interrupt@ret^0,f,c
  1450   003092                     l4578:
  1451                           
  1452                           ;MCAL_Layer/ADC/mcal_adc.c: 222:     return ret;
  1453   003092  501C               	movf	mcal_adc_StartConversion_Interrupt@ret^0,w,c
  1454   003094  0012               	return		;funcret
  1455   003096                     __end_of_mcal_adc_StartConversion_Interrupt:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _mcal_adc_StartConversion *****************
  1459 ;; Defined at:
  1460 ;;		line 117 in file "MCAL_Layer/ADC/mcal_adc.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  _adc_config     2   16[COMRAM] PTR const struct .
  1463 ;;		 -> adc_obj(7), 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  ret             1   18[COMRAM] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      unsigned char 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 4
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_mcal_adc_StartConversion_Interrupt
  1486 ;;		_mcal_adc_GetConversion_Blocking
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text2
  1491   00336C                     __ptext2:
  1492                           	callstack 0
  1493   00336C                     _mcal_adc_StartConversion:
  1494                           	callstack 25
  1495   00336C                     
  1496                           ;MCAL_Layer/ADC/mcal_adc.c: 117: Std_ReturnType mcal_adc_StartConversion(const adc_confi
      +                          g_t* _adc_config);MCAL_Layer/ADC/mcal_adc.c: 118: {;MCAL_Layer/ADC/mcal_adc.c: 119:     
      +                          Std_ReturnType ret = (Std_ReturnType)0x01;
  1497   00336C  0E01               	movlw	1
  1498   00336E  6E13               	movwf	mcal_adc_StartConversion@ret^0,c
  1499   003370                     
  1500                           ;MCAL_Layer/ADC/mcal_adc.c: 121:     if(((void*)0) == _adc_config)
  1501   003370  5011               	movf	mcal_adc_StartConversion@_adc_config^0,w,c
  1502   003372  1012               	iorwf	(mcal_adc_StartConversion@_adc_config+1)^0,w,c
  1503   003374  A4D8               	btfss	status,2,c
  1504   003376  EFBF  F019         	goto	u3361
  1505   00337A  EFC1  F019         	goto	u3360
  1506   00337E                     u3361:
  1507   00337E  EFC5  F019         	goto	l363
  1508   003382                     u3360:
  1509   003382                     
  1510                           ;MCAL_Layer/ADC/mcal_adc.c: 122:     {;MCAL_Layer/ADC/mcal_adc.c: 123:         ret = (St
      +                          d_ReturnType)0x00;
  1511   003382  0E00               	movlw	0
  1512   003384  6E13               	movwf	mcal_adc_StartConversion@ret^0,c
  1513                           
  1514                           ;MCAL_Layer/ADC/mcal_adc.c: 124:     }
  1515   003386  EFC6  F019         	goto	l4394
  1516   00338A                     l363:
  1517                           
  1518                           ;MCAL_Layer/ADC/mcal_adc.c: 127:     {;MCAL_Layer/ADC/mcal_adc.c: 128:         (ADCON0bi
      +                          ts.GODONE = 1);
  1519   00338A  82C2               	bsf	194,1,c	;volatile
  1520   00338C                     l4394:
  1521                           
  1522                           ;MCAL_Layer/ADC/mcal_adc.c: 131:     return ret;
  1523   00338C  5013               	movf	mcal_adc_StartConversion@ret^0,w,c
  1524   00338E  0012               	return		;funcret
  1525   003390                     __end_of_mcal_adc_StartConversion:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _mcal_adc_SelectChannel *****************
  1529 ;; Defined at:
  1530 ;;		line 98 in file "MCAL_Layer/ADC/mcal_adc.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  _adc_config     2   19[COMRAM] PTR const struct .
  1533 ;;		 -> adc_obj(7), 
  1534 ;;  channel         1   21[COMRAM] enum E2867
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  ret             1   23[COMRAM] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      unsigned char 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        5 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 5
  1553 ;; This function calls:
  1554 ;;		_adc_input_channel_port_configure
  1555 ;; This function is called by:
  1556 ;;		_mcal_adc_StartConversion_Interrupt
  1557 ;;		_mcal_adc_GetConversion_Blocking
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text3
  1562   0031DA                     __ptext3:
  1563                           	callstack 0
  1564   0031DA                     _mcal_adc_SelectChannel:
  1565                           	callstack 24
  1566   0031DA                     
  1567                           ;MCAL_Layer/ADC/mcal_adc.c: 98: Std_ReturnType mcal_adc_SelectChannel(const adc_config_t
      +                          * _adc_config, adc_channel_select_t channel);MCAL_Layer/ADC/mcal_adc.c: 99: {;MCAL_Layer
      +                          /ADC/mcal_adc.c: 100:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1568   0031DA  0E01               	movlw	1
  1569   0031DC  6E18               	movwf	mcal_adc_SelectChannel@ret^0,c
  1570   0031DE                     
  1571                           ;MCAL_Layer/ADC/mcal_adc.c: 102:     if(((void*)0) == _adc_config)
  1572   0031DE  5014               	movf	mcal_adc_SelectChannel@_adc_config^0,w,c
  1573   0031E0  1015               	iorwf	(mcal_adc_SelectChannel@_adc_config+1)^0,w,c
  1574   0031E2  A4D8               	btfss	status,2,c
  1575   0031E4  EFF6  F018         	goto	u3351
  1576   0031E8  EFF8  F018         	goto	u3350
  1577   0031EC                     u3351:
  1578   0031EC  EFFC  F018         	goto	l4380
  1579   0031F0                     u3350:
  1580   0031F0                     
  1581                           ;MCAL_Layer/ADC/mcal_adc.c: 103:     {;MCAL_Layer/ADC/mcal_adc.c: 104:         ret = (St
      +                          d_ReturnType)0x00;
  1582   0031F0  0E00               	movlw	0
  1583   0031F2  6E18               	movwf	mcal_adc_SelectChannel@ret^0,c
  1584                           
  1585                           ;MCAL_Layer/ADC/mcal_adc.c: 105:     }
  1586   0031F4  EF08  F019         	goto	l4384
  1587   0031F8                     l4380:
  1588                           
  1589                           ;MCAL_Layer/ADC/mcal_adc.c: 108:     {;MCAL_Layer/ADC/mcal_adc.c: 110:         ADCON0bit
      +                          s.CHS = channel;
  1590   0031F8  C016  F017         	movff	mcal_adc_SelectChannel@channel,??_mcal_adc_SelectChannel
  1591   0031FC  4617               	rlncf	??_mcal_adc_SelectChannel^0,f,c
  1592   0031FE  4617               	rlncf	??_mcal_adc_SelectChannel^0,f,c
  1593   003200  50C2               	movf	194,w,c	;volatile
  1594   003202  1817               	xorwf	??_mcal_adc_SelectChannel^0,w,c
  1595   003204  0BC3               	andlw	-61
  1596   003206  1817               	xorwf	??_mcal_adc_SelectChannel^0,w,c
  1597   003208  6EC2               	movwf	194,c	;volatile
  1598   00320A                     
  1599                           ;MCAL_Layer/ADC/mcal_adc.c: 111:         adc_input_channel_port_configure(channel);
  1600   00320A  5016               	movf	mcal_adc_SelectChannel@channel^0,w,c
  1601   00320C  EC2B  F012         	call	_adc_input_channel_port_configure
  1602   003210                     l4384:
  1603                           
  1604                           ;MCAL_Layer/ADC/mcal_adc.c: 114:     return ret;
  1605   003210  5018               	movf	mcal_adc_SelectChannel@ret^0,w,c
  1606   003212  0012               	return		;funcret
  1607   003214                     __end_of_mcal_adc_SelectChannel:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _ecu_lcd_4bits_send_string_pos *****************
  1611 ;; Defined at:
  1612 ;;		line 141 in file "ECU_Layer/LCD/ecu_lcd.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  _lcd_4bits_c    2   41[COMRAM] PTR const struct .
  1615 ;;		 -> lcd_1(6), 
  1616 ;;  row             1   43[COMRAM] unsigned char 
  1617 ;;  col             1   44[COMRAM] unsigned char 
  1618 ;;  str             2   45[COMRAM] PTR unsigned char 
  1619 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_6(8), STR_5(8), 
  1620 ;;		 -> STR_4(10), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  ret             1   47[COMRAM] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        7 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 8
  1639 ;; This function calls:
  1640 ;;		_ecu_lcd_4bits_send_string
  1641 ;;		_lcd_4bits_set_cursor
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text4
  1648   002ECC                     __ptext4:
  1649                           	callstack 0
  1650   002ECC                     _ecu_lcd_4bits_send_string_pos:
  1651                           	callstack 22
  1652   002ECC                     
  1653                           ;ECU_Layer/LCD/ecu_lcd.c: 145:     if(((void*)0) == _lcd_4bits_config || ((void*)0) == s
      +                          tr)
  1654   002ECC  502A               	movf	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config^0,w,c
  1655   002ECE  102B               	iorwf	(ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1)^0,w,c
  1656   002ED0  B4D8               	btfsc	status,2,c
  1657   002ED2  EF6D  F017         	goto	u3451
  1658   002ED6  EF6F  F017         	goto	u3450
  1659   002EDA                     u3451:
  1660   002EDA  EF78  F017         	goto	l4478
  1661   002EDE                     u3450:
  1662   002EDE  502E               	movf	ecu_lcd_4bits_send_string_pos@str^0,w,c
  1663   002EE0  102F               	iorwf	(ecu_lcd_4bits_send_string_pos@str+1)^0,w,c
  1664   002EE2  A4D8               	btfss	status,2,c
  1665   002EE4  EF76  F017         	goto	u3461
  1666   002EE8  EF78  F017         	goto	u3460
  1667   002EEC                     u3461:
  1668   002EEC  EF7C  F017         	goto	l4480
  1669   002EF0                     u3460:
  1670   002EF0                     l4478:
  1671                           
  1672                           ;ECU_Layer/LCD/ecu_lcd.c: 146:     {;ECU_Layer/LCD/ecu_lcd.c: 147:         ret = (Std_Re
      +                          turnType)0x00;
  1673   002EF0  0E00               	movlw	0
  1674   002EF2  6E30               	movwf	ecu_lcd_4bits_send_string_pos@ret^0,c
  1675                           
  1676                           ;ECU_Layer/LCD/ecu_lcd.c: 148:     }
  1677   002EF4  EF91  F017         	goto	l4484
  1678   002EF8                     l4480:
  1679   002EF8  C02A  F023         	movff	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config,lcd_4bits_set_cursor@_lcd_4bits_c
      +                          onfig
  1680   002EFC  C02B  F024         	movff	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1,lcd_4bits_set_cursor@_lcd_4bits
      +                          _config+1
  1681   002F00  C02C  F025         	movff	ecu_lcd_4bits_send_string_pos@row,lcd_4bits_set_cursor@row
  1682   002F04  C02D  F026         	movff	ecu_lcd_4bits_send_string_pos@col,lcd_4bits_set_cursor@col
  1683   002F08  ECD5  F014         	call	_lcd_4bits_set_cursor	;wreg free
  1684   002F0C                     
  1685                           ;ECU_Layer/LCD/ecu_lcd.c: 153:         ret = ecu_lcd_4bits_send_string(_lcd_4bits_config
      +                          , str);
  1686   002F0C  C02A  F023         	movff	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config,ecu_lcd_4bits_send_string@_lcd_4b
      +                          its_config
  1687   002F10  C02B  F024         	movff	ecu_lcd_4bits_send_string_pos@_lcd_4bits_config+1,ecu_lcd_4bits_send_string@_lcd_
      +                          4bits_config+1
  1688   002F14  C02E  F025         	movff	ecu_lcd_4bits_send_string_pos@str,ecu_lcd_4bits_send_string@str
  1689   002F18  C02F  F026         	movff	ecu_lcd_4bits_send_string_pos@str+1,ecu_lcd_4bits_send_string@str+1
  1690   002F1C  EC2B  F015         	call	_ecu_lcd_4bits_send_string	;wreg free
  1691   002F20  6E30               	movwf	ecu_lcd_4bits_send_string_pos@ret^0,c
  1692   002F22                     l4484:
  1693                           
  1694                           ;ECU_Layer/LCD/ecu_lcd.c: 156:     return ret;
  1695   002F22  5030               	movf	ecu_lcd_4bits_send_string_pos@ret^0,w,c
  1696   002F24  0012               	return		;funcret
  1697   002F26                     __end_of_ecu_lcd_4bits_send_string_pos:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _lcd_4bits_set_cursor *****************
  1701 ;; Defined at:
  1702 ;;		line 458 in file "ECU_Layer/LCD/ecu_lcd.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  _lcd_4bits_c    2   34[COMRAM] PTR const struct .
  1705 ;;		 -> lcd_1(6), 
  1706 ;;  row             1   36[COMRAM] unsigned char 
  1707 ;;  col             1   37[COMRAM] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  ret             1   40[COMRAM] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      unsigned char 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;Total ram usage:        7 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 7
  1726 ;; This function calls:
  1727 ;;		_ecu_lcd_4bits_send_command
  1728 ;; This function is called by:
  1729 ;;		_ecu_lcd_4bits_send_string_pos
  1730 ;;		_ecu_lcd_4bits_send_char_data_pos
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text5
  1735   0029AA                     __ptext5:
  1736                           	callstack 0
  1737   0029AA                     _lcd_4bits_set_cursor:
  1738                           	callstack 22
  1739   0029AA                     
  1740                           ;ECU_Layer/LCD/ecu_lcd.c: 461:     col--;
  1741   0029AA  0626               	decf	lcd_4bits_set_cursor@col^0,f,c
  1742                           
  1743                           ;ECU_Layer/LCD/ecu_lcd.c: 463:     switch(row)
  1744   0029AC  EF0C  F015         	goto	l4236
  1745   0029B0                     l4226:
  1746                           
  1747                           ;ECU_Layer/LCD/ecu_lcd.c: 466:             ret = ecu_lcd_4bits_send_command(_lcd_4bits_c
      +                          onfig, (0x80 + col));
  1748   0029B0  C023  F01F         	movff	lcd_4bits_set_cursor@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_conf
      +                          ig
  1749   0029B4  C024  F020         	movff	lcd_4bits_set_cursor@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bits_co
      +                          nfig+1
  1750   0029B8  5026               	movf	lcd_4bits_set_cursor@col^0,w,c
  1751   0029BA  0F80               	addlw	128
  1752   0029BC  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1753   0029BE  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  1754   0029C2  6E29               	movwf	lcd_4bits_set_cursor@ret^0,c
  1755                           
  1756                           ;ECU_Layer/LCD/ecu_lcd.c: 467:             break;
  1757   0029C4  EF29  F015         	goto	l4238
  1758   0029C8                     l4228:
  1759                           
  1760                           ;ECU_Layer/LCD/ecu_lcd.c: 470:             ret = ecu_lcd_4bits_send_command(_lcd_4bits_c
      +                          onfig, (0xC0 + col));
  1761   0029C8  C023  F01F         	movff	lcd_4bits_set_cursor@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_conf
      +                          ig
  1762   0029CC  C024  F020         	movff	lcd_4bits_set_cursor@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bits_co
      +                          nfig+1
  1763   0029D0  5026               	movf	lcd_4bits_set_cursor@col^0,w,c
  1764   0029D2  0FC0               	addlw	192
  1765   0029D4  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1766   0029D6  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  1767   0029DA  6E29               	movwf	lcd_4bits_set_cursor@ret^0,c
  1768                           
  1769                           ;ECU_Layer/LCD/ecu_lcd.c: 471:             break;
  1770   0029DC  EF29  F015         	goto	l4238
  1771   0029E0                     l4230:
  1772                           
  1773                           ;ECU_Layer/LCD/ecu_lcd.c: 474:             ret = ecu_lcd_4bits_send_command(_lcd_4bits_c
      +                          onfig, (0x94 + col));
  1774   0029E0  C023  F01F         	movff	lcd_4bits_set_cursor@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_conf
      +                          ig
  1775   0029E4  C024  F020         	movff	lcd_4bits_set_cursor@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bits_co
      +                          nfig+1
  1776   0029E8  5026               	movf	lcd_4bits_set_cursor@col^0,w,c
  1777   0029EA  0F94               	addlw	148
  1778   0029EC  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1779   0029EE  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  1780   0029F2  6E29               	movwf	lcd_4bits_set_cursor@ret^0,c
  1781                           
  1782                           ;ECU_Layer/LCD/ecu_lcd.c: 475:             break;
  1783   0029F4  EF29  F015         	goto	l4238
  1784   0029F8                     l4232:
  1785                           
  1786                           ;ECU_Layer/LCD/ecu_lcd.c: 478:             ret = ecu_lcd_4bits_send_command(_lcd_4bits_c
      +                          onfig, (0xD4 + col));
  1787   0029F8  C023  F01F         	movff	lcd_4bits_set_cursor@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_conf
      +                          ig
  1788   0029FC  C024  F020         	movff	lcd_4bits_set_cursor@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bits_co
      +                          nfig+1
  1789   002A00  5026               	movf	lcd_4bits_set_cursor@col^0,w,c
  1790   002A02  0FD4               	addlw	212
  1791   002A04  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1792   002A06  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  1793   002A0A  6E29               	movwf	lcd_4bits_set_cursor@ret^0,c
  1794                           
  1795                           ;ECU_Layer/LCD/ecu_lcd.c: 479:             break;
  1796   002A0C  EF29  F015         	goto	l4238
  1797   002A10                     l4234:
  1798                           
  1799                           ;ECU_Layer/LCD/ecu_lcd.c: 482:             ret = (Std_ReturnType)0x00;
  1800   002A10  0E00               	movlw	0
  1801   002A12  6E29               	movwf	lcd_4bits_set_cursor@ret^0,c
  1802                           
  1803                           ;ECU_Layer/LCD/ecu_lcd.c: 483:     }
  1804   002A14  EF29  F015         	goto	l4238
  1805   002A18                     l4236:
  1806   002A18  5025               	movf	lcd_4bits_set_cursor@row^0,w,c
  1807   002A1A  6E27               	movwf	??_lcd_4bits_set_cursor^0,c
  1808   002A1C  6A28               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  1809                           
  1810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 1, Range of values is 0 to 0
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            4     3 (average)
  1816                           ;	Chosen strategy is simple_byte
  1817   002A1E  5028               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  1818   002A20  0A00               	xorlw	0	; case 0
  1819   002A22  B4D8               	btfsc	status,2,c
  1820   002A24  EF16  F015         	goto	l6152
  1821   002A28  EF08  F015         	goto	l4234
  1822   002A2C                     l6152:
  1823                           
  1824                           ; Switch size 1, requested type "simple"
  1825                           ; Number of cases is 4, Range of values is 1 to 4
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte           13     7 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830   002A2C  5027               	movf	??_lcd_4bits_set_cursor^0,w,c
  1831   002A2E  0A01               	xorlw	1	; case 1
  1832   002A30  B4D8               	btfsc	status,2,c
  1833   002A32  EFD8  F014         	goto	l4226
  1834   002A36  0A03               	xorlw	3	; case 2
  1835   002A38  B4D8               	btfsc	status,2,c
  1836   002A3A  EFE4  F014         	goto	l4228
  1837   002A3E  0A01               	xorlw	1	; case 3
  1838   002A40  B4D8               	btfsc	status,2,c
  1839   002A42  EFF0  F014         	goto	l4230
  1840   002A46  0A07               	xorlw	7	; case 4
  1841   002A48  B4D8               	btfsc	status,2,c
  1842   002A4A  EFFC  F014         	goto	l4232
  1843   002A4E  EF08  F015         	goto	l4234
  1844   002A52                     l4238:
  1845                           
  1846                           ;ECU_Layer/LCD/ecu_lcd.c: 485:     return ret;
  1847   002A52  5029               	movf	lcd_4bits_set_cursor@ret^0,w,c
  1848   002A54  0012               	return		;funcret
  1849   002A56                     __end_of_lcd_4bits_set_cursor:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _ecu_lcd_4bits_send_string *****************
  1853 ;; Defined at:
  1854 ;;		line 120 in file "ECU_Layer/LCD/ecu_lcd.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  _lcd_4bits_c    2   34[COMRAM] PTR const struct .
  1857 ;;		 -> lcd_1(6), 
  1858 ;;  str             2   36[COMRAM] PTR unsigned char 
  1859 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), STR_6(8), STR_5(8), 
  1860 ;;		 -> STR_4(10), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  ret             1   38[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        5 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 7
  1879 ;; This function calls:
  1880 ;;		_ecu_lcd_4bits_send_char_data
  1881 ;; This function is called by:
  1882 ;;		_ecu_lcd_4bits_send_string_pos
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text6
  1887   002A56                     __ptext6:
  1888                           	callstack 0
  1889   002A56                     _ecu_lcd_4bits_send_string:
  1890                           	callstack 22
  1891   002A56                     
  1892                           ;ECU_Layer/LCD/ecu_lcd.c: 120: Std_ReturnType ecu_lcd_4bits_send_string(const lcd_4bits_
      +                          config_t* _lcd_4bits_config, uint8* str);ECU_Layer/LCD/ecu_lcd.c: 121: {;ECU_Layer/LCD/e
      +                          cu_lcd.c: 122:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1893   002A56  0E01               	movlw	1
  1894   002A58  6E27               	movwf	ecu_lcd_4bits_send_string@ret^0,c
  1895   002A5A                     
  1896                           ;ECU_Layer/LCD/ecu_lcd.c: 124:     if(((void*)0) == _lcd_4bits_config || ((void*)0) == s
      +                          tr)
  1897   002A5A  5023               	movf	ecu_lcd_4bits_send_string@_lcd_4bits_config^0,w,c
  1898   002A5C  1024               	iorwf	(ecu_lcd_4bits_send_string@_lcd_4bits_config+1)^0,w,c
  1899   002A5E  B4D8               	btfsc	status,2,c
  1900   002A60  EF34  F015         	goto	u3211
  1901   002A64  EF36  F015         	goto	u3210
  1902   002A68                     u3211:
  1903   002A68  EF3F  F015         	goto	l4252
  1904   002A6C                     u3210:
  1905   002A6C  5025               	movf	ecu_lcd_4bits_send_string@str^0,w,c
  1906   002A6E  1026               	iorwf	(ecu_lcd_4bits_send_string@str+1)^0,w,c
  1907   002A70  A4D8               	btfss	status,2,c
  1908   002A72  EF3D  F015         	goto	u3221
  1909   002A76  EF3F  F015         	goto	u3220
  1910   002A7A                     u3221:
  1911   002A7A  EF5E  F015         	goto	l4258
  1912   002A7E                     u3220:
  1913   002A7E                     l4252:
  1914                           
  1915                           ;ECU_Layer/LCD/ecu_lcd.c: 125:     {;ECU_Layer/LCD/ecu_lcd.c: 126:         ret = (Std_Re
      +                          turnType)0x00;
  1916   002A7E  0E00               	movlw	0
  1917   002A80  6E27               	movwf	ecu_lcd_4bits_send_string@ret^0,c
  1918                           
  1919                           ;ECU_Layer/LCD/ecu_lcd.c: 127:     }
  1920   002A82  EF77  F015         	goto	l4260
  1921   002A86                     l4254:
  1922                           
  1923                           ;ECU_Layer/LCD/ecu_lcd.c: 132:         {;ECU_Layer/LCD/ecu_lcd.c: 133:             ret =
      +                           ecu_lcd_4bits_send_char_data(_lcd_4bits_config, *str);
  1924   002A86  C023  F01F         	movff	ecu_lcd_4bits_send_string@_lcd_4bits_config,ecu_lcd_4bits_send_char_data@_lcd_4bi
      +                          ts_config
  1925   002A8A  C024  F020         	movff	ecu_lcd_4bits_send_string@_lcd_4bits_config+1,ecu_lcd_4bits_send_char_data@_lcd_4
      +                          bits_config+1
  1926   002A8E  C025  FFF6         	movff	ecu_lcd_4bits_send_string@str,tblptrl
  1927   002A92  C026  FFF7         	movff	ecu_lcd_4bits_send_string@str+1,tblptrh
  1928   002A96  0E00               	movlw	low (__smallconst shr (0+16))
  1929   002A98  6EF8               	movwf	tblptru,c
  1930   002A9A  0E0F               	movlw	(high __ramtop+-1)
  1931   002A9C  64F7               	cpfsgt	tblptrh,c
  1932   002A9E  D003               	bra	u3237
  1933   002AA0  0008               	tblrd		*
  1934   002AA2  50F5               	movf	tablat,w,c
  1935   002AA4  D005               	bra	u3230
  1936   002AA6                     u3237:
  1937   002AA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1938   002AAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1939   002AAE  50EF               	movf	indf0,w,c
  1940   002AB0                     u3230:
  1941   002AB0  6E21               	movwf	ecu_lcd_4bits_send_char_data@data^0,c
  1942   002AB2  ECB6  F015         	call	_ecu_lcd_4bits_send_char_data	;wreg free
  1943   002AB6  6E27               	movwf	ecu_lcd_4bits_send_string@ret^0,c
  1944   002AB8                     
  1945                           ;ECU_Layer/LCD/ecu_lcd.c: 134:             str++;
  1946   002AB8  4A25               	infsnz	ecu_lcd_4bits_send_string@str^0,f,c
  1947   002ABA  2A26               	incf	(ecu_lcd_4bits_send_string@str+1)^0,f,c
  1948   002ABC                     l4258:
  1949                           
  1950                           ;ECU_Layer/LCD/ecu_lcd.c: 131:         while(*str)
  1951   002ABC  C025  FFF6         	movff	ecu_lcd_4bits_send_string@str,tblptrl
  1952   002AC0  C026  FFF7         	movff	ecu_lcd_4bits_send_string@str+1,tblptrh
  1953   002AC4  0E00               	movlw	low (__smallconst shr (0+16))
  1954   002AC6  6EF8               	movwf	tblptru,c
  1955   002AC8  0E0F               	movlw	(high __ramtop+-1)
  1956   002ACA  64F7               	cpfsgt	tblptrh,c
  1957   002ACC  D003               	bra	u3247
  1958   002ACE  0008               	tblrd		*
  1959   002AD0  50F5               	movf	tablat,w,c
  1960   002AD2  D005               	bra	u3240
  1961   002AD4                     u3247:
  1962   002AD4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1963   002AD8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1964   002ADC  50EF               	movf	indf0,w,c
  1965   002ADE                     u3240:
  1966   002ADE  0900               	iorlw	0
  1967   002AE0  A4D8               	btfss	status,2,c
  1968   002AE2  EF75  F015         	goto	u3251
  1969   002AE6  EF77  F015         	goto	u3250
  1970   002AEA                     u3251:
  1971   002AEA  EF43  F015         	goto	l4254
  1972   002AEE                     u3250:
  1973   002AEE                     l4260:
  1974                           
  1975                           ;ECU_Layer/LCD/ecu_lcd.c: 138:     return ret;
  1976   002AEE  5027               	movf	ecu_lcd_4bits_send_string@ret^0,w,c
  1977   002AF0  0012               	return		;funcret
  1978   002AF2                     __end_of_ecu_lcd_4bits_send_string:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _ecu_lcd_4bits_send_char_data *****************
  1982 ;; Defined at:
  1983 ;;		line 79 in file "ECU_Layer/LCD/ecu_lcd.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  _lcd_4bits_c    2   30[COMRAM] PTR const struct .
  1986 ;;		 -> lcd_1(6), 
  1987 ;;  data            1   32[COMRAM] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  ret             1   33[COMRAM] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      unsigned char 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; Hardware stack levels required when called: 6
  2006 ;; This function calls:
  2007 ;;		_gpio_pin_write_logic
  2008 ;;		_lcd_4bits_send_enable_signal
  2009 ;;		_lcd_send_4bits
  2010 ;; This function is called by:
  2011 ;;		_ecu_lcd_4bits_send_string
  2012 ;;		_ecu_lcd_4bits_send_char_data_pos
  2013 ;;		_ecu_lcd_4bits_send_custom_char
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text7
  2018   002B6C                     __ptext7:
  2019                           	callstack 0
  2020   002B6C                     _ecu_lcd_4bits_send_char_data:
  2021                           	callstack 22
  2022   002B6C                     
  2023                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     if(((void*)0) == _lcd_4bits_config)
  2024   002B6C  501F               	movf	ecu_lcd_4bits_send_char_data@_lcd_4bits_config^0,w,c
  2025   002B6E  1020               	iorwf	(ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1)^0,w,c
  2026   002B70  A4D8               	btfss	status,2,c
  2027   002B72  EFBD  F015         	goto	u3121
  2028   002B76  EFBF  F015         	goto	u3120
  2029   002B7A                     u3121:
  2030   002B7A  EFC3  F015         	goto	l4134
  2031   002B7E                     u3120:
  2032   002B7E                     
  2033                           ;ECU_Layer/LCD/ecu_lcd.c: 84:     {;ECU_Layer/LCD/ecu_lcd.c: 85:         ret = (Std_Retu
      +                          rnType)0x00;
  2034   002B7E  0E00               	movlw	0
  2035   002B80  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2036                           
  2037                           ;ECU_Layer/LCD/ecu_lcd.c: 86:     }
  2038   002B82  EFEF  F015         	goto	l4136
  2039   002B86                     l4134:
  2040                           
  2041                           ;ECU_Layer/LCD/ecu_lcd.c: 89:     {;ECU_Layer/LCD/ecu_lcd.c: 90:         ret = gpio_pin_
      +                          write_logic(&_lcd_4bits_config->lcd_rs, GPIO_HIGH);
  2042   002B86  C01F  F011         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config,gpio_pin_write_logic@_pin_config
  2043   002B8A  C020  F012         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1,gpio_pin_write_logic@_pin_config
      +                          +1
  2044   002B8E  0E01               	movlw	1
  2045   002B90  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  2046   002B92  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  2047   002B96  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2048                           
  2049                           ;ECU_Layer/LCD/ecu_lcd.c: 92:         ret = lcd_send_4bits(_lcd_4bits_config, (data >> 4
      +                          ) & 0x0F);
  2050   002B98  C01F  F01B         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  2051   002B9C  C020  F01C         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config
      +                          +1
  2052   002BA0  3821               	swapf	ecu_lcd_4bits_send_char_data@data^0,w,c
  2053   002BA2  0B0F               	andlw	15
  2054   002BA4  0B0F               	andlw	15
  2055   002BA6  6E1D               	movwf	lcd_send_4bits@data_command^0,c
  2056   002BA8  ECD3  F016         	call	_lcd_send_4bits	;wreg free
  2057   002BAC  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2058                           
  2059                           ;ECU_Layer/LCD/ecu_lcd.c: 93:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  2060   002BAE  C01F  F01B         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config
  2061   002BB2  C020  F01C         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lc
      +                          d_4bits_config+1
  2062   002BB6  EC0A  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  2063   002BBA  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2064                           
  2065                           ;ECU_Layer/LCD/ecu_lcd.c: 95:         ret = lcd_send_4bits(_lcd_4bits_config, data & 0x0
      +                          F);
  2066   002BBC  C01F  F01B         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  2067   002BC0  C020  F01C         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config
      +                          +1
  2068   002BC4  5021               	movf	ecu_lcd_4bits_send_char_data@data^0,w,c
  2069   002BC6  0B0F               	andlw	15
  2070   002BC8  6E1D               	movwf	lcd_send_4bits@data_command^0,c
  2071   002BCA  ECD3  F016         	call	_lcd_send_4bits	;wreg free
  2072   002BCE  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2073                           
  2074                           ;ECU_Layer/LCD/ecu_lcd.c: 96:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  2075   002BD0  C01F  F01B         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config
  2076   002BD4  C020  F01C         	movff	ecu_lcd_4bits_send_char_data@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lc
      +                          d_4bits_config+1
  2077   002BD8  EC0A  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  2078   002BDC  6E22               	movwf	ecu_lcd_4bits_send_char_data@ret^0,c
  2079   002BDE                     l4136:
  2080                           
  2081                           ;ECU_Layer/LCD/ecu_lcd.c: 99:     return ret;
  2082   002BDE  5022               	movf	ecu_lcd_4bits_send_char_data@ret^0,w,c
  2083   002BE0  0012               	return		;funcret
  2084   002BE2                     __end_of_ecu_lcd_4bits_send_char_data:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _ecu_dc_motor_stop *****************
  2088 ;; Defined at:
  2089 ;;		line 64 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  _dc_motor_co    2   30[COMRAM] PTR const struct .
  2092 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  ret             1   32[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      unsigned char 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;Total ram usage:        3 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 6
  2111 ;; This function calls:
  2112 ;;		_gpio_pin_initialize
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text8
  2119   00315E                     __ptext8:
  2120                           	callstack 0
  2121   00315E                     _ecu_dc_motor_stop:
  2122                           	callstack 24
  2123   00315E                     
  2124                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 68:     if(((void*)0) == _dc_motor_config)
  2125   00315E  501F               	movf	ecu_dc_motor_stop@_dc_motor_config^0,w,c
  2126   003160  1020               	iorwf	(ecu_dc_motor_stop@_dc_motor_config+1)^0,w,c
  2127   003162  A4D8               	btfss	status,2,c
  2128   003164  EFB6  F018         	goto	u3431
  2129   003168  EFB8  F018         	goto	u3430
  2130   00316C                     u3431:
  2131   00316C  EFBC  F018         	goto	l4454
  2132   003170                     u3430:
  2133   003170                     
  2134                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 69:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70:    
      +                               ret = (Std_ReturnType)0x00;
  2135   003170  0E00               	movlw	0
  2136   003172  6E21               	movwf	ecu_dc_motor_stop@ret^0,c
  2137                           
  2138                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 71:     }
  2139   003174  EFCC  F018         	goto	l4456
  2140   003178                     l4454:
  2141                           
  2142                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 74:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:    
      +                               ret = gpio_pin_initialize(&_dc_motor_config->dc_motor_pins[0]);
  2143   003178  C01F  F01B         	movff	ecu_dc_motor_stop@_dc_motor_config,gpio_pin_initialize@_pin_config
  2144   00317C  C020  F01C         	movff	ecu_dc_motor_stop@_dc_motor_config+1,gpio_pin_initialize@_pin_config+1
  2145   003180  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  2146   003184  6E21               	movwf	ecu_dc_motor_stop@ret^0,c
  2147                           
  2148                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:         ret = gpio_pin_initialize(&_dc_motor_con
      +                          fig->dc_motor_pins[1]);
  2149   003186  0E01               	movlw	1
  2150   003188  241F               	addwf	ecu_dc_motor_stop@_dc_motor_config^0,w,c
  2151   00318A  6E1B               	movwf	gpio_pin_initialize@_pin_config^0,c
  2152   00318C  0E00               	movlw	0
  2153   00318E  2020               	addwfc	(ecu_dc_motor_stop@_dc_motor_config+1)^0,w,c
  2154   003190  6E1C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  2155   003192  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  2156   003196  6E21               	movwf	ecu_dc_motor_stop@ret^0,c
  2157   003198                     l4456:
  2158                           
  2159                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 79:     return ret;
  2160   003198  5021               	movf	ecu_dc_motor_stop@ret^0,w,c
  2161   00319A  0012               	return		;funcret
  2162   00319C                     __end_of_ecu_dc_motor_stop:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _ecu_dc_motor_move_right *****************
  2166 ;; Defined at:
  2167 ;;		line 28 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  _dc_motor_co    2   26[COMRAM] PTR const struct .
  2170 ;;		 -> dc_motor_1(2), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  ret             1   28[COMRAM] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      unsigned char 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        3 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 5
  2189 ;; This function calls:
  2190 ;;		_gpio_pin_write_logic
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text9
  2197   002FC6                     __ptext9:
  2198                           	callstack 0
  2199   002FC6                     _ecu_dc_motor_move_right:
  2200                           	callstack 25
  2201   002FC6                     
  2202                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 32:     if(((void*)0) == _dc_motor_config)
  2203   002FC6  501B               	movf	ecu_dc_motor_move_right@_dc_motor_config^0,w,c
  2204   002FC8  101C               	iorwf	(ecu_dc_motor_move_right@_dc_motor_config+1)^0,w,c
  2205   002FCA  A4D8               	btfss	status,2,c
  2206   002FCC  EFEA  F017         	goto	u3411
  2207   002FD0  EFEC  F017         	goto	u3410
  2208   002FD4                     u3411:
  2209   002FD4  EFF0  F017         	goto	l4430
  2210   002FD8                     u3410:
  2211   002FD8                     
  2212                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 33:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 34:    
      +                               ret = (Std_ReturnType)0x00;
  2213   002FD8  0E00               	movlw	0
  2214   002FDA  6E1D               	movwf	ecu_dc_motor_move_right@ret^0,c
  2215                           
  2216                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 35:     }
  2217   002FDC  EF04  F018         	goto	l4432
  2218   002FE0                     l4430:
  2219                           
  2220                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 39:    
      +                               ret = gpio_pin_write_logic(&_dc_motor_config->dc_motor_pins[0], GPIO_HIGH);
  2221   002FE0  C01B  F011         	movff	ecu_dc_motor_move_right@_dc_motor_config,gpio_pin_write_logic@_pin_config
  2222   002FE4  C01C  F012         	movff	ecu_dc_motor_move_right@_dc_motor_config+1,gpio_pin_write_logic@_pin_config+1
  2223   002FE8  0E01               	movlw	1
  2224   002FEA  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  2225   002FEC  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  2226   002FF0  6E1D               	movwf	ecu_dc_motor_move_right@ret^0,c
  2227                           
  2228                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:         ret = gpio_pin_write_logic(&_dc_motor_co
      +                          nfig->dc_motor_pins[1], GPIO_LOW);
  2229   002FF2  0E01               	movlw	1
  2230   002FF4  241B               	addwf	ecu_dc_motor_move_right@_dc_motor_config^0,w,c
  2231   002FF6  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2232   002FF8  0E00               	movlw	0
  2233   002FFA  201C               	addwfc	(ecu_dc_motor_move_right@_dc_motor_config+1)^0,w,c
  2234   002FFC  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2235   002FFE  0E00               	movlw	0
  2236   003000  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  2237   003002  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  2238   003006  6E1D               	movwf	ecu_dc_motor_move_right@ret^0,c
  2239   003008                     l4432:
  2240                           
  2241                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     return ret;
  2242   003008  501D               	movf	ecu_dc_motor_move_right@ret^0,w,c
  2243   00300A  0012               	return		;funcret
  2244   00300C                     __end_of_ecu_dc_motor_move_right:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _ecu_dc_motor_move_left *****************
  2248 ;; Defined at:
  2249 ;;		line 46 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  _dc_motor_co    2   26[COMRAM] PTR const struct .
  2252 ;;		 -> dc_motor_2(2), 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  ret             1   28[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      unsigned char 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;Total ram usage:        3 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 5
  2271 ;; This function calls:
  2272 ;;		_gpio_pin_write_logic
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text10
  2279   00300C                     __ptext10:
  2280                           	callstack 0
  2281   00300C                     _ecu_dc_motor_move_left:
  2282                           	callstack 25
  2283   00300C                     
  2284                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 50:     if(((void*)0) == _dc_motor_config)
  2285   00300C  501B               	movf	ecu_dc_motor_move_left@_dc_motor_config^0,w,c
  2286   00300E  101C               	iorwf	(ecu_dc_motor_move_left@_dc_motor_config+1)^0,w,c
  2287   003010  A4D8               	btfss	status,2,c
  2288   003012  EF0D  F018         	goto	u3421
  2289   003016  EF0F  F018         	goto	u3420
  2290   00301A                     u3421:
  2291   00301A  EF13  F018         	goto	l4442
  2292   00301E                     u3420:
  2293   00301E                     
  2294                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 51:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 52:    
      +                               ret = (Std_ReturnType)0x00;
  2295   00301E  0E00               	movlw	0
  2296   003020  6E1D               	movwf	ecu_dc_motor_move_left@ret^0,c
  2297                           
  2298                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 53:     }
  2299   003022  EF27  F018         	goto	l4444
  2300   003026                     l4442:
  2301                           
  2302                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 56:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 57:    
      +                               ret = gpio_pin_write_logic(&_dc_motor_config->dc_motor_pins[0], GPIO_LOW);
  2303   003026  C01B  F011         	movff	ecu_dc_motor_move_left@_dc_motor_config,gpio_pin_write_logic@_pin_config
  2304   00302A  C01C  F012         	movff	ecu_dc_motor_move_left@_dc_motor_config+1,gpio_pin_write_logic@_pin_config+1
  2305   00302E  0E00               	movlw	0
  2306   003030  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  2307   003032  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  2308   003036  6E1D               	movwf	ecu_dc_motor_move_left@ret^0,c
  2309                           
  2310                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 58:         ret = gpio_pin_write_logic(&_dc_motor_co
      +                          nfig->dc_motor_pins[1], GPIO_HIGH);
  2311   003038  0E01               	movlw	1
  2312   00303A  241B               	addwf	ecu_dc_motor_move_left@_dc_motor_config^0,w,c
  2313   00303C  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2314   00303E  0E00               	movlw	0
  2315   003040  201C               	addwfc	(ecu_dc_motor_move_left@_dc_motor_config+1)^0,w,c
  2316   003042  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2317   003044  0E01               	movlw	1
  2318   003046  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  2319   003048  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  2320   00304C  6E1D               	movwf	ecu_dc_motor_move_left@ret^0,c
  2321   00304E                     l4444:
  2322                           
  2323                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:     return ret;
  2324   00304E  501D               	movf	ecu_dc_motor_move_left@ret^0,w,c
  2325   003050  0012               	return		;funcret
  2326   003052                     __end_of_ecu_dc_motor_move_left:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _convert_uint16_to_string *****************
  2330 ;; Defined at:
  2331 ;;		line 383 in file "ECU_Layer/LCD/ecu_lcd.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  value           2   84[COMRAM] unsigned short 
  2334 ;;  str             2   86[COMRAM] PTR unsigned char 
  2335 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  temp_str        6    0[BANK1 ] unsigned char [6]
  2338 ;;  counter         1    7[BANK1 ] unsigned char 
  2339 ;;  ret             1    6[BANK1 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      unsigned char 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Totals:         4       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;Total ram usage:       12 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 12
  2356 ;; This function calls:
  2357 ;;		_memset
  2358 ;;		_sprintf
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text11
  2365   002840                     __ptext11:
  2366                           	callstack 0
  2367   002840                     _convert_uint16_to_string:
  2368                           	callstack 18
  2369   002840                     
  2370                           ;ECU_Layer/LCD/ecu_lcd.c: 383: Std_ReturnType convert_uint16_to_string(uint16 value, uin
      +                          t8* str);ECU_Layer/LCD/ecu_lcd.c: 384: {;ECU_Layer/LCD/ecu_lcd.c: 385:     Std_ReturnTyp
      +                          e ret = (Std_ReturnType)0x01;
  2371   002840  0E01               	movlw	1
  2372   002842  0101               	movlb	1	; () banked
  2373   002844  6F26               	movwf	convert_uint16_to_string@ret& (0+255),b
  2374   002846                     
  2375                           ; BSR set to: 1
  2376                           ;ECU_Layer/LCD/ecu_lcd.c: 386:     uint8 temp_str[6] = {0};
  2377   002846  EE21  F020         	lfsr	2,convert_uint16_to_string@temp_str
  2378   00284A  0E05               	movlw	5
  2379   00284C                     u5461:
  2380   00284C  6ADE               	clrf	postinc2,c
  2381   00284E  06E8               	decf	wreg,f,c
  2382   002850  E2FD               	bc	u5461
  2383   002852                     
  2384                           ; BSR set to: 1
  2385                           ;ECU_Layer/LCD/ecu_lcd.c: 387:     uint8 counter = 0;
  2386   002852  0E00               	movlw	0
  2387   002854  6F27               	movwf	convert_uint16_to_string@counter& (0+255),b
  2388   002856                     
  2389                           ; BSR set to: 1
  2390                           ;ECU_Layer/LCD/ecu_lcd.c: 389:     if(((void*)0) == str)
  2391   002856  5057               	movf	convert_uint16_to_string@str^0,w,c
  2392   002858  1058               	iorwf	(convert_uint16_to_string@str+1)^0,w,c
  2393   00285A  A4D8               	btfss	status,2,c
  2394   00285C  EF32  F014         	goto	u5471
  2395   002860  EF34  F014         	goto	u5470
  2396   002864                     u5471:
  2397   002864  EF38  F014         	goto	l5974
  2398   002868                     u5470:
  2399   002868                     
  2400                           ; BSR set to: 1
  2401                           ;ECU_Layer/LCD/ecu_lcd.c: 390:     {;ECU_Layer/LCD/ecu_lcd.c: 391:         ret = (Std_Re
      +                          turnType)0x00;
  2402   002868  0E00               	movlw	0
  2403   00286A  6F26               	movwf	convert_uint16_to_string@ret& (0+255),b
  2404                           
  2405                           ;ECU_Layer/LCD/ecu_lcd.c: 392:     }
  2406   00286C  EF7B  F014         	goto	l5986
  2407   002870                     l5974:
  2408                           
  2409                           ; BSR set to: 1
  2410                           ;ECU_Layer/LCD/ecu_lcd.c: 395:     {;ECU_Layer/LCD/ecu_lcd.c: 396:         memset(str, '
      +                           ', 5);
  2411   002870  C057  F011         	movff	convert_uint16_to_string@str,memset@dest
  2412   002874  C058  F012         	movff	convert_uint16_to_string@str+1,memset@dest+1
  2413   002878  0E00               	movlw	0
  2414   00287A  6E14               	movwf	(memset@c+1)^0,c
  2415   00287C  0E20               	movlw	32
  2416   00287E  6E13               	movwf	memset@c^0,c
  2417   002880  0E00               	movlw	0
  2418   002882  6E16               	movwf	(memset@n+1)^0,c
  2419   002884  0E05               	movlw	5
  2420   002886  6E15               	movwf	memset@n^0,c
  2421   002888  EC89  F00E         	call	_memset	;wreg free
  2422   00288C                     
  2423                           ;ECU_Layer/LCD/ecu_lcd.c: 397:         str[5] = '\0';
  2424   00288C  EE20 F005          	lfsr	2,5
  2425   002890  5057               	movf	convert_uint16_to_string@str^0,w,c
  2426   002892  26D9               	addwf	fsr2l,f,c
  2427   002894  5058               	movf	(convert_uint16_to_string@str+1)^0,w,c
  2428   002896  22DA               	addwfc	fsr2h,f,c
  2429   002898  6ADF               	clrf	indf2,c
  2430   00289A                     
  2431                           ;ECU_Layer/LCD/ecu_lcd.c: 398:         sprintf(temp_str, "%i", value);
  2432   00289A  0E20               	movlw	low convert_uint16_to_string@temp_str
  2433   00289C  6E4F               	movwf	sprintf@s^0,c
  2434   00289E  0E01               	movlw	high convert_uint16_to_string@temp_str
  2435   0028A0  6E50               	movwf	(sprintf@s+1)^0,c
  2436   0028A2  0E2B               	movlw	low STR_1
  2437   0028A4  6E51               	movwf	sprintf@fmt^0,c
  2438   0028A6  0E10               	movlw	high STR_1
  2439   0028A8  6E52               	movwf	(sprintf@fmt+1)^0,c
  2440   0028AA  C055  F053         	movff	convert_uint16_to_string@value,?_sprintf+4
  2441   0028AE  C056  F054         	movff	convert_uint16_to_string@value+1,?_sprintf+5
  2442   0028B2  EC93  F017         	call	_sprintf	;wreg free
  2443                           
  2444                           ;ECU_Layer/LCD/ecu_lcd.c: 399:         while(temp_str[counter])
  2445   0028B6  EF6C  F014         	goto	l5984
  2446   0028BA                     l5980:
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;ECU_Layer/LCD/ecu_lcd.c: 400:         {;ECU_Layer/LCD/ecu_lcd.c: 401:             str[c
      +                          ounter] = temp_str[counter];
  2450   0028BA  0E20               	movlw	low convert_uint16_to_string@temp_str
  2451   0028BC  2527               	addwf	convert_uint16_to_string@counter& (0+255),w,b
  2452   0028BE  6ED9               	movwf	fsr2l,c
  2453   0028C0  6ADA               	clrf	fsr2h,c
  2454   0028C2  0E01               	movlw	high convert_uint16_to_string@temp_str
  2455   0028C4  22DA               	addwfc	fsr2h,f,c
  2456   0028C6  5127               	movf	convert_uint16_to_string@counter& (0+255),w,b
  2457   0028C8  2457               	addwf	convert_uint16_to_string@str^0,w,c
  2458   0028CA  6EE1               	movwf	fsr1l,c
  2459   0028CC  0E00               	movlw	0
  2460   0028CE  2058               	addwfc	(convert_uint16_to_string@str+1)^0,w,c
  2461   0028D0  6EE2               	movwf	fsr1h,c
  2462   0028D2  CFDF FFE7          	movff	indf2,indf1
  2463   0028D6                     
  2464                           ; BSR set to: 1
  2465                           ;ECU_Layer/LCD/ecu_lcd.c: 402:             counter++;
  2466   0028D6  2B27               	incf	convert_uint16_to_string@counter& (0+255),f,b
  2467   0028D8                     l5984:
  2468                           
  2469                           ;ECU_Layer/LCD/ecu_lcd.c: 399:         while(temp_str[counter])
  2470   0028D8  0E20               	movlw	low convert_uint16_to_string@temp_str
  2471   0028DA  0101               	movlb	1	; () banked
  2472   0028DC  2527               	addwf	convert_uint16_to_string@counter& (0+255),w,b
  2473   0028DE  6ED9               	movwf	fsr2l,c
  2474   0028E0  6ADA               	clrf	fsr2h,c
  2475   0028E2  0E01               	movlw	high convert_uint16_to_string@temp_str
  2476   0028E4  22DA               	addwfc	fsr2h,f,c
  2477   0028E6  50DF               	movf	indf2,w,c
  2478   0028E8  A4D8               	btfss	status,2,c
  2479   0028EA  EF79  F014         	goto	u5481
  2480   0028EE  EF7B  F014         	goto	u5480
  2481   0028F2                     u5481:
  2482   0028F2  EF5D  F014         	goto	l5980
  2483   0028F6                     u5480:
  2484   0028F6                     l5986:
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;ECU_Layer/LCD/ecu_lcd.c: 406:     return ret;
  2488   0028F6  5126               	movf	convert_uint16_to_string@ret& (0+255),w,b
  2489   0028F8                     
  2490                           ; BSR set to: 1
  2491   0028F8  0012               	return		;funcret
  2492   0028FA                     __end_of_convert_uint16_to_string:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _sprintf *****************
  2496 ;; Defined at:
  2497 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  s               2   78[COMRAM] PTR unsigned char 
  2500 ;;		 -> convert_uint32_to_string@temp_str(11), convert_uint16_to_string@temp_str(6), convert_uint8_to_string@temp_str(4)
      +, 
  2501 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  2502 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  f              12    2[BANK0 ] struct _IO_FILE
  2505 ;;  ap              2    0[BANK0 ] PTR void [1]
  2506 ;;		 -> ?_sprintf(2), 
  2507 ;;  ret             2    0        int 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2   78[COMRAM] int 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         6      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:       20 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 11
  2524 ;; This function calls:
  2525 ;;		_vfprintf
  2526 ;; This function is called by:
  2527 ;;		_convert_uint16_to_string
  2528 ;;		_convert_uint8_to_string
  2529 ;;		_convert_uint32_to_string
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text12
  2534   002F26                     __ptext12:
  2535                           	callstack 0
  2536   002F26                     _sprintf:
  2537                           	callstack 18
  2538   002F26  0E53               	movlw	low (?_sprintf+4)
  2539   002F28  0100               	movlb	0	; () banked
  2540   002F2A  6FEC               	movwf	sprintf@ap& (0+255),b
  2541   002F2C  0E00               	movlw	high (?_sprintf+4)
  2542   002F2E  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  2543   002F30  C04F  F0EE         	movff	sprintf@s,sprintf@f
  2544   002F34  C050  F0EF         	movff	sprintf@s+1,sprintf@f+1
  2545   002F38                     
  2546                           ; BSR set to: 0
  2547   002F38  0E00               	movlw	0
  2548   002F3A  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  2549   002F3C  0E00               	movlw	0
  2550   002F3E  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  2551   002F40                     
  2552                           ; BSR set to: 0
  2553   002F40  0E00               	movlw	0
  2554   002F42  6FF9               	movwf	(sprintf@f+11)& (0+255),b
  2555   002F44  0E00               	movlw	0
  2556   002F46  6FF8               	movwf	(sprintf@f+10)& (0+255),b
  2557   002F48                     
  2558                           ; BSR set to: 0
  2559   002F48  0EEE               	movlw	low sprintf@f
  2560   002F4A  6E47               	movwf	vfprintf@fp^0,c
  2561   002F4C  0E00               	movlw	high sprintf@f
  2562   002F4E  6E48               	movwf	(vfprintf@fp+1)^0,c
  2563   002F50  C051  F049         	movff	sprintf@fmt,vfprintf@fmt
  2564   002F54  C052  F04A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2565   002F58  0EEC               	movlw	low sprintf@ap
  2566   002F5A  6E4B               	movwf	vfprintf@ap^0,c
  2567   002F5C  0E00               	movlw	high sprintf@ap
  2568   002F5E  6E4C               	movwf	(vfprintf@ap+1)^0,c
  2569   002F60  ECBB  F017         	call	_vfprintf	;wreg free
  2570   002F64  0100               	movlb	0	; () banked
  2571   002F66  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  2572   002F68  244F               	addwf	sprintf@s^0,w,c
  2573   002F6A  6ED9               	movwf	fsr2l,c
  2574   002F6C  51F2               	movf	(sprintf@f+4)& (0+255),w,b
  2575   002F6E  2050               	addwfc	(sprintf@s+1)^0,w,c
  2576   002F70  6EDA               	movwf	fsr2h,c
  2577   002F72  6ADF               	clrf	indf2,c
  2578   002F74                     
  2579                           ; BSR set to: 0
  2580   002F74  0012               	return		;funcret
  2581   002F76                     __end_of_sprintf:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _vfprintf *****************
  2585 ;; Defined at:
  2586 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2589 ;;		 -> sprintf@f(12), 
  2590 ;;  fmt             2   72[COMRAM] PTR const unsigned char 
  2591 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2592 ;;  ap              2   74[COMRAM] PTR PTR void 
  2593 ;;		 -> sprintf@ap(2), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  2596 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2   70[COMRAM] int 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;Total ram usage:        8 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 10
  2613 ;; This function calls:
  2614 ;;		_vfpfcnvrt
  2615 ;; This function is called by:
  2616 ;;		_sprintf
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text13
  2621   002F76                     __ptext13:
  2622                           	callstack 0
  2623   002F76                     _vfprintf:
  2624                           	callstack 18
  2625   002F76                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2627   002F76  C049  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  2628   002F7A  C04A  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2631   002F7E  EFCF  F017         	goto	l5914
  2632   002F82                     l5912:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2635   002F82  C047  F039         	movff	vfprintf@fp,vfpfcnvrt@fp
  2636   002F86  C048  F03A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2637   002F8A  0E4D               	movlw	low vfprintf@cfmt
  2638   002F8C  6E3B               	movwf	vfpfcnvrt@fmt^0,c
  2639   002F8E  0E00               	movlw	high vfprintf@cfmt
  2640   002F90  6E3C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2641   002F92  C04B  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2642   002F96  C04C  F03E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2643   002F9A  ECE6  F00F         	call	_vfpfcnvrt	;wreg free
  2644   002F9E                     l5914:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2647   002F9E  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2648   002FA2  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2649   002FA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2650   002FA6  6AF8               	clrf	tblptru,c
  2651   002FA8                     	endif
  2652   002FA8                     	if	0	;tblptru may be non-zero
  2653   002FA8                     	endif
  2654   002FA8  0008               	tblrd		*
  2655   002FAA  50F5               	movf	tablat,w,c
  2656   002FAC  0900               	iorlw	0
  2657   002FAE  A4D8               	btfss	status,2,c
  2658   002FB0  EFDC  F017         	goto	u5401
  2659   002FB4  EFDE  F017         	goto	u5400
  2660   002FB8                     u5401:
  2661   002FB8  EFC1  F017         	goto	l5912
  2662   002FBC                     u5400:
  2663   002FBC                     
  2664                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2665   002FBC  0E00               	movlw	0
  2666   002FBE  6E48               	movwf	(?_vfprintf+1)^0,c
  2667   002FC0  0E00               	movlw	0
  2668   002FC2  6E47               	movwf	?_vfprintf^0,c
  2669   002FC4  0012               	return		;funcret
  2670   002FC6                     __end_of_vfprintf:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _vfpfcnvrt *****************
  2674 ;; Defined at:
  2675 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  2678 ;;		 -> sprintf@f(12), 
  2679 ;;  fmt             2   58[COMRAM] PTR PTR unsigned char 
  2680 ;;		 -> vfprintf@cfmt(2), 
  2681 ;;  ap              2   60[COMRAM] PTR PTR void 
  2682 ;;		 -> sprintf@ap(2), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  convarg         4   64[COMRAM] struct .
  2685 ;;  cp              2   68[COMRAM] PTR unsigned char 
  2686 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2687 ;;  i               2    0        int 
  2688 ;;  done            2    0        int 
  2689 ;;  c               1    0        unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:       14 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 9
  2706 ;; This function calls:
  2707 ;;		_dtoa
  2708 ;;		_fputc
  2709 ;; This function is called by:
  2710 ;;		_vfprintf
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text14
  2715   001FCC                     __ptext14:
  2716                           	callstack 0
  2717   001FCC                     _vfpfcnvrt:
  2718                           	callstack 18
  2719   001FCC                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2721   001FCC  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722   001FD0  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723   001FD4  CFDE FFF6          	movff	postinc2,tblptrl
  2724   001FD8  CFDD FFF7          	movff	postdec2,tblptrh
  2725   001FDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2726   001FDC  6AF8               	clrf	tblptru,c
  2727   001FDE                     	endif
  2728   001FDE                     	if	0	;tblptru may be non-zero
  2729   001FDE                     	endif
  2730   001FDE  0008               	tblrd		*
  2731   001FE0  50F5               	movf	tablat,w,c
  2732   001FE2  0A25               	xorlw	37
  2733   001FE4  A4D8               	btfss	status,2,c
  2734   001FE6  EFF7  F00F         	goto	u5371
  2735   001FEA  EFF9  F00F         	goto	u5370
  2736   001FEE                     u5371:
  2737   001FEE  EF66  F010         	goto	l5904
  2738   001FF2                     u5370:
  2739   001FF2                     
  2740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2741   001FF2  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2742   001FF6  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2743   001FFA  2ADE               	incf	postinc2,f,c
  2744   001FFC  0E00               	movlw	0
  2745   001FFE  22DD               	addwfc	postdec2,f,c
  2746   002000                     
  2747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2748   002000  0E00               	movlw	0
  2749   002002  0100               	movlb	0	; () banked
  2750   002004  6F96               	movwf	(_width+1)& (0+255),b
  2751   002006  0E00               	movlw	0
  2752   002008  6F95               	movwf	_width& (0+255),b
  2753   00200A  C095  F05F         	movff	_width,_flags
  2754   00200E                     
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2757   00200E  6997               	setf	_prec& (0+255),b
  2758   002010  6998               	setf	(_prec+1)& (0+255),b
  2759   002012                     
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2762   002012  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2763   002016  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2764   00201A  CFDE F045          	movff	postinc2,vfpfcnvrt@cp
  2765   00201E  CFDD F046          	movff	postdec2,vfpfcnvrt@cp+1
  2766   002022                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2769   002022  C045  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2770   002026  C046  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2771   00202A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2772   00202A  6AF8               	clrf	tblptru,c
  2773   00202C                     	endif
  2774   00202C                     	if	0	;tblptru may be non-zero
  2775   00202C                     	endif
  2776   00202C  0008               	tblrd		*
  2777   00202E  50F5               	movf	tablat,w,c
  2778   002030  0A64               	xorlw	100
  2779   002032  B4D8               	btfsc	status,2,c
  2780   002034  EF1E  F010         	goto	u5381
  2781   002038  EF20  F010         	goto	u5380
  2782   00203C                     u5381:
  2783   00203C  EF2F  F010         	goto	l5894
  2784   002040                     u5380:
  2785   002040                     
  2786                           ; BSR set to: 0
  2787   002040  C045  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2788   002044  C046  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2789   002048                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2790   002048  6AF8               	clrf	tblptru,c
  2791   00204A                     	endif
  2792   00204A                     	if	0	;tblptru may be non-zero
  2793   00204A                     	endif
  2794   00204A  0008               	tblrd		*
  2795   00204C  50F5               	movf	tablat,w,c
  2796   00204E  0A69               	xorlw	105
  2797   002050  A4D8               	btfss	status,2,c
  2798   002052  EF2D  F010         	goto	u5391
  2799   002056  EF2F  F010         	goto	u5390
  2800   00205A                     u5391:
  2801   00205A  EF5D  F010         	goto	l5900
  2802   00205E                     u5390:
  2803   00205E                     l5894:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2807   00205E  C03D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2808   002062  C03E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2809   002066  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  2810   00206A  0E02               	movlw	2
  2811   00206C  26DE               	addwf	postinc2,f,c
  2812   00206E  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  2813   002072  0E00               	movlw	0
  2814   002074  22DD               	addwfc	postdec2,f,c
  2815   002076  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2816   00207A  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2817   00207E  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg
  2818   002082  CFDD F042          	movff	postdec2,vfpfcnvrt@convarg+1
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2821   002086  0E01               	movlw	1
  2822   002088  2445               	addwf	vfpfcnvrt@cp^0,w,c
  2823   00208A  6E3F               	movwf	??_vfpfcnvrt^0,c
  2824   00208C  0E00               	movlw	0
  2825   00208E  2046               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2826   002090  6E40               	movwf	(??_vfpfcnvrt+1)^0,c
  2827   002092  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828   002096  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829   00209A  C03F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2830   00209E  C040  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2831   0020A2                     
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2834   0020A2  C039  F02C         	movff	vfpfcnvrt@fp,dtoa@fp
  2835   0020A6  C03A  F02D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2836   0020AA  C041  F02E         	movff	vfpfcnvrt@convarg,dtoa@d
  2837   0020AE  C042  F02F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2838   0020B2  ECBE  F00D         	call	_dtoa	;wreg free
  2839   0020B6  EF7B  F010         	goto	l1686
  2840   0020BA                     l5900:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2843   0020BA  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2844   0020BE  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2845   0020C2  2ADE               	incf	postinc2,f,c
  2846   0020C4  0E00               	movlw	0
  2847   0020C6  22DD               	addwfc	postdec2,f,c
  2848   0020C8  EF7B  F010         	goto	l1686
  2849   0020CC                     l5904:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2852   0020CC  C03B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853   0020D0  C03C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854   0020D4  CFDE FFF6          	movff	postinc2,tblptrl
  2855   0020D8  CFDD FFF7          	movff	postdec2,tblptrh
  2856   0020DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2857   0020DC  6AF8               	clrf	tblptru,c
  2858   0020DE                     	endif
  2859   0020DE                     	if	0	;tblptru may be non-zero
  2860   0020DE                     	endif
  2861   0020DE  0008               	tblrd		*
  2862   0020E0  50F5               	movf	tablat,w,c
  2863   0020E2  6E11               	movwf	fputc@c^0,c
  2864   0020E4  6A12               	clrf	(fputc@c+1)^0,c
  2865   0020E6  C039  F013         	movff	vfpfcnvrt@fp,fputc@fp
  2866   0020EA  C03A  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2867   0020EE  EC97  F012         	call	_fputc	;wreg free
  2868   0020F2  EF5D  F010         	goto	l5900
  2869   0020F6                     l1686:
  2870   0020F6  0012               	return		;funcret
  2871   0020F8                     __end_of_vfpfcnvrt:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _dtoa *****************
  2875 ;; Defined at:
  2876 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  2879 ;;		 -> sprintf@f(12), 
  2880 ;;  d               2   45[COMRAM] int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  i               2   54[COMRAM] int 
  2883 ;;  w               2   51[COMRAM] int 
  2884 ;;  p               2   49[COMRAM] int 
  2885 ;;  s               1   53[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;Total ram usage:       13 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 8
  2902 ;; This function calls:
  2903 ;;		___awdiv
  2904 ;;		___awmod
  2905 ;;		_abs
  2906 ;;		_pad
  2907 ;; This function is called by:
  2908 ;;		_vfpfcnvrt
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text15
  2913   001B7C                     __ptext15:
  2914                           	callstack 0
  2915   001B7C                     _dtoa:
  2916                           	callstack 18
  2917   001B7C                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2919   001B7C  BE2F               	btfsc	(dtoa@d+1)^0,7,c
  2920   001B7E  EFC3  F00D         	goto	u5271
  2921   001B82  EFC6  F00D         	goto	u5270
  2922   001B86                     u5271:
  2923   001B86  0E01               	movlw	1
  2924   001B88  EFC7  F00D         	goto	u5280
  2925   001B8C                     u5270:
  2926   001B8C  0E00               	movlw	0
  2927   001B8E                     u5280:
  2928   001B8E  6E36               	movwf	dtoa@s^0,c
  2929   001B90                     
  2930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2931   001B90  5036               	movf	dtoa@s^0,w,c
  2932   001B92  B4D8               	btfsc	status,2,c
  2933   001B94  EFCE  F00D         	goto	u5291
  2934   001B98  EFD0  F00D         	goto	u5290
  2935   001B9C                     u5291:
  2936   001B9C  EFD4  F00D         	goto	l5836
  2937   001BA0                     u5290:
  2938   001BA0                     
  2939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2940   001BA0  6C2E               	negf	dtoa@d^0,c
  2941   001BA2  1E2F               	comf	(dtoa@d+1)^0,f,c
  2942   001BA4  B0D8               	btfsc	status,0,c
  2943   001BA6  2A2F               	incf	(dtoa@d+1)^0,f,c
  2944   001BA8                     l5836:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2947   001BA8  0100               	movlb	0	; () banked
  2948   001BAA  BF98               	btfsc	(_prec+1)& (0+255),7,b
  2949   001BAC  EFDC  F00D         	goto	u5300
  2950   001BB0  EFDA  F00D         	goto	u5301
  2951   001BB4                     u5301:
  2952   001BB4  EFE2  F00D         	goto	l1665
  2953   001BB8                     u5300:
  2954   001BB8                     
  2955                           ; BSR set to: 0
  2956   001BB8  0E00               	movlw	0
  2957   001BBA  6E33               	movwf	(dtoa@p+1)^0,c
  2958   001BBC  0E01               	movlw	1
  2959   001BBE  6E32               	movwf	dtoa@p^0,c
  2960   001BC0  EFE6  F00D         	goto	l1667
  2961   001BC4                     l1665:
  2962                           
  2963                           ; BSR set to: 0
  2964   001BC4  C097  F032         	movff	_prec,dtoa@p
  2965   001BC8  C098  F033         	movff	_prec+1,dtoa@p+1
  2966   001BCC                     l1667:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2970   001BCC  C095  F034         	movff	_width,dtoa@w
  2971   001BD0  C096  F035         	movff	_width+1,dtoa@w+1
  2972   001BD4                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2975   001BD4  5036               	movf	dtoa@s^0,w,c
  2976   001BD6  B4D8               	btfsc	status,2,c
  2977   001BD8  EFF0  F00D         	goto	u5311
  2978   001BDC  EFF2  F00D         	goto	u5310
  2979   001BE0                     u5311:
  2980   001BE0  EF09  F00E         	goto	l1668
  2981   001BE4                     u5310:
  2982   001BE4                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2985   001BE4  0634               	decf	dtoa@w^0,f,c
  2986   001BE6  A0D8               	btfss	status,0,c
  2987   001BE8  0635               	decf	(dtoa@w+1)^0,f,c
  2988   001BEA                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2991   001BEA  5036               	movf	dtoa@s^0,w,c
  2992   001BEC  A4D8               	btfss	status,2,c
  2993   001BEE  EFFB  F00D         	goto	u5321
  2994   001BF2  EFFD  F00D         	goto	u5320
  2995   001BF6                     u5321:
  2996   001BF6  EF03  F00E         	goto	l5848
  2997   001BFA                     u5320:
  2998   001BFA                     
  2999                           ; BSR set to: 0
  3000   001BFA  0E00               	movlw	0
  3001   001BFC  6E31               	movwf	(_dtoa$2447+1)^0,c
  3002   001BFE  0E2B               	movlw	43
  3003   001C00  6E30               	movwf	_dtoa$2447^0,c
  3004   001C02  EF07  F00E         	goto	l5850
  3005   001C06                     l5848:
  3006                           
  3007                           ; BSR set to: 0
  3008   001C06  0E00               	movlw	0
  3009   001C08  6E31               	movwf	(_dtoa$2447+1)^0,c
  3010   001C0A  0E2D               	movlw	45
  3011   001C0C  6E30               	movwf	_dtoa$2447^0,c
  3012   001C0E                     l5850:
  3013                           
  3014                           ; BSR set to: 0
  3015   001C0E  C030  F036         	movff	_dtoa$2447,dtoa@s
  3016   001C12                     l1668:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3020   001C12  0E00               	movlw	0
  3021   001C14  6E38               	movwf	(dtoa@i+1)^0,c
  3022   001C16  0E1F               	movlw	31
  3023   001C18  6E37               	movwf	dtoa@i^0,c
  3024   001C1A                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3027   001C1A  0E00               	movlw	0
  3028   001C1C  0101               	movlb	1	; () banked
  3029   001C1E  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3032   001C20  EF42  F00E         	goto	l5864
  3033   001C24                     l5854:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3036   001C24  0637               	decf	dtoa@i^0,f,c
  3037   001C26  A0D8               	btfss	status,0,c
  3038   001C28  0638               	decf	(dtoa@i+1)^0,f,c
  3039   001C2A                     
  3040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3041   001C2A  0E00               	movlw	low _dbuf
  3042   001C2C  2437               	addwf	dtoa@i^0,w,c
  3043   001C2E  6ED9               	movwf	fsr2l,c
  3044   001C30  0E01               	movlw	high _dbuf
  3045   001C32  2038               	addwfc	(dtoa@i+1)^0,w,c
  3046   001C34  6EDA               	movwf	fsr2h,c
  3047   001C36  C02E  F011         	movff	dtoa@d,___awmod@dividend
  3048   001C3A  C02F  F012         	movff	dtoa@d+1,___awmod@dividend+1
  3049   001C3E  0E00               	movlw	0
  3050   001C40  6E14               	movwf	(___awmod@divisor+1)^0,c
  3051   001C42  0E0A               	movlw	10
  3052   001C44  6E13               	movwf	___awmod@divisor^0,c
  3053   001C46  EC7D  F014         	call	___awmod	;wreg free
  3054   001C4A  C011  F017         	movff	?___awmod,abs@a
  3055   001C4E  C012  F018         	movff	?___awmod+1,abs@a+1
  3056   001C52  EC8F  F018         	call	_abs	;wreg free
  3057   001C56  5017               	movf	?_abs^0,w,c
  3058   001C58  0F30               	addlw	48
  3059   001C5A  6EDF               	movwf	indf2,c
  3060   001C5C                     
  3061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3062   001C5C  0632               	decf	dtoa@p^0,f,c
  3063   001C5E  A0D8               	btfss	status,0,c
  3064   001C60  0633               	decf	(dtoa@p+1)^0,f,c
  3065   001C62                     
  3066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3067   001C62  0634               	decf	dtoa@w^0,f,c
  3068   001C64  A0D8               	btfss	status,0,c
  3069   001C66  0635               	decf	(dtoa@w+1)^0,f,c
  3070   001C68                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3072   001C68  C02E  F011         	movff	dtoa@d,___awdiv@dividend
  3073   001C6C  C02F  F012         	movff	dtoa@d+1,___awdiv@dividend+1
  3074   001C70  0E00               	movlw	0
  3075   001C72  6E14               	movwf	(___awdiv@divisor+1)^0,c
  3076   001C74  0E0A               	movlw	10
  3077   001C76  6E13               	movwf	___awdiv@divisor^0,c
  3078   001C78  ECFC  F012         	call	___awdiv	;wreg free
  3079   001C7C  C011  F02E         	movff	?___awdiv,dtoa@d
  3080   001C80  C012  F02F         	movff	?___awdiv+1,dtoa@d+1
  3081   001C84                     l5864:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3084   001C84  BE38               	btfsc	(dtoa@i+1)^0,7,c
  3085   001C86  EF4D  F00E         	goto	u5331
  3086   001C8A  5038               	movf	(dtoa@i+1)^0,w,c
  3087   001C8C  E108               	bnz	u5330
  3088   001C8E  0437               	decf	dtoa@i^0,w,c
  3089   001C90  A0D8               	btfss	status,0,c
  3090   001C92  EF4D  F00E         	goto	u5331
  3091   001C96  EF4F  F00E         	goto	u5330
  3092   001C9A                     u5331:
  3093   001C9A  EF65  F00E         	goto	l5870
  3094   001C9E                     u5330:
  3095   001C9E  502E               	movf	dtoa@d^0,w,c
  3096   001CA0  102F               	iorwf	(dtoa@d+1)^0,w,c
  3097   001CA2  A4D8               	btfss	status,2,c
  3098   001CA4  EF56  F00E         	goto	u5341
  3099   001CA8  EF58  F00E         	goto	u5340
  3100   001CAC                     u5341:
  3101   001CAC  EF12  F00E         	goto	l5854
  3102   001CB0                     u5340:
  3103   001CB0  BE33               	btfsc	(dtoa@p+1)^0,7,c
  3104   001CB2  EF65  F00E         	goto	u5350
  3105   001CB6  5033               	movf	(dtoa@p+1)^0,w,c
  3106   001CB8  E106               	bnz	u5351
  3107   001CBA  0432               	decf	dtoa@p^0,w,c
  3108   001CBC  B0D8               	btfsc	status,0,c
  3109   001CBE  EF63  F00E         	goto	u5351
  3110   001CC2  EF65  F00E         	goto	u5350
  3111   001CC6                     u5351:
  3112   001CC6  EF12  F00E         	goto	l5854
  3113   001CCA                     u5350:
  3114   001CCA                     l5870:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3117   001CCA  5036               	movf	dtoa@s^0,w,c
  3118   001CCC  B4D8               	btfsc	status,2,c
  3119   001CCE  EF6B  F00E         	goto	u5361
  3120   001CD2  EF6D  F00E         	goto	u5360
  3121   001CD6                     u5361:
  3122   001CD6  EF78  F00E         	goto	l5876
  3123   001CDA                     u5360:
  3124   001CDA                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3126   001CDA  0637               	decf	dtoa@i^0,f,c
  3127   001CDC  A0D8               	btfss	status,0,c
  3128   001CDE  0638               	decf	(dtoa@i+1)^0,f,c
  3129   001CE0                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3131   001CE0  0E00               	movlw	low _dbuf
  3132   001CE2  2437               	addwf	dtoa@i^0,w,c
  3133   001CE4  6ED9               	movwf	fsr2l,c
  3134   001CE6  0E01               	movlw	high _dbuf
  3135   001CE8  2038               	addwfc	(dtoa@i+1)^0,w,c
  3136   001CEA  6EDA               	movwf	fsr2h,c
  3137   001CEC  C036  FFDF         	movff	dtoa@s,indf2
  3138   001CF0                     l5876:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3141   001CF0  C02C  F021         	movff	dtoa@fp,pad@fp
  3142   001CF4  C02D  F022         	movff	dtoa@fp+1,pad@fp+1
  3143   001CF8  0E00               	movlw	low _dbuf
  3144   001CFA  2437               	addwf	dtoa@i^0,w,c
  3145   001CFC  6E23               	movwf	pad@buf^0,c
  3146   001CFE  0E01               	movlw	high _dbuf
  3147   001D00  2038               	addwfc	(dtoa@i+1)^0,w,c
  3148   001D02  6E24               	movwf	(pad@buf+1)^0,c
  3149   001D04  C034  F025         	movff	dtoa@w,pad@p
  3150   001D08  C035  F026         	movff	dtoa@w+1,pad@p+1
  3151   001D0C  EC79  F015         	call	_pad	;wreg free
  3152   001D10  0012               	return		;funcret
  3153   001D12                     __end_of_dtoa:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _pad *****************
  3157 ;; Defined at:
  3158 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3161 ;;		 -> sprintf@f(12), 
  3162 ;;  buf             2   34[COMRAM] PTR unsigned char 
  3163 ;;		 -> dbuf(32), 
  3164 ;;  p               2   36[COMRAM] int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  w               2   41[COMRAM] int 
  3167 ;;  i               2   39[COMRAM] int 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3177 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;Total ram usage:       11 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 7
  3184 ;; This function calls:
  3185 ;;		_fputc
  3186 ;;		_fputs
  3187 ;; This function is called by:
  3188 ;;		_dtoa
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text16
  3193   002AF2                     __ptext16:
  3194                           	callstack 0
  3195   002AF2                     _pad:
  3196                           	callstack 18
  3197   002AF2                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3199   002AF2  BE26               	btfsc	(pad@p+1)^0,7,c
  3200   002AF4  EF7E  F015         	goto	u5241
  3201   002AF8  EF80  F015         	goto	u5240
  3202   002AFC                     u5241:
  3203   002AFC  EF86  F015         	goto	l5816
  3204   002B00                     u5240:
  3205   002B00  C025  F02A         	movff	pad@p,pad@w
  3206   002B04  C026  F02B         	movff	pad@p+1,pad@w+1
  3207   002B08  EF8A  F015         	goto	l1656
  3208   002B0C                     l5816:
  3209   002B0C  0E00               	movlw	0
  3210   002B0E  6E2B               	movwf	(pad@w+1)^0,c
  3211   002B10  0E00               	movlw	0
  3212   002B12  6E2A               	movwf	pad@w^0,c
  3213   002B14                     l1656:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3216   002B14  0E00               	movlw	0
  3217   002B16  6E29               	movwf	(pad@i+1)^0,c
  3218   002B18  0E00               	movlw	0
  3219   002B1A  6E28               	movwf	pad@i^0,c
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3222   002B1C  EF9C  F015         	goto	l5822
  3223   002B20                     l5818:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3226   002B20  0E00               	movlw	0
  3227   002B22  6E12               	movwf	(fputc@c+1)^0,c
  3228   002B24  0E20               	movlw	32
  3229   002B26  6E11               	movwf	fputc@c^0,c
  3230   002B28  C021  F013         	movff	pad@fp,fputc@fp
  3231   002B2C  C022  F014         	movff	pad@fp+1,fputc@fp+1
  3232   002B30  EC97  F012         	call	_fputc	;wreg free
  3233   002B34                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3235   002B34  4A28               	infsnz	pad@i^0,f,c
  3236   002B36  2A29               	incf	(pad@i+1)^0,f,c
  3237   002B38                     l5822:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3240   002B38  502A               	movf	pad@w^0,w,c
  3241   002B3A  5C28               	subwf	pad@i^0,w,c
  3242   002B3C  5029               	movf	(pad@i+1)^0,w,c
  3243   002B3E  0A80               	xorlw	128
  3244   002B40  6E27               	movwf	??_pad^0,c
  3245   002B42  502B               	movf	(pad@w+1)^0,w,c
  3246   002B44  0A80               	xorlw	128
  3247   002B46  5827               	subwfb	??_pad^0,w,c
  3248   002B48  A0D8               	btfss	status,0,c
  3249   002B4A  EFA9  F015         	goto	u5251
  3250   002B4E  EFAB  F015         	goto	u5250
  3251   002B52                     u5251:
  3252   002B52  EF90  F015         	goto	l5818
  3253   002B56                     u5250:
  3254   002B56                     
  3255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3256   002B56  C023  F01A         	movff	pad@buf,fputs@s
  3257   002B5A  C024  F01B         	movff	pad@buf+1,fputs@s+1
  3258   002B5E  C021  F01C         	movff	pad@fp,fputs@fp
  3259   002B62  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  3260   002B66  EC4B  F018         	call	_fputs	;wreg free
  3261   002B6A  0012               	return		;funcret
  3262   002B6C                     __end_of_pad:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _fputs *****************
  3266 ;; Defined at:
  3267 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  s               2   25[COMRAM] PTR const unsigned char 
  3270 ;;		 -> dbuf(32), 
  3271 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3272 ;;		 -> sprintf@f(12), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  i               2   30[COMRAM] int 
  3275 ;;  c               1   29[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2   25[COMRAM] int 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;Total ram usage:        7 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 6
  3292 ;; This function calls:
  3293 ;;		_fputc
  3294 ;; This function is called by:
  3295 ;;		_pad
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text17
  3300   003096                     __ptext17:
  3301                           	callstack 0
  3302   003096                     _fputs:
  3303                           	callstack 18
  3304   003096  0E00               	movlw	0
  3305   003098  6E20               	movwf	(fputs@i+1)^0,c
  3306   00309A  0E00               	movlw	0
  3307   00309C  6E1F               	movwf	fputs@i^0,c
  3308   00309E  EF5C  F018         	goto	l5730
  3309   0030A2                     l5726:
  3310   0030A2  C01E  F011         	movff	fputs@c,fputc@c
  3311   0030A6  6A12               	clrf	(fputc@c+1)^0,c
  3312   0030A8  C01C  F013         	movff	fputs@fp,fputc@fp
  3313   0030AC  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  3314   0030B0  EC97  F012         	call	_fputc	;wreg free
  3315   0030B4  4A1F               	infsnz	fputs@i^0,f,c
  3316   0030B6  2A20               	incf	(fputs@i+1)^0,f,c
  3317   0030B8                     l5730:
  3318   0030B8  501F               	movf	fputs@i^0,w,c
  3319   0030BA  241A               	addwf	fputs@s^0,w,c
  3320   0030BC  6ED9               	movwf	fsr2l,c
  3321   0030BE  5020               	movf	(fputs@i+1)^0,w,c
  3322   0030C0  201B               	addwfc	(fputs@s+1)^0,w,c
  3323   0030C2  6EDA               	movwf	fsr2h,c
  3324   0030C4  50DF               	movf	indf2,w,c
  3325   0030C6  6E1E               	movwf	fputs@c^0,c
  3326   0030C8  501E               	movf	fputs@c^0,w,c
  3327   0030CA  A4D8               	btfss	status,2,c
  3328   0030CC  EF6A  F018         	goto	u5111
  3329   0030D0  EF6C  F018         	goto	u5110
  3330   0030D4                     u5111:
  3331   0030D4  EF51  F018         	goto	l5726
  3332   0030D8                     u5110:
  3333   0030D8  0012               	return		;funcret
  3334   0030DA                     __end_of_fputs:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function _fputc *****************
  3338 ;; Defined at:
  3339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  c               2   16[COMRAM] int 
  3342 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3343 ;;		 -> sprintf@f(12), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2   16[COMRAM] int 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;Total ram usage:        9 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 5
  3362 ;; This function calls:
  3363 ;;		_putch
  3364 ;; This function is called by:
  3365 ;;		_pad
  3366 ;;		_vfpfcnvrt
  3367 ;;		_fputs
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text18
  3372   00252E                     __ptext18:
  3373                           	callstack 0
  3374   00252E                     _fputc:
  3375                           	callstack 21
  3376   00252E  5013               	movf	fputc@fp^0,w,c
  3377   002530  1014               	iorwf	(fputc@fp+1)^0,w,c
  3378   002532  B4D8               	btfsc	status,2,c
  3379   002534  EF9E  F012         	goto	u5071
  3380   002538  EFA0  F012         	goto	u5070
  3381   00253C                     u5071:
  3382   00253C  EFA9  F012         	goto	l5714
  3383   002540                     u5070:
  3384   002540  5013               	movf	fputc@fp^0,w,c
  3385   002542  1014               	iorwf	(fputc@fp+1)^0,w,c
  3386   002544  A4D8               	btfss	status,2,c
  3387   002546  EFA7  F012         	goto	u5081
  3388   00254A  EFA9  F012         	goto	u5080
  3389   00254E                     u5081:
  3390   00254E  EFAE  F012         	goto	l5716
  3391   002552                     u5080:
  3392   002552                     l5714:
  3393   002552  5011               	movf	fputc@c^0,w,c
  3394   002554  ECDB  F019         	call	_putch
  3395   002558  EFFB  F012         	goto	l1711
  3396   00255C                     l5716:
  3397   00255C  EE20 F00A          	lfsr	2,10
  3398   002560  5013               	movf	fputc@fp^0,w,c
  3399   002562  26D9               	addwf	fsr2l,f,c
  3400   002564  5014               	movf	(fputc@fp+1)^0,w,c
  3401   002566  22DA               	addwfc	fsr2h,f,c
  3402   002568  50DE               	movf	postinc2,w,c
  3403   00256A  10DE               	iorwf	postinc2,w,c
  3404   00256C  B4D8               	btfsc	status,2,c
  3405   00256E  EFBB  F012         	goto	u5091
  3406   002572  EFBD  F012         	goto	u5090
  3407   002576                     u5091:
  3408   002576  EFD8  F012         	goto	l5720
  3409   00257A                     u5090:
  3410   00257A  EE20 F00A          	lfsr	2,10
  3411   00257E  5013               	movf	fputc@fp^0,w,c
  3412   002580  26D9               	addwf	fsr2l,f,c
  3413   002582  5014               	movf	(fputc@fp+1)^0,w,c
  3414   002584  22DA               	addwfc	fsr2h,f,c
  3415   002586  EE10 F003          	lfsr	1,3
  3416   00258A  5013               	movf	fputc@fp^0,w,c
  3417   00258C  26E1               	addwf	fsr1l,f,c
  3418   00258E  5014               	movf	(fputc@fp+1)^0,w,c
  3419   002590  22E2               	addwfc	fsr1h,f,c
  3420   002592  50DE               	movf	postinc2,w,c
  3421   002594  5CE6               	subwf	postinc1,w,c
  3422   002596  50E6               	movf	postinc1,w,c
  3423   002598  0A80               	xorlw	128
  3424   00259A  6E19               	movwf	(??_fputc+4)^0,c
  3425   00259C  50DE               	movf	postinc2,w,c
  3426   00259E  0A80               	xorlw	128
  3427   0025A0  5819               	subwfb	(??_fputc+4)^0,w,c
  3428   0025A2  B0D8               	btfsc	status,0,c
  3429   0025A4  EFD6  F012         	goto	u5101
  3430   0025A8  EFD8  F012         	goto	u5100
  3431   0025AC                     u5101:
  3432   0025AC  EFFB  F012         	goto	l1711
  3433   0025B0                     u5100:
  3434   0025B0                     l5720:
  3435   0025B0  EE20 F003          	lfsr	2,3
  3436   0025B4  5013               	movf	fputc@fp^0,w,c
  3437   0025B6  26D9               	addwf	fsr2l,f,c
  3438   0025B8  5014               	movf	(fputc@fp+1)^0,w,c
  3439   0025BA  22DA               	addwfc	fsr2h,f,c
  3440   0025BC  CFDE F015          	movff	postinc2,??_fputc
  3441   0025C0  CFDD F016          	movff	postdec2,??_fputc+1
  3442   0025C4  C013  FFD9         	movff	fputc@fp,fsr2l
  3443   0025C8  C014  FFDA         	movff	fputc@fp+1,fsr2h
  3444   0025CC  CFDE F017          	movff	postinc2,??_fputc+2
  3445   0025D0  CFDD F018          	movff	postdec2,??_fputc+3
  3446   0025D4  5015               	movf	??_fputc^0,w,c
  3447   0025D6  2417               	addwf	(??_fputc+2)^0,w,c
  3448   0025D8  6ED9               	movwf	fsr2l,c
  3449   0025DA  5016               	movf	(??_fputc+1)^0,w,c
  3450   0025DC  2018               	addwfc	(??_fputc+3)^0,w,c
  3451   0025DE  6EDA               	movwf	fsr2h,c
  3452   0025E0  C011  FFDF         	movff	fputc@c,indf2
  3453   0025E4  EE20 F003          	lfsr	2,3
  3454   0025E8  5013               	movf	fputc@fp^0,w,c
  3455   0025EA  26D9               	addwf	fsr2l,f,c
  3456   0025EC  5014               	movf	(fputc@fp+1)^0,w,c
  3457   0025EE  22DA               	addwfc	fsr2h,f,c
  3458   0025F0  2ADE               	incf	postinc2,f,c
  3459   0025F2  0E00               	movlw	0
  3460   0025F4  22DD               	addwfc	postdec2,f,c
  3461   0025F6                     l1711:
  3462   0025F6  0012               	return		;funcret
  3463   0025F8                     __end_of_fputc:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _putch *****************
  3467 ;; Defined at:
  3468 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  c               1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  c               1    0[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 4
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_fputc
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text19
  3497   0033B6                     __ptext19:
  3498                           	callstack 0
  3499   0033B6                     _putch:
  3500                           	callstack 21
  3501   0033B6  0012               	return		;funcret
  3502   0033B8                     __end_of_putch:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _abs *****************
  3506 ;; Defined at:
  3507 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  a               2   22[COMRAM] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   22[COMRAM] int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        4 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 4
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_dtoa
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text20
  3536   00311E                     __ptext20:
  3537                           	callstack 0
  3538   00311E                     _abs:
  3539                           	callstack 21
  3540   00311E  BE18               	btfsc	(abs@a+1)^0,7,c
  3541   003120  EF9C  F018         	goto	u5260
  3542   003124  5018               	movf	(abs@a+1)^0,w,c
  3543   003126  E106               	bnz	u5261
  3544   003128  0417               	decf	abs@a^0,w,c
  3545   00312A  B0D8               	btfsc	status,0,c
  3546   00312C  EF9A  F018         	goto	u5261
  3547   003130  EF9C  F018         	goto	u5260
  3548   003134                     u5261:
  3549   003134  EFAA  F018         	goto	l1696
  3550   003138                     u5260:
  3551   003138  C017  F019         	movff	abs@a,??_abs
  3552   00313C  C018  F01A         	movff	abs@a+1,??_abs+1
  3553   003140  1E19               	comf	??_abs^0,f,c
  3554   003142  1E1A               	comf	(??_abs+1)^0,f,c
  3555   003144  4A19               	infsnz	??_abs^0,f,c
  3556   003146  2A1A               	incf	(??_abs+1)^0,f,c
  3557   003148  C019  F017         	movff	??_abs,?_abs
  3558   00314C  C01A  F018         	movff	??_abs+1,?_abs+1
  3559   003150  EFAE  F018         	goto	l1699
  3560   003154                     l1696:
  3561   003154  C017  F017         	movff	abs@a,?_abs
  3562   003158  C018  F018         	movff	abs@a+1,?_abs+1
  3563   00315C                     l1699:
  3564   00315C  0012               	return		;funcret
  3565   00315E                     __end_of_abs:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function ___awmod *****************
  3569 ;; Defined at:
  3570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  dividend        2   16[COMRAM] int 
  3573 ;;  divisor         2   18[COMRAM] int 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  sign            1   21[COMRAM] unsigned char 
  3576 ;;  counter         1   20[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2   16[COMRAM] int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:        6 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 4
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_dtoa
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text21
  3601   0028FA                     __ptext21:
  3602                           	callstack 0
  3603   0028FA                     ___awmod:
  3604                           	callstack 21
  3605   0028FA  0E00               	movlw	0
  3606   0028FC  6E16               	movwf	___awmod@sign^0,c
  3607   0028FE  BE12               	btfsc	(___awmod@dividend+1)^0,7,c
  3608   002900  EF86  F014         	goto	u5180
  3609   002904  EF84  F014         	goto	u5181
  3610   002908                     u5181:
  3611   002908  EF8C  F014         	goto	l5784
  3612   00290C                     u5180:
  3613   00290C  6C11               	negf	___awmod@dividend^0,c
  3614   00290E  1E12               	comf	(___awmod@dividend+1)^0,f,c
  3615   002910  B0D8               	btfsc	status,0,c
  3616   002912  2A12               	incf	(___awmod@dividend+1)^0,f,c
  3617   002914  0E01               	movlw	1
  3618   002916  6E16               	movwf	___awmod@sign^0,c
  3619   002918                     l5784:
  3620   002918  BE14               	btfsc	(___awmod@divisor+1)^0,7,c
  3621   00291A  EF93  F014         	goto	u5190
  3622   00291E  EF91  F014         	goto	u5191
  3623   002922                     u5191:
  3624   002922  EF97  F014         	goto	l5788
  3625   002926                     u5190:
  3626   002926  6C13               	negf	___awmod@divisor^0,c
  3627   002928  1E14               	comf	(___awmod@divisor+1)^0,f,c
  3628   00292A  B0D8               	btfsc	status,0,c
  3629   00292C  2A14               	incf	(___awmod@divisor+1)^0,f,c
  3630   00292E                     l5788:
  3631   00292E  5013               	movf	___awmod@divisor^0,w,c
  3632   002930  1014               	iorwf	(___awmod@divisor+1)^0,w,c
  3633   002932  B4D8               	btfsc	status,2,c
  3634   002934  EF9E  F014         	goto	u5201
  3635   002938  EFA0  F014         	goto	u5200
  3636   00293C                     u5201:
  3637   00293C  EFC4  F014         	goto	l5804
  3638   002940                     u5200:
  3639   002940  0E01               	movlw	1
  3640   002942  6E15               	movwf	___awmod@counter^0,c
  3641   002944  EFA8  F014         	goto	l5794
  3642   002948                     l5792:
  3643   002948  90D8               	bcf	status,0,c
  3644   00294A  3613               	rlcf	___awmod@divisor^0,f,c
  3645   00294C  3614               	rlcf	(___awmod@divisor+1)^0,f,c
  3646   00294E  2A15               	incf	___awmod@counter^0,f,c
  3647   002950                     l5794:
  3648   002950  AE14               	btfss	(___awmod@divisor+1)^0,7,c
  3649   002952  EFAD  F014         	goto	u5211
  3650   002956  EFAF  F014         	goto	u5210
  3651   00295A                     u5211:
  3652   00295A  EFA4  F014         	goto	l5792
  3653   00295E                     u5210:
  3654   00295E                     l5796:
  3655   00295E  5013               	movf	___awmod@divisor^0,w,c
  3656   002960  5C11               	subwf	___awmod@dividend^0,w,c
  3657   002962  5014               	movf	(___awmod@divisor+1)^0,w,c
  3658   002964  5812               	subwfb	(___awmod@dividend+1)^0,w,c
  3659   002966  A0D8               	btfss	status,0,c
  3660   002968  EFB8  F014         	goto	u5221
  3661   00296C  EFBA  F014         	goto	u5220
  3662   002970                     u5221:
  3663   002970  EFBE  F014         	goto	l5800
  3664   002974                     u5220:
  3665   002974  5013               	movf	___awmod@divisor^0,w,c
  3666   002976  5E11               	subwf	___awmod@dividend^0,f,c
  3667   002978  5014               	movf	(___awmod@divisor+1)^0,w,c
  3668   00297A  5A12               	subwfb	(___awmod@dividend+1)^0,f,c
  3669   00297C                     l5800:
  3670   00297C  90D8               	bcf	status,0,c
  3671   00297E  3214               	rrcf	(___awmod@divisor+1)^0,f,c
  3672   002980  3213               	rrcf	___awmod@divisor^0,f,c
  3673   002982  2E15               	decfsz	___awmod@counter^0,f,c
  3674   002984  EFAF  F014         	goto	l5796
  3675   002988                     l5804:
  3676   002988  5016               	movf	___awmod@sign^0,w,c
  3677   00298A  B4D8               	btfsc	status,2,c
  3678   00298C  EFCA  F014         	goto	u5231
  3679   002990  EFCC  F014         	goto	u5230
  3680   002994                     u5231:
  3681   002994  EFD0  F014         	goto	l5808
  3682   002998                     u5230:
  3683   002998  6C11               	negf	___awmod@dividend^0,c
  3684   00299A  1E12               	comf	(___awmod@dividend+1)^0,f,c
  3685   00299C  B0D8               	btfsc	status,0,c
  3686   00299E  2A12               	incf	(___awmod@dividend+1)^0,f,c
  3687   0029A0                     l5808:
  3688   0029A0  C011  F011         	movff	___awmod@dividend,?___awmod
  3689   0029A4  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  3690   0029A8  0012               	return		;funcret
  3691   0029AA                     __end_of___awmod:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function ___awdiv *****************
  3695 ;; Defined at:
  3696 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  dividend        2   16[COMRAM] int 
  3699 ;;  divisor         2   18[COMRAM] int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  quotient        2   22[COMRAM] int 
  3702 ;;  sign            1   21[COMRAM] unsigned char 
  3703 ;;  counter         1   20[COMRAM] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2   16[COMRAM] int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;Total ram usage:        8 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 4
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_dtoa
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text22
  3728   0025F8                     __ptext22:
  3729                           	callstack 0
  3730   0025F8                     ___awdiv:
  3731                           	callstack 21
  3732   0025F8  0E00               	movlw	0
  3733   0025FA  6E16               	movwf	___awdiv@sign^0,c
  3734   0025FC  BE14               	btfsc	(___awdiv@divisor+1)^0,7,c
  3735   0025FE  EF05  F013         	goto	u5120
  3736   002602  EF03  F013         	goto	u5121
  3737   002606                     u5121:
  3738   002606  EF0B  F013         	goto	l5740
  3739   00260A                     u5120:
  3740   00260A  6C13               	negf	___awdiv@divisor^0,c
  3741   00260C  1E14               	comf	(___awdiv@divisor+1)^0,f,c
  3742   00260E  B0D8               	btfsc	status,0,c
  3743   002610  2A14               	incf	(___awdiv@divisor+1)^0,f,c
  3744   002612  0E01               	movlw	1
  3745   002614  6E16               	movwf	___awdiv@sign^0,c
  3746   002616                     l5740:
  3747   002616  BE12               	btfsc	(___awdiv@dividend+1)^0,7,c
  3748   002618  EF12  F013         	goto	u5130
  3749   00261C  EF10  F013         	goto	u5131
  3750   002620                     u5131:
  3751   002620  EF18  F013         	goto	l5746
  3752   002624                     u5130:
  3753   002624  6C11               	negf	___awdiv@dividend^0,c
  3754   002626  1E12               	comf	(___awdiv@dividend+1)^0,f,c
  3755   002628  B0D8               	btfsc	status,0,c
  3756   00262A  2A12               	incf	(___awdiv@dividend+1)^0,f,c
  3757   00262C  0E01               	movlw	1
  3758   00262E  1A16               	xorwf	___awdiv@sign^0,f,c
  3759   002630                     l5746:
  3760   002630  0E00               	movlw	0
  3761   002632  6E18               	movwf	(___awdiv@quotient+1)^0,c
  3762   002634  0E00               	movlw	0
  3763   002636  6E17               	movwf	___awdiv@quotient^0,c
  3764   002638  5013               	movf	___awdiv@divisor^0,w,c
  3765   00263A  1014               	iorwf	(___awdiv@divisor+1)^0,w,c
  3766   00263C  B4D8               	btfsc	status,2,c
  3767   00263E  EF23  F013         	goto	u5141
  3768   002642  EF25  F013         	goto	u5140
  3769   002646                     u5141:
  3770   002646  EF4D  F013         	goto	l5768
  3771   00264A                     u5140:
  3772   00264A  0E01               	movlw	1
  3773   00264C  6E15               	movwf	___awdiv@counter^0,c
  3774   00264E  EF2D  F013         	goto	l5754
  3775   002652                     l5752:
  3776   002652  90D8               	bcf	status,0,c
  3777   002654  3613               	rlcf	___awdiv@divisor^0,f,c
  3778   002656  3614               	rlcf	(___awdiv@divisor+1)^0,f,c
  3779   002658  2A15               	incf	___awdiv@counter^0,f,c
  3780   00265A                     l5754:
  3781   00265A  AE14               	btfss	(___awdiv@divisor+1)^0,7,c
  3782   00265C  EF32  F013         	goto	u5151
  3783   002660  EF34  F013         	goto	u5150
  3784   002664                     u5151:
  3785   002664  EF29  F013         	goto	l5752
  3786   002668                     u5150:
  3787   002668                     l5756:
  3788   002668  90D8               	bcf	status,0,c
  3789   00266A  3617               	rlcf	___awdiv@quotient^0,f,c
  3790   00266C  3618               	rlcf	(___awdiv@quotient+1)^0,f,c
  3791   00266E  5013               	movf	___awdiv@divisor^0,w,c
  3792   002670  5C11               	subwf	___awdiv@dividend^0,w,c
  3793   002672  5014               	movf	(___awdiv@divisor+1)^0,w,c
  3794   002674  5812               	subwfb	(___awdiv@dividend+1)^0,w,c
  3795   002676  A0D8               	btfss	status,0,c
  3796   002678  EF40  F013         	goto	u5161
  3797   00267C  EF42  F013         	goto	u5160
  3798   002680                     u5161:
  3799   002680  EF47  F013         	goto	l5764
  3800   002684                     u5160:
  3801   002684  5013               	movf	___awdiv@divisor^0,w,c
  3802   002686  5E11               	subwf	___awdiv@dividend^0,f,c
  3803   002688  5014               	movf	(___awdiv@divisor+1)^0,w,c
  3804   00268A  5A12               	subwfb	(___awdiv@dividend+1)^0,f,c
  3805   00268C  8017               	bsf	___awdiv@quotient^0,0,c
  3806   00268E                     l5764:
  3807   00268E  90D8               	bcf	status,0,c
  3808   002690  3214               	rrcf	(___awdiv@divisor+1)^0,f,c
  3809   002692  3213               	rrcf	___awdiv@divisor^0,f,c
  3810   002694  2E15               	decfsz	___awdiv@counter^0,f,c
  3811   002696  EF34  F013         	goto	l5756
  3812   00269A                     l5768:
  3813   00269A  5016               	movf	___awdiv@sign^0,w,c
  3814   00269C  B4D8               	btfsc	status,2,c
  3815   00269E  EF53  F013         	goto	u5171
  3816   0026A2  EF55  F013         	goto	u5170
  3817   0026A6                     u5171:
  3818   0026A6  EF59  F013         	goto	l5772
  3819   0026AA                     u5170:
  3820   0026AA  6C17               	negf	___awdiv@quotient^0,c
  3821   0026AC  1E18               	comf	(___awdiv@quotient+1)^0,f,c
  3822   0026AE  B0D8               	btfsc	status,0,c
  3823   0026B0  2A18               	incf	(___awdiv@quotient+1)^0,f,c
  3824   0026B2                     l5772:
  3825   0026B2  C017  F011         	movff	___awdiv@quotient,?___awdiv
  3826   0026B6  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  3827   0026BA  0012               	return		;funcret
  3828   0026BC                     __end_of___awdiv:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _memset *****************
  3832 ;; Defined at:
  3833 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  dest            2   16[COMRAM] PTR void 
  3836 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3837 ;;  c               2   18[COMRAM] int 
  3838 ;;  n               2   20[COMRAM] unsigned int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  s               2   26[COMRAM] PTR unsigned char 
  3841 ;;		 -> lm35_res_2_txt(7), lm35_res_1_txt(7), 
  3842 ;;  k               2   24[COMRAM] unsigned int 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  2   16[COMRAM] PTR void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;Total ram usage:       12 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 4
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_convert_uint16_to_string
  3863 ;;		_convert_uint8_to_string
  3864 ;;		_convert_uint32_to_string
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text23
  3869   001D12                     __ptext23:
  3870                           	callstack 0
  3871   001D12                     _memset:
  3872                           	callstack 25
  3873   001D12  C011  F01B         	movff	memset@dest,memset@s
  3874   001D16  C012  F01C         	movff	memset@dest+1,memset@s+1
  3875   001D1A  5015               	movf	memset@n^0,w,c
  3876   001D1C  1016               	iorwf	(memset@n+1)^0,w,c
  3877   001D1E  A4D8               	btfss	status,2,c
  3878   001D20  EF94  F00E         	goto	u5411
  3879   001D24  EF96  F00E         	goto	u5410
  3880   001D28                     u5411:
  3881   001D28  EF98  F00E         	goto	l5924
  3882   001D2C                     u5410:
  3883   001D2C  EF43  F00F         	goto	l1621
  3884   001D30                     l5924:
  3885   001D30  C01B  FFD9         	movff	memset@s,fsr2l
  3886   001D34  C01C  FFDA         	movff	memset@s+1,fsr2h
  3887   001D38  C013  FFDF         	movff	memset@c,indf2
  3888   001D3C  5015               	movf	memset@n^0,w,c
  3889   001D3E  241B               	addwf	memset@s^0,w,c
  3890   001D40  6E17               	movwf	??_memset^0,c
  3891   001D42  5016               	movf	(memset@n+1)^0,w,c
  3892   001D44  201C               	addwfc	(memset@s+1)^0,w,c
  3893   001D46  6E18               	movwf	(??_memset+1)^0,c
  3894   001D48  0EFF               	movlw	255
  3895   001D4A  2417               	addwf	??_memset^0,w,c
  3896   001D4C  6ED9               	movwf	fsr2l,c
  3897   001D4E  0EFF               	movlw	255
  3898   001D50  2018               	addwfc	(??_memset+1)^0,w,c
  3899   001D52  6EDA               	movwf	fsr2h,c
  3900   001D54  C013  FFDF         	movff	memset@c,indf2
  3901   001D58  5016               	movf	(memset@n+1)^0,w,c
  3902   001D5A  E107               	bnz	u5421
  3903   001D5C  0E03               	movlw	3
  3904   001D5E  5C15               	subwf	memset@n^0,w,c
  3905   001D60  B0D8               	btfsc	status,0,c
  3906   001D62  EFB5  F00E         	goto	u5421
  3907   001D66  EFB7  F00E         	goto	u5420
  3908   001D6A                     u5421:
  3909   001D6A  EFB9  F00E         	goto	l5930
  3910   001D6E                     u5420:
  3911   001D6E  EF43  F00F         	goto	l1621
  3912   001D72                     l5930:
  3913   001D72  EE20 F001          	lfsr	2,1
  3914   001D76  501B               	movf	memset@s^0,w,c
  3915   001D78  26D9               	addwf	fsr2l,f,c
  3916   001D7A  501C               	movf	(memset@s+1)^0,w,c
  3917   001D7C  22DA               	addwfc	fsr2h,f,c
  3918   001D7E  C013  FFDF         	movff	memset@c,indf2
  3919   001D82  EE20 F002          	lfsr	2,2
  3920   001D86  501B               	movf	memset@s^0,w,c
  3921   001D88  26D9               	addwf	fsr2l,f,c
  3922   001D8A  501C               	movf	(memset@s+1)^0,w,c
  3923   001D8C  22DA               	addwfc	fsr2h,f,c
  3924   001D8E  C013  FFDF         	movff	memset@c,indf2
  3925   001D92  5015               	movf	memset@n^0,w,c
  3926   001D94  241B               	addwf	memset@s^0,w,c
  3927   001D96  6E17               	movwf	??_memset^0,c
  3928   001D98  5016               	movf	(memset@n+1)^0,w,c
  3929   001D9A  201C               	addwfc	(memset@s+1)^0,w,c
  3930   001D9C  6E18               	movwf	(??_memset+1)^0,c
  3931   001D9E  0EFE               	movlw	254
  3932   001DA0  2417               	addwf	??_memset^0,w,c
  3933   001DA2  6ED9               	movwf	fsr2l,c
  3934   001DA4  0EFF               	movlw	255
  3935   001DA6  2018               	addwfc	(??_memset+1)^0,w,c
  3936   001DA8  6EDA               	movwf	fsr2h,c
  3937   001DAA  C013  FFDF         	movff	memset@c,indf2
  3938   001DAE  5015               	movf	memset@n^0,w,c
  3939   001DB0  241B               	addwf	memset@s^0,w,c
  3940   001DB2  6E17               	movwf	??_memset^0,c
  3941   001DB4  5016               	movf	(memset@n+1)^0,w,c
  3942   001DB6  201C               	addwfc	(memset@s+1)^0,w,c
  3943   001DB8  6E18               	movwf	(??_memset+1)^0,c
  3944   001DBA  0EFD               	movlw	253
  3945   001DBC  2417               	addwf	??_memset^0,w,c
  3946   001DBE  6ED9               	movwf	fsr2l,c
  3947   001DC0  0EFF               	movlw	255
  3948   001DC2  2018               	addwfc	(??_memset+1)^0,w,c
  3949   001DC4  6EDA               	movwf	fsr2h,c
  3950   001DC6  C013  FFDF         	movff	memset@c,indf2
  3951   001DCA  5016               	movf	(memset@n+1)^0,w,c
  3952   001DCC  E107               	bnz	u5431
  3953   001DCE  0E07               	movlw	7
  3954   001DD0  5C15               	subwf	memset@n^0,w,c
  3955   001DD2  B0D8               	btfsc	status,0,c
  3956   001DD4  EFEE  F00E         	goto	u5431
  3957   001DD8  EFF0  F00E         	goto	u5430
  3958   001DDC                     u5431:
  3959   001DDC  EFF2  F00E         	goto	l5936
  3960   001DE0                     u5430:
  3961   001DE0  EF43  F00F         	goto	l1621
  3962   001DE4                     l5936:
  3963   001DE4  EE20 F003          	lfsr	2,3
  3964   001DE8  501B               	movf	memset@s^0,w,c
  3965   001DEA  26D9               	addwf	fsr2l,f,c
  3966   001DEC  501C               	movf	(memset@s+1)^0,w,c
  3967   001DEE  22DA               	addwfc	fsr2h,f,c
  3968   001DF0  C013  FFDF         	movff	memset@c,indf2
  3969   001DF4  5015               	movf	memset@n^0,w,c
  3970   001DF6  241B               	addwf	memset@s^0,w,c
  3971   001DF8  6E17               	movwf	??_memset^0,c
  3972   001DFA  5016               	movf	(memset@n+1)^0,w,c
  3973   001DFC  201C               	addwfc	(memset@s+1)^0,w,c
  3974   001DFE  6E18               	movwf	(??_memset+1)^0,c
  3975   001E00  0EFC               	movlw	252
  3976   001E02  2417               	addwf	??_memset^0,w,c
  3977   001E04  6ED9               	movwf	fsr2l,c
  3978   001E06  0EFF               	movlw	255
  3979   001E08  2018               	addwfc	(??_memset+1)^0,w,c
  3980   001E0A  6EDA               	movwf	fsr2h,c
  3981   001E0C  C013  FFDF         	movff	memset@c,indf2
  3982   001E10  5016               	movf	(memset@n+1)^0,w,c
  3983   001E12  E107               	bnz	u5441
  3984   001E14  0E09               	movlw	9
  3985   001E16  5C15               	subwf	memset@n^0,w,c
  3986   001E18  B0D8               	btfsc	status,0,c
  3987   001E1A  EF11  F00F         	goto	u5441
  3988   001E1E  EF13  F00F         	goto	u5440
  3989   001E22                     u5441:
  3990   001E22  EF15  F00F         	goto	l5942
  3991   001E26                     u5440:
  3992   001E26  EF43  F00F         	goto	l1621
  3993   001E2A                     l5942:
  3994   001E2A  C01B  F017         	movff	memset@s,??_memset
  3995   001E2E  C01C  F018         	movff	memset@s+1,??_memset+1
  3996   001E32  1E17               	comf	??_memset^0,f,c
  3997   001E34  1E18               	comf	(??_memset+1)^0,f,c
  3998   001E36  4A17               	infsnz	??_memset^0,f,c
  3999   001E38  2A18               	incf	(??_memset+1)^0,f,c
  4000   001E3A  0E03               	movlw	3
  4001   001E3C  1417               	andwf	??_memset^0,w,c
  4002   001E3E  6E19               	movwf	memset@k^0,c
  4003   001E40  6A1A               	clrf	(memset@k+1)^0,c
  4004   001E42  5019               	movf	memset@k^0,w,c
  4005   001E44  261B               	addwf	memset@s^0,f,c
  4006   001E46  501A               	movf	(memset@k+1)^0,w,c
  4007   001E48  221C               	addwfc	(memset@s+1)^0,f,c
  4008   001E4A  5019               	movf	memset@k^0,w,c
  4009   001E4C  5E15               	subwf	memset@n^0,f,c
  4010   001E4E  501A               	movf	(memset@k+1)^0,w,c
  4011   001E50  5A16               	subwfb	(memset@n+1)^0,f,c
  4012   001E52  0EFC               	movlw	252
  4013   001E54  1615               	andwf	memset@n^0,f,c
  4014   001E56  0EFF               	movlw	255
  4015   001E58  1616               	andwf	(memset@n+1)^0,f,c
  4016   001E5A  EF3A  F00F         	goto	l5950
  4017   001E5E                     l5944:
  4018   001E5E  C01B  FFD9         	movff	memset@s,fsr2l
  4019   001E62  C01C  FFDA         	movff	memset@s+1,fsr2h
  4020   001E66  C013  FFDF         	movff	memset@c,indf2
  4021   001E6A  0615               	decf	memset@n^0,f,c
  4022   001E6C  A0D8               	btfss	status,0,c
  4023   001E6E  0616               	decf	(memset@n+1)^0,f,c
  4024   001E70  4A1B               	infsnz	memset@s^0,f,c
  4025   001E72  2A1C               	incf	(memset@s+1)^0,f,c
  4026   001E74                     l5950:
  4027   001E74  5015               	movf	memset@n^0,w,c
  4028   001E76  1016               	iorwf	(memset@n+1)^0,w,c
  4029   001E78  A4D8               	btfss	status,2,c
  4030   001E7A  EF41  F00F         	goto	u5451
  4031   001E7E  EF43  F00F         	goto	u5450
  4032   001E82                     u5451:
  4033   001E82  EF2F  F00F         	goto	l5944
  4034   001E86                     u5450:
  4035   001E86                     l1621:
  4036   001E86  0012               	return		;funcret
  4037   001E88                     __end_of_memset:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _application_initialize *****************
  4041 ;; Defined at:
  4042 ;;		line 83 in file "application.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 9
  4063 ;; This function calls:
  4064 ;;		_ecu_layer_initialize
  4065 ;;		_mcal_adc_Init
  4066 ;; This function is called by:
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text24
  4072   003390                     __ptext24:
  4073                           	callstack 0
  4074   003390                     _application_initialize:
  4075                           	callstack 21
  4076   003390                     
  4077                           ;application.c: 85:     ecu_layer_initialize();
  4078   003390  ECA3  F019         	call	_ecu_layer_initialize	;wreg free
  4079   003394                     
  4080                           ;application.c: 86:     ret = mcal_adc_Init(&adc_obj);
  4081   003394  0EDB               	movlw	low _adc_obj
  4082   003396  6E14               	movwf	mcal_adc_Init@_adc_config^0,c
  4083   003398  0E00               	movlw	high _adc_obj
  4084   00339A  6E15               	movwf	(mcal_adc_Init@_adc_config+1)^0,c
  4085   00339C  ECC0  F013         	call	_mcal_adc_Init	;wreg free
  4086   0033A0  0100               	movlb	0	; () banked
  4087   0033A2  6FFA               	movwf	_ret& (0+255),b
  4088   0033A4                     
  4089                           ; BSR set to: 0
  4090   0033A4  0012               	return		;funcret
  4091   0033A6                     __end_of_application_initialize:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _mcal_adc_Init *****************
  4095 ;; Defined at:
  4096 ;;		line 18 in file "MCAL_Layer/ADC/mcal_adc.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  _adc_config     2   19[COMRAM] PTR const struct .
  4099 ;;		 -> adc_obj(7), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  ret             1   22[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      unsigned char 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        4 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 5
  4118 ;; This function calls:
  4119 ;;		_adc_input_channel_port_configure
  4120 ;;		_adc_select_result_format
  4121 ;; This function is called by:
  4122 ;;		_application_initialize
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text25
  4127   002780                     __ptext25:
  4128                           	callstack 0
  4129   002780                     _mcal_adc_Init:
  4130                           	callstack 24
  4131   002780                     
  4132                           ;MCAL_Layer/ADC/mcal_adc.c: 18: Std_ReturnType mcal_adc_Init(const adc_config_t* _adc_co
      +                          nfig);MCAL_Layer/ADC/mcal_adc.c: 19: {;MCAL_Layer/ADC/mcal_adc.c: 20:     Std_ReturnType
      +                           ret = (Std_ReturnType)0x01;
  4133   002780  0E01               	movlw	1
  4134   002782  6E17               	movwf	mcal_adc_Init@ret^0,c
  4135   002784                     
  4136                           ;MCAL_Layer/ADC/mcal_adc.c: 22:     if(((void*)0) == _adc_config)
  4137   002784  5014               	movf	mcal_adc_Init@_adc_config^0,w,c
  4138   002786  1015               	iorwf	(mcal_adc_Init@_adc_config+1)^0,w,c
  4139   002788  A4D8               	btfss	status,2,c
  4140   00278A  EFC9  F013         	goto	u3341
  4141   00278E  EFCB  F013         	goto	u3340
  4142   002792                     u3341:
  4143   002792  EFCF  F013         	goto	l348
  4144   002796                     u3340:
  4145   002796                     
  4146                           ;MCAL_Layer/ADC/mcal_adc.c: 23:     {;MCAL_Layer/ADC/mcal_adc.c: 24:         ret = (Std_
      +                          ReturnType)0x00;
  4147   002796  0E00               	movlw	0
  4148   002798  6E17               	movwf	mcal_adc_Init@ret^0,c
  4149                           
  4150                           ;MCAL_Layer/ADC/mcal_adc.c: 25:     }
  4151   00279A  EF1E  F014         	goto	l4370
  4152   00279E                     l348:
  4153                           
  4154                           ;MCAL_Layer/ADC/mcal_adc.c: 28:     {;MCAL_Layer/ADC/mcal_adc.c: 30:         (ADCON0bits
      +                          .ADON = 0);
  4155   00279E  90C2               	bcf	194,0,c	;volatile
  4156   0027A0                     
  4157                           ;MCAL_Layer/ADC/mcal_adc.c: 32:         ADCON2bits.ACQT = _adc_config->acquisition_time;
  4158   0027A0  EE20 F003          	lfsr	2,3
  4159   0027A4  5014               	movf	mcal_adc_Init@_adc_config^0,w,c
  4160   0027A6  26D9               	addwf	fsr2l,f,c
  4161   0027A8  5015               	movf	(mcal_adc_Init@_adc_config+1)^0,w,c
  4162   0027AA  22DA               	addwfc	fsr2h,f,c
  4163   0027AC  50DF               	movf	indf2,w,c
  4164   0027AE  6E16               	movwf	??_mcal_adc_Init^0,c
  4165   0027B0  4616               	rlncf	??_mcal_adc_Init^0,f,c
  4166   0027B2  4616               	rlncf	??_mcal_adc_Init^0,f,c
  4167   0027B4  4616               	rlncf	??_mcal_adc_Init^0,f,c
  4168   0027B6  50C0               	movf	192,w,c	;volatile
  4169   0027B8  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4170   0027BA  0BC7               	andlw	-57
  4171   0027BC  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4172   0027BE  6EC0               	movwf	192,c	;volatile
  4173                           
  4174                           ;MCAL_Layer/ADC/mcal_adc.c: 34:         ADCON2bits.ADCS = _adc_config->conversion_clock;
  4175   0027C0  EE20 F004          	lfsr	2,4
  4176   0027C4  5014               	movf	mcal_adc_Init@_adc_config^0,w,c
  4177   0027C6  26D9               	addwf	fsr2l,f,c
  4178   0027C8  5015               	movf	(mcal_adc_Init@_adc_config+1)^0,w,c
  4179   0027CA  22DA               	addwfc	fsr2h,f,c
  4180   0027CC  50DF               	movf	indf2,w,c
  4181   0027CE  6E16               	movwf	??_mcal_adc_Init^0,c
  4182   0027D0  50C0               	movf	192,w,c	;volatile
  4183   0027D2  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4184   0027D4  0BF8               	andlw	-8
  4185   0027D6  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4186   0027D8  6EC0               	movwf	192,c	;volatile
  4187                           
  4188                           ;MCAL_Layer/ADC/mcal_adc.c: 36:         ADCON0bits.CHS = _adc_config->adc_channel;
  4189   0027DA  EE20 F005          	lfsr	2,5
  4190   0027DE  5014               	movf	mcal_adc_Init@_adc_config^0,w,c
  4191   0027E0  26D9               	addwf	fsr2l,f,c
  4192   0027E2  5015               	movf	(mcal_adc_Init@_adc_config+1)^0,w,c
  4193   0027E4  22DA               	addwfc	fsr2h,f,c
  4194   0027E6  50DF               	movf	indf2,w,c
  4195   0027E8  6E16               	movwf	??_mcal_adc_Init^0,c
  4196   0027EA  4616               	rlncf	??_mcal_adc_Init^0,f,c
  4197   0027EC  4616               	rlncf	??_mcal_adc_Init^0,f,c
  4198   0027EE  50C2               	movf	194,w,c	;volatile
  4199   0027F0  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4200   0027F2  0BC3               	andlw	-61
  4201   0027F4  1816               	xorwf	??_mcal_adc_Init^0,w,c
  4202   0027F6  6EC2               	movwf	194,c	;volatile
  4203   0027F8                     
  4204                           ;MCAL_Layer/ADC/mcal_adc.c: 37:         adc_input_channel_port_configure(_adc_config->ad
      +                          c_channel);
  4205   0027F8  EE20 F005          	lfsr	2,5
  4206   0027FC  5014               	movf	mcal_adc_Init@_adc_config^0,w,c
  4207   0027FE  26D9               	addwf	fsr2l,f,c
  4208   002800  5015               	movf	(mcal_adc_Init@_adc_config+1)^0,w,c
  4209   002802  22DA               	addwfc	fsr2h,f,c
  4210   002804  50DF               	movf	indf2,w,c
  4211   002806  EC2B  F012         	call	_adc_input_channel_port_configure
  4212   00280A                     
  4213                           ;MCAL_Layer/ADC/mcal_adc.c: 41:             ADC_InterruptHandler = _adc_config->ADC_Inte
      +                          rruptHandler;
  4214   00280A  C014  FFD9         	movff	mcal_adc_Init@_adc_config,fsr2l
  4215   00280E  C015  FFDA         	movff	mcal_adc_Init@_adc_config+1,fsr2h
  4216   002812  CFDE F05D          	movff	postinc2,_ADC_InterruptHandler
  4217   002816  CFDD F05E          	movff	postdec2,_ADC_InterruptHandler+1
  4218   00281A                     
  4219                           ;MCAL_Layer/ADC/mcal_adc.c: 42:             (PIE1bits.ADIE = 1);
  4220   00281A  8C9D               	bsf	157,6,c	;volatile
  4221   00281C                     
  4222                           ;MCAL_Layer/ADC/mcal_adc.c: 43:             (PIR1bits.ADIF = 0);
  4223   00281C  9C9E               	bcf	158,6,c	;volatile
  4224   00281E                     
  4225                           ;MCAL_Layer/ADC/mcal_adc.c: 60:                 (INTCONbits.GIE = 1);
  4226   00281E  8EF2               	bsf	242,7,c	;volatile
  4227   002820                     
  4228                           ;MCAL_Layer/ADC/mcal_adc.c: 61:                 (INTCONbits.PEIE = 1);
  4229   002820  8CF2               	bsf	242,6,c	;volatile
  4230   002822                     
  4231                           ;MCAL_Layer/ADC/mcal_adc.c: 66:         adc_select_result_format(_adc_config);
  4232   002822  C014  F011         	movff	mcal_adc_Init@_adc_config,adc_select_result_format@_adc_config
  4233   002826  C015  F012         	movff	mcal_adc_Init@_adc_config+1,adc_select_result_format@_adc_config+1
  4234   00282A  EC6D  F018         	call	_adc_select_result_format	;wreg free
  4235   00282E                     
  4236                           ;MCAL_Layer/ADC/mcal_adc.c: 68:         adc_select_result_format(_adc_config);
  4237   00282E  C014  F011         	movff	mcal_adc_Init@_adc_config,adc_select_result_format@_adc_config
  4238   002832  C015  F012         	movff	mcal_adc_Init@_adc_config+1,adc_select_result_format@_adc_config+1
  4239   002836  EC6D  F018         	call	_adc_select_result_format	;wreg free
  4240   00283A                     
  4241                           ;MCAL_Layer/ADC/mcal_adc.c: 70:         (ADCON0bits.ADON = 1);
  4242   00283A  80C2               	bsf	194,0,c	;volatile
  4243   00283C                     l4370:
  4244                           
  4245                           ;MCAL_Layer/ADC/mcal_adc.c: 73:     return ret;
  4246   00283C  5017               	movf	mcal_adc_Init@ret^0,w,c
  4247   00283E  0012               	return		;funcret
  4248   002840                     __end_of_mcal_adc_Init:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _adc_select_result_format *****************
  4252 ;; Defined at:
  4253 ;;		line 247 in file "MCAL_Layer/ADC/mcal_adc.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  _adc_config     2   16[COMRAM] PTR const struct .
  4256 ;;		 -> adc_obj(7), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        2 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 4
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_mcal_adc_Init
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text26
  4283   0030DA                     __ptext26:
  4284                           	callstack 0
  4285   0030DA                     _adc_select_result_format:
  4286                           	callstack 24
  4287   0030DA                     
  4288                           ;MCAL_Layer/ADC/mcal_adc.c: 247: static __attribute__((inline)) void adc_select_result_f
      +                          ormat(const adc_config_t *_adc_config);MCAL_Layer/ADC/mcal_adc.c: 248: {;MCAL_Layer/ADC/
      +                          mcal_adc.c: 249:     if(0x01U == _adc_config->result_format)
  4289   0030DA  EE20 F006          	lfsr	2,6
  4290   0030DE  5011               	movf	adc_select_result_format@_adc_config^0,w,c
  4291   0030E0  26D9               	addwf	fsr2l,f,c
  4292   0030E2  5012               	movf	(adc_select_result_format@_adc_config+1)^0,w,c
  4293   0030E4  22DA               	addwfc	fsr2h,f,c
  4294   0030E6  A2DF               	btfss	indf2,1,c
  4295   0030E8  EF78  F018         	goto	u3131
  4296   0030EC  EF7A  F018         	goto	u3130
  4297   0030F0                     u3131:
  4298   0030F0  EF7D  F018         	goto	l4178
  4299   0030F4                     u3130:
  4300   0030F4                     
  4301                           ;MCAL_Layer/ADC/mcal_adc.c: 250:     {;MCAL_Layer/ADC/mcal_adc.c: 251:         (ADCON2bi
      +                          ts.ADFM = 1);
  4302   0030F4  8EC0               	bsf	192,7,c	;volatile
  4303                           
  4304                           ;MCAL_Layer/ADC/mcal_adc.c: 252:     }
  4305   0030F6  EF8E  F018         	goto	l424
  4306   0030FA                     l4178:
  4307   0030FA  EE20 F006          	lfsr	2,6
  4308   0030FE  5011               	movf	adc_select_result_format@_adc_config^0,w,c
  4309   003100  26D9               	addwf	fsr2l,f,c
  4310   003102  5012               	movf	(adc_select_result_format@_adc_config+1)^0,w,c
  4311   003104  22DA               	addwfc	fsr2h,f,c
  4312   003106  B2DF               	btfsc	indf2,1,c
  4313   003108  EF88  F018         	goto	u3141
  4314   00310C  EF8A  F018         	goto	u3140
  4315   003110                     u3141:
  4316   003110  EF8D  F018         	goto	l422
  4317   003114                     u3140:
  4318   003114                     
  4319                           ;MCAL_Layer/ADC/mcal_adc.c: 254:     {;MCAL_Layer/ADC/mcal_adc.c: 255:         (ADCON2bi
      +                          ts.ADFM = 0);
  4320   003114  9EC0               	bcf	192,7,c	;volatile
  4321                           
  4322                           ;MCAL_Layer/ADC/mcal_adc.c: 256:     }
  4323   003116  EF8E  F018         	goto	l424
  4324   00311A                     l422:
  4325                           
  4326                           ;MCAL_Layer/ADC/mcal_adc.c: 258:     {;MCAL_Layer/ADC/mcal_adc.c: 259:         (ADCON2bi
      +                          ts.ADFM = 1);
  4327   00311A  8EC0               	bsf	192,7,c	;volatile
  4328   00311C                     l424:
  4329   00311C  0012               	return		;funcret
  4330   00311E                     __end_of_adc_select_result_format:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function _adc_input_channel_port_configure *****************
  4334 ;; Defined at:
  4335 ;;		line 226 in file "MCAL_Layer/ADC/mcal_adc.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  channel         1    wreg     enum E2867
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  channel         1   18[COMRAM] enum E2867
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;Total ram usage:        3 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 4
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_mcal_adc_Init
  4360 ;;		_mcal_adc_SelectChannel
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text27
  4365   002456                     __ptext27:
  4366                           	callstack 0
  4367   002456                     _adc_input_channel_port_configure:
  4368                           	callstack 24
  4369                           
  4370                           ;incstack = 0
  4371                           ;adc_input_channel_port_configure@channel stored from wreg
  4372   002456  6E13               	movwf	adc_input_channel_port_configure@channel^0,c
  4373   002458                     
  4374                           ;MCAL_Layer/ADC/mcal_adc.c: 226: static __attribute__((inline)) void adc_input_channel_p
      +                          ort_configure(adc_channel_select_t channel);MCAL_Layer/ADC/mcal_adc.c: 227: {;MCAL_Layer
      +                          /ADC/mcal_adc.c: 228:     switch(channel)
  4375   002458  EF55  F012         	goto	l4168
  4376   00245C                     l4142:
  4377   00245C  8092               	bsf	146,0,c	;volatile
  4378   00245E  EF96  F012         	goto	l417
  4379   002462                     l4144:
  4380   002462  8292               	bsf	146,1,c	;volatile
  4381   002464  EF96  F012         	goto	l417
  4382   002468                     l4146:
  4383   002468  8492               	bsf	146,2,c	;volatile
  4384   00246A  EF96  F012         	goto	l417
  4385   00246E                     l4148:
  4386   00246E  8692               	bsf	146,3,c	;volatile
  4387   002470  EF96  F012         	goto	l417
  4388   002474                     l4150:
  4389   002474  8A92               	bsf	146,5,c	;volatile
  4390   002476  EF96  F012         	goto	l417
  4391   00247A                     l4152:
  4392   00247A  8096               	bsf	150,0,c	;volatile
  4393   00247C  EF96  F012         	goto	l417
  4394   002480                     l4154:
  4395   002480  8296               	bsf	150,1,c	;volatile
  4396   002482  EF96  F012         	goto	l417
  4397   002486                     l4156:
  4398   002486  8496               	bsf	150,2,c	;volatile
  4399   002488  EF96  F012         	goto	l417
  4400   00248C                     l4158:
  4401   00248C  8493               	bsf	147,2,c	;volatile
  4402   00248E  EF96  F012         	goto	l417
  4403   002492                     l4160:
  4404   002492  8693               	bsf	147,3,c	;volatile
  4405   002494  EF96  F012         	goto	l417
  4406   002498                     l4162:
  4407   002498  8293               	bsf	147,1,c	;volatile
  4408   00249A  EF96  F012         	goto	l417
  4409   00249E                     l4164:
  4410   00249E  8893               	bsf	147,4,c	;volatile
  4411   0024A0  EF96  F012         	goto	l417
  4412   0024A4                     l4166:
  4413   0024A4  8093               	bsf	147,0,c	;volatile
  4414   0024A6  EF96  F012         	goto	l417
  4415   0024AA                     l4168:
  4416   0024AA  5013               	movf	adc_input_channel_port_configure@channel^0,w,c
  4417   0024AC  6E11               	movwf	??_adc_input_channel_port_configure^0,c
  4418   0024AE  6A12               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  4419                           
  4420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4421                           ; Switch size 1, requested type "simple"
  4422                           ; Number of cases is 1, Range of values is 0 to 0
  4423                           ; switch strategies available:
  4424                           ; Name         Instructions Cycles
  4425                           ; simple_byte            4     3 (average)
  4426                           ;	Chosen strategy is simple_byte
  4427   0024B0  5012               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  4428   0024B2  0A00               	xorlw	0	; case 0
  4429   0024B4  B4D8               	btfsc	status,2,c
  4430   0024B6  EF5F  F012         	goto	l6154
  4431   0024BA  EF96  F012         	goto	l417
  4432   0024BE                     l6154:
  4433                           
  4434                           ; Switch size 1, requested type "simple"
  4435                           ; Number of cases is 13, Range of values is 0 to 12
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte           40    21 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440   0024BE  5011               	movf	??_adc_input_channel_port_configure^0,w,c
  4441   0024C0  0A00               	xorlw	0	; case 0
  4442   0024C2  B4D8               	btfsc	status,2,c
  4443   0024C4  EF2E  F012         	goto	l4142
  4444   0024C8  0A01               	xorlw	1	; case 1
  4445   0024CA  B4D8               	btfsc	status,2,c
  4446   0024CC  EF31  F012         	goto	l4144
  4447   0024D0  0A03               	xorlw	3	; case 2
  4448   0024D2  B4D8               	btfsc	status,2,c
  4449   0024D4  EF34  F012         	goto	l4146
  4450   0024D8  0A01               	xorlw	1	; case 3
  4451   0024DA  B4D8               	btfsc	status,2,c
  4452   0024DC  EF37  F012         	goto	l4148
  4453   0024E0  0A07               	xorlw	7	; case 4
  4454   0024E2  B4D8               	btfsc	status,2,c
  4455   0024E4  EF3A  F012         	goto	l4150
  4456   0024E8  0A01               	xorlw	1	; case 5
  4457   0024EA  B4D8               	btfsc	status,2,c
  4458   0024EC  EF3D  F012         	goto	l4152
  4459   0024F0  0A03               	xorlw	3	; case 6
  4460   0024F2  B4D8               	btfsc	status,2,c
  4461   0024F4  EF40  F012         	goto	l4154
  4462   0024F8  0A01               	xorlw	1	; case 7
  4463   0024FA  B4D8               	btfsc	status,2,c
  4464   0024FC  EF43  F012         	goto	l4156
  4465   002500  0A0F               	xorlw	15	; case 8
  4466   002502  B4D8               	btfsc	status,2,c
  4467   002504  EF46  F012         	goto	l4158
  4468   002508  0A01               	xorlw	1	; case 9
  4469   00250A  B4D8               	btfsc	status,2,c
  4470   00250C  EF49  F012         	goto	l4160
  4471   002510  0A03               	xorlw	3	; case 10
  4472   002512  B4D8               	btfsc	status,2,c
  4473   002514  EF4C  F012         	goto	l4162
  4474   002518  0A01               	xorlw	1	; case 11
  4475   00251A  B4D8               	btfsc	status,2,c
  4476   00251C  EF4F  F012         	goto	l4164
  4477   002520  0A07               	xorlw	7	; case 12
  4478   002522  B4D8               	btfsc	status,2,c
  4479   002524  EF52  F012         	goto	l4166
  4480   002528  EF96  F012         	goto	l417
  4481   00252C                     l417:
  4482   00252C  0012               	return		;funcret
  4483   00252E                     __end_of_adc_input_channel_port_configure:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _ecu_layer_initialize *****************
  4487 ;; Defined at:
  4488 ;;		line 59 in file "ECU_Layer/ecu_layer_init.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  ret             1    0        unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 8
  4509 ;; This function calls:
  4510 ;;		_ecu_dc_motor_initialize
  4511 ;;		_ecu_lcd_4bits_initialize
  4512 ;; This function is called by:
  4513 ;;		_application_initialize
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text28
  4518   003346                     __ptext28:
  4519                           	callstack 0
  4520   003346                     _ecu_layer_initialize:
  4521                           	callstack 21
  4522   003346  0EE2               	movlw	low _lcd_1
  4523   003348  6E23               	movwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,c
  4524   00334A  0E00               	movlw	high _lcd_1
  4525   00334C  6E24               	movwf	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,c
  4526   00334E  EC7C  F010         	call	_ecu_lcd_4bits_initialize	;wreg free
  4527   003352  0EEA               	movlw	low _dc_motor_1
  4528   003354  6E1F               	movwf	ecu_dc_motor_initialize@_dc_motor_config^0,c
  4529   003356  0E00               	movlw	high _dc_motor_1
  4530   003358  6E20               	movwf	(ecu_dc_motor_initialize@_dc_motor_config+1)^0,c
  4531   00335A  ECCE  F018         	call	_ecu_dc_motor_initialize	;wreg free
  4532   00335E  0EE8               	movlw	low _dc_motor_2
  4533   003360  6E1F               	movwf	ecu_dc_motor_initialize@_dc_motor_config^0,c
  4534   003362  0E00               	movlw	high _dc_motor_2
  4535   003364  6E20               	movwf	(ecu_dc_motor_initialize@_dc_motor_config+1)^0,c
  4536   003366  ECCE  F018         	call	_ecu_dc_motor_initialize	;wreg free
  4537   00336A  0012               	return		;funcret
  4538   00336C                     __end_of_ecu_layer_initialize:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _ecu_lcd_4bits_initialize *****************
  4542 ;; Defined at:
  4543 ;;		line 18 in file "ECU_Layer/LCD/ecu_lcd.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  _lcd_4bits_c    2   34[COMRAM] PTR const struct .
  4546 ;;		 -> lcd_1(6), 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  ret             1   39[COMRAM] unsigned char 
  4549 ;;  counter         1   38[COMRAM] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      unsigned char 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        6 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 7
  4566 ;; This function calls:
  4567 ;;		_ecu_lcd_4bits_send_command
  4568 ;;		_gpio_pin_initialize
  4569 ;; This function is called by:
  4570 ;;		_ecu_layer_initialize
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text29
  4575   0020F8                     __ptext29:
  4576                           	callstack 0
  4577   0020F8                     _ecu_lcd_4bits_initialize:
  4578                           	callstack 21
  4579   0020F8                     
  4580                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     uint8 counter = 0;
  4581   0020F8  0E00               	movlw	0
  4582   0020FA  6E27               	movwf	ecu_lcd_4bits_initialize@counter^0,c
  4583   0020FC                     
  4584                           ;ECU_Layer/LCD/ecu_lcd.c: 23:     if(((void*)0) == _lcd_4bits_config)
  4585   0020FC  5023               	movf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  4586   0020FE  1024               	iorwf	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  4587   002100  A4D8               	btfss	status,2,c
  4588   002102  EF85  F010         	goto	u3101
  4589   002106  EF87  F010         	goto	u3100
  4590   00210A                     u3101:
  4591   00210A  EF8B  F010         	goto	l4088
  4592   00210E                     u3100:
  4593   00210E                     
  4594                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     {;ECU_Layer/LCD/ecu_lcd.c: 25:         ret = (Std_Retu
      +                          rnType)0x00;
  4595   00210E  0E00               	movlw	0
  4596   002110  6E28               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  4597                           
  4598                           ;ECU_Layer/LCD/ecu_lcd.c: 26:     }
  4599   002112  EF10  F011         	goto	l4124
  4600   002116                     l4088:
  4601                           
  4602                           ;ECU_Layer/LCD/ecu_lcd.c: 29:     {;ECU_Layer/LCD/ecu_lcd.c: 30:         ret = gpio_pin_
      +                          initialize(&_lcd_4bits_config->lcd_rs);
  4603   002116  C023  F01B         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,gpio_pin_initialize@_pin_config
  4604   00211A  C024  F01C         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,gpio_pin_initialize@_pin_config+1
  4605   00211E  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  4606   002122  6E28               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  4607                           
  4608                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         ret = gpio_pin_initialize(&_lcd_4bits_config->lcd_
      +                          en);
  4609   002124  0E01               	movlw	1
  4610   002126  2423               	addwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  4611   002128  6E1B               	movwf	gpio_pin_initialize@_pin_config^0,c
  4612   00212A  0E00               	movlw	0
  4613   00212C  2024               	addwfc	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  4614   00212E  6E1C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  4615   002130  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  4616   002134  6E28               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  4617   002136                     
  4618                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         for(counter = 0; counter < 4; counter++)
  4619   002136  0E00               	movlw	0
  4620   002138  6E27               	movwf	ecu_lcd_4bits_initialize@counter^0,c
  4621   00213A                     l4096:
  4622   00213A  5027               	movf	ecu_lcd_4bits_initialize@counter^0,w,c
  4623   00213C  2423               	addwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  4624   00213E  6E25               	movwf	??_ecu_lcd_4bits_initialize^0,c
  4625   002140  0E00               	movlw	0
  4626   002142  2024               	addwfc	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  4627   002144  6E26               	movwf	(??_ecu_lcd_4bits_initialize+1)^0,c
  4628   002146  0E02               	movlw	2
  4629   002148  2425               	addwf	??_ecu_lcd_4bits_initialize^0,w,c
  4630   00214A  6E1B               	movwf	gpio_pin_initialize@_pin_config^0,c
  4631   00214C  0E00               	movlw	0
  4632   00214E  2026               	addwfc	(??_ecu_lcd_4bits_initialize+1)^0,w,c
  4633   002150  6E1C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  4634   002152  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  4635   002156                     
  4636                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         }
  4637   002156  2A27               	incf	ecu_lcd_4bits_initialize@counter^0,f,c
  4638   002158  0E03               	movlw	3
  4639   00215A  6427               	cpfsgt	ecu_lcd_4bits_initialize@counter^0,c
  4640   00215C  EFB2  F010         	goto	u3111
  4641   002160  EFB4  F010         	goto	u3110
  4642   002164                     u3111:
  4643   002164  EF9D  F010         	goto	l4096
  4644   002168                     u3110:
  4645   002168                     
  4646                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  4647   002168  0E1A               	movlw	26
  4648   00216A  6E25               	movwf	??_ecu_lcd_4bits_initialize^0,c
  4649   00216C  0EF8               	movlw	248
  4650   00216E                     u5587:
  4651   00216E  2EE8               	decfsz	wreg,f,c
  4652   002170  D7FE               	bra	u5587
  4653   002172  2E25               	decfsz	??_ecu_lcd_4bits_initialize^0,f,c
  4654   002174  D7FC               	bra	u5587
  4655   002176  D000               	nop2	
  4656   002178  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4657   00217C  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4658   002180  0E38               	movlw	56
  4659   002182  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4660   002184  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4661   002188                     
  4662                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  4663   002188  0E07               	movlw	7
  4664   00218A  6E25               	movwf	??_ecu_lcd_4bits_initialize^0,c
  4665   00218C  0E7D               	movlw	125
  4666   00218E                     u5597:
  4667   00218E  2EE8               	decfsz	wreg,f,c
  4668   002190  D7FE               	bra	u5597
  4669   002192  2E25               	decfsz	??_ecu_lcd_4bits_initialize^0,f,c
  4670   002194  D7FC               	bra	u5597
  4671   002196  F000               	nop	
  4672   002198  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4673   00219C  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4674   0021A0  0E38               	movlw	56
  4675   0021A2  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4676   0021A4  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4677   0021A8                     
  4678                           ;ECU_Layer/LCD/ecu_lcd.c: 42:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  4679   0021A8  0E32               	movlw	50
  4680   0021AA                     u5607:
  4681   0021AA  2EE8               	decfsz	wreg,f,c
  4682   0021AC  D7FE               	bra	u5607
  4683   0021AE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4684   0021B2  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4685   0021B6  0E38               	movlw	56
  4686   0021B8  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4687   0021BA  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4688   0021BE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4689   0021C2  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4690   0021C6  0E01               	movlw	1
  4691   0021C8  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4692   0021CA  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4693   0021CE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4694   0021D2  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4695   0021D6  0E02               	movlw	2
  4696   0021D8  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4697   0021DA  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4698   0021DE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4699   0021E2  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4700   0021E6  0E06               	movlw	6
  4701   0021E8  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4702   0021EA  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4703   0021EE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4704   0021F2  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4705   0021F6  0E0C               	movlw	12
  4706   0021F8  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4707   0021FA  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4708   0021FE  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4709   002202  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4710   002206  0E28               	movlw	40
  4711   002208  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4712   00220A  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4713   00220E                     
  4714                           ;ECU_Layer/LCD/ecu_lcd.c: 50:         ret = ecu_lcd_4bits_send_command(_lcd_4bits_config
      +                          , 0x80);
  4715   00220E  C023  F01F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  4716   002212  C024  F020         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  4717   002216  0E80               	movlw	128
  4718   002218  6E21               	movwf	ecu_lcd_4bits_send_command@command^0,c
  4719   00221A  ECF1  F015         	call	_ecu_lcd_4bits_send_command	;wreg free
  4720   00221E  6E28               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  4721   002220                     l4124:
  4722                           
  4723                           ;ECU_Layer/LCD/ecu_lcd.c: 53:     return ret;
  4724   002220  5028               	movf	ecu_lcd_4bits_initialize@ret^0,w,c
  4725   002222  0012               	return		;funcret
  4726   002224                     __end_of_ecu_lcd_4bits_initialize:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _ecu_lcd_4bits_send_command *****************
  4730 ;; Defined at:
  4731 ;;		line 56 in file "ECU_Layer/LCD/ecu_lcd.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  _lcd_4bits_c    2   30[COMRAM] PTR const struct .
  4734 ;;		 -> lcd_1(6), 
  4735 ;;  command         1   32[COMRAM] unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  ret             1   33[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4747 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;Total ram usage:        4 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 6
  4754 ;; This function calls:
  4755 ;;		_gpio_pin_write_logic
  4756 ;;		_lcd_4bits_send_enable_signal
  4757 ;;		_lcd_send_4bits
  4758 ;; This function is called by:
  4759 ;;		_ecu_lcd_4bits_initialize
  4760 ;;		_lcd_4bits_set_cursor
  4761 ;;		_ecu_lcd_4bits_send_custom_char
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text30
  4766   002BE2                     __ptext30:
  4767                           	callstack 0
  4768   002BE2                     _ecu_lcd_4bits_send_command:
  4769                           	callstack 22
  4770   002BE2                     
  4771                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     if(((void*)0) == _lcd_4bits_config)
  4772   002BE2  501F               	movf	ecu_lcd_4bits_send_command@_lcd_4bits_config^0,w,c
  4773   002BE4  1020               	iorwf	(ecu_lcd_4bits_send_command@_lcd_4bits_config+1)^0,w,c
  4774   002BE6  A4D8               	btfss	status,2,c
  4775   002BE8  EFF8  F015         	goto	u3051
  4776   002BEC  EFFA  F015         	goto	u3050
  4777   002BF0                     u3051:
  4778   002BF0  EFFE  F015         	goto	l4034
  4779   002BF4                     u3050:
  4780   002BF4                     
  4781                           ;ECU_Layer/LCD/ecu_lcd.c: 61:     {;ECU_Layer/LCD/ecu_lcd.c: 62:         ret = (Std_Retu
      +                          rnType)0x00;
  4782   002BF4  0E00               	movlw	0
  4783   002BF6  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4784                           
  4785                           ;ECU_Layer/LCD/ecu_lcd.c: 63:     }
  4786   002BF8  EF2A  F016         	goto	l4036
  4787   002BFC                     l4034:
  4788                           
  4789                           ;ECU_Layer/LCD/ecu_lcd.c: 66:     {;ECU_Layer/LCD/ecu_lcd.c: 67:         ret = gpio_pin_
      +                          write_logic(&_lcd_4bits_config->lcd_rs, GPIO_LOW);
  4790   002BFC  C01F  F011         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,gpio_pin_write_logic@_pin_config
  4791   002C00  C020  F012         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,gpio_pin_write_logic@_pin_config+1
  4792   002C04  0E00               	movlw	0
  4793   002C06  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4794   002C08  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4795   002C0C  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4796                           
  4797                           ;ECU_Layer/LCD/ecu_lcd.c: 69:         ret = lcd_send_4bits(_lcd_4bits_config, (command >
      +                          > 4) & 0x0F);
  4798   002C0E  C01F  F01B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  4799   002C12  C020  F01C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config+1
  4800   002C16  3821               	swapf	ecu_lcd_4bits_send_command@command^0,w,c
  4801   002C18  0B0F               	andlw	15
  4802   002C1A  0B0F               	andlw	15
  4803   002C1C  6E1D               	movwf	lcd_send_4bits@data_command^0,c
  4804   002C1E  ECD3  F016         	call	_lcd_send_4bits	;wreg free
  4805   002C22  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4806                           
  4807                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  4808   002C24  C01F  F01B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_4b
      +                          its_config
  4809   002C28  C020  F01C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config+1
  4810   002C2C  EC0A  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  4811   002C30  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4812                           
  4813                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = lcd_send_4bits(_lcd_4bits_config, command & 
      +                          0x0F);
  4814   002C32  C01F  F01B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  4815   002C36  C020  F01C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config+1
  4816   002C3A  5021               	movf	ecu_lcd_4bits_send_command@command^0,w,c
  4817   002C3C  0B0F               	andlw	15
  4818   002C3E  6E1D               	movwf	lcd_send_4bits@data_command^0,c
  4819   002C40  ECD3  F016         	call	_lcd_send_4bits	;wreg free
  4820   002C44  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4821                           
  4822                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  4823   002C46  C01F  F01B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_4b
      +                          its_config
  4824   002C4A  C020  F01C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config+1
  4825   002C4E  EC0A  F019         	call	_lcd_4bits_send_enable_signal	;wreg free
  4826   002C52  6E22               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  4827   002C54                     l4036:
  4828                           
  4829                           ;ECU_Layer/LCD/ecu_lcd.c: 76:     return ret;
  4830   002C54  5022               	movf	ecu_lcd_4bits_send_command@ret^0,w,c
  4831   002C56  0012               	return		;funcret
  4832   002C58                     __end_of_ecu_lcd_4bits_send_command:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _lcd_send_4bits *****************
  4836 ;; Defined at:
  4837 ;;		line 435 in file "ECU_Layer/LCD/ecu_lcd.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  _lcd_4bits_c    2   26[COMRAM] PTR const struct .
  4840 ;;		 -> lcd_1(6), 
  4841 ;;  data_command    1   28[COMRAM] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  ret             1   29[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      unsigned char 
  4846 ;; Registers used:
  4847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;Total ram usage:        4 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 5
  4860 ;; This function calls:
  4861 ;;		_gpio_pin_write_logic
  4862 ;; This function is called by:
  4863 ;;		_ecu_lcd_4bits_send_command
  4864 ;;		_ecu_lcd_4bits_send_char_data
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text31
  4869   002DA6                     __ptext31:
  4870                           	callstack 0
  4871   002DA6                     _lcd_send_4bits:
  4872                           	callstack 22
  4873   002DA6  0E02               	movlw	2
  4874   002DA8  241B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  4875   002DAA  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4876   002DAC  0E00               	movlw	0
  4877   002DAE  201C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  4878   002DB0  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4879   002DB2  501D               	movf	lcd_send_4bits@data_command^0,w,c
  4880   002DB4  0B01               	andlw	1
  4881   002DB6  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4882   002DB8  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4883   002DBC  0E03               	movlw	3
  4884   002DBE  241B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  4885   002DC0  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4886   002DC2  0E00               	movlw	0
  4887   002DC4  201C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  4888   002DC6  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4889   002DC8  90D8               	bcf	status,0,c
  4890   002DCA  301D               	rrcf	lcd_send_4bits@data_command^0,w,c
  4891   002DCC  0B01               	andlw	1
  4892   002DCE  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4893   002DD0  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4894   002DD4  0E04               	movlw	4
  4895   002DD6  241B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  4896   002DD8  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4897   002DDA  0E00               	movlw	0
  4898   002DDC  201C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  4899   002DDE  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4900   002DE0  401D               	rrncf	lcd_send_4bits@data_command^0,w,c
  4901   002DE2  42E8               	rrncf	wreg,f,c
  4902   002DE4  0B3F               	andlw	63
  4903   002DE6  0B01               	andlw	1
  4904   002DE8  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4905   002DEA  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4906   002DEE                     
  4907                           ;ECU_Layer/LCD/ecu_lcd.c: 442:     ret = gpio_pin_write_logic(&_lcd_4bits_config->lcd_da
      +                          ta_pins[3], (data_command >> 3) & 0x01);
  4908   002DEE  0E05               	movlw	5
  4909   002DF0  241B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  4910   002DF2  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4911   002DF4  0E00               	movlw	0
  4912   002DF6  201C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  4913   002DF8  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4914   002DFA  381D               	swapf	lcd_send_4bits@data_command^0,w,c
  4915   002DFC  46E8               	rlncf	wreg,f,c
  4916   002DFE  0B1F               	andlw	31
  4917   002E00  0B01               	andlw	1
  4918   002E02  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4919   002E04  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4920   002E08  6E1E               	movwf	lcd_send_4bits@ret^0,c
  4921                           
  4922                           ;ECU_Layer/LCD/ecu_lcd.c: 444:     return ret;
  4923   002E0A  501E               	movf	lcd_send_4bits@ret^0,w,c
  4924   002E0C  0012               	return		;funcret
  4925   002E0E                     __end_of_lcd_send_4bits:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _lcd_4bits_send_enable_signal *****************
  4929 ;; Defined at:
  4930 ;;		line 447 in file "ECU_Layer/LCD/ecu_lcd.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  _lcd_4bits_c    2   26[COMRAM] PTR const struct .
  4933 ;;		 -> lcd_1(6), 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  ret             1   28[COMRAM] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      unsigned char 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;Total ram usage:        3 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 5
  4952 ;; This function calls:
  4953 ;;		_gpio_pin_write_logic
  4954 ;; This function is called by:
  4955 ;;		_ecu_lcd_4bits_send_command
  4956 ;;		_ecu_lcd_4bits_send_char_data
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text32
  4961   003214                     __ptext32:
  4962                           	callstack 0
  4963   003214                     _lcd_4bits_send_enable_signal:
  4964                           	callstack 22
  4965   003214  0E01               	movlw	1
  4966   003216  241B               	addwf	lcd_4bits_send_enable_signal@_lcd_4bits_config^0,w,c
  4967   003218  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4968   00321A  0E00               	movlw	0
  4969   00321C  201C               	addwfc	(lcd_4bits_send_enable_signal@_lcd_4bits_config+1)^0,w,c
  4970   00321E  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4971   003220  0E01               	movlw	1
  4972   003222  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4973   003224  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4974   003228                     
  4975                           ;ECU_Layer/LCD/ecu_lcd.c: 452:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  4976   003228  D000               	nop2		;2 cycle nop
  4977   00322A  D000               	nop2		;2 cycle nop
  4978   00322C  F000               	nop	
  4979   00322E                     
  4980                           ;ECU_Layer/LCD/ecu_lcd.c: 453:     ret = gpio_pin_write_logic(&_lcd_4bits_config->lcd_en
      +                          , GPIO_LOW);
  4981   00322E  0E01               	movlw	1
  4982   003230  241B               	addwf	lcd_4bits_send_enable_signal@_lcd_4bits_config^0,w,c
  4983   003232  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4984   003234  0E00               	movlw	0
  4985   003236  201C               	addwfc	(lcd_4bits_send_enable_signal@_lcd_4bits_config+1)^0,w,c
  4986   003238  6E12               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4987   00323A  0E00               	movlw	0
  4988   00323C  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  4989   00323E  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  4990   003242  6E1D               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  4991                           
  4992                           ;ECU_Layer/LCD/ecu_lcd.c: 455:     return ret;
  4993   003244  501D               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  4994   003246  0012               	return		;funcret
  4995   003248                     __end_of_lcd_4bits_send_enable_signal:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _ecu_dc_motor_initialize *****************
  4999 ;; Defined at:
  5000 ;;		line 10 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  _dc_motor_co    2   30[COMRAM] PTR const struct .
  5003 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  ret             1   32[COMRAM] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      unsigned char 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;Total ram usage:        3 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 6
  5022 ;; This function calls:
  5023 ;;		_gpio_pin_initialize
  5024 ;; This function is called by:
  5025 ;;		_ecu_layer_initialize
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text33
  5030   00319C                     __ptext33:
  5031                           	callstack 0
  5032   00319C                     _ecu_dc_motor_initialize:
  5033                           	callstack 22
  5034   00319C                     
  5035                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 14:     if(((void*)0) == _dc_motor_config)
  5036   00319C  501F               	movf	ecu_dc_motor_initialize@_dc_motor_config^0,w,c
  5037   00319E  1020               	iorwf	(ecu_dc_motor_initialize@_dc_motor_config+1)^0,w,c
  5038   0031A0  A4D8               	btfss	status,2,c
  5039   0031A2  EFD5  F018         	goto	u3091
  5040   0031A6  EFD7  F018         	goto	u3090
  5041   0031AA                     u3091:
  5042   0031AA  EFDB  F018         	goto	l4076
  5043   0031AE                     u3090:
  5044   0031AE                     
  5045                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 15:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 16:    
      +                               ret = (Std_ReturnType)0x00;
  5046   0031AE  0E00               	movlw	0
  5047   0031B0  6E21               	movwf	ecu_dc_motor_initialize@ret^0,c
  5048                           
  5049                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 17:     }
  5050   0031B2  EFEB  F018         	goto	l4078
  5051   0031B6                     l4076:
  5052                           
  5053                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:    
      +                               ret = gpio_pin_initialize(&_dc_motor_config->dc_motor_pins[0]);
  5054   0031B6  C01F  F01B         	movff	ecu_dc_motor_initialize@_dc_motor_config,gpio_pin_initialize@_pin_config
  5055   0031BA  C020  F01C         	movff	ecu_dc_motor_initialize@_dc_motor_config+1,gpio_pin_initialize@_pin_config+1
  5056   0031BE  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  5057   0031C2  6E21               	movwf	ecu_dc_motor_initialize@ret^0,c
  5058                           
  5059                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:         ret = gpio_pin_initialize(&_dc_motor_con
      +                          fig->dc_motor_pins[1]);
  5060   0031C4  0E01               	movlw	1
  5061   0031C6  241F               	addwf	ecu_dc_motor_initialize@_dc_motor_config^0,w,c
  5062   0031C8  6E1B               	movwf	gpio_pin_initialize@_pin_config^0,c
  5063   0031CA  0E00               	movlw	0
  5064   0031CC  2020               	addwfc	(ecu_dc_motor_initialize@_dc_motor_config+1)^0,w,c
  5065   0031CE  6E1C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  5066   0031D0  EC9D  F016         	call	_gpio_pin_initialize	;wreg free
  5067   0031D4  6E21               	movwf	ecu_dc_motor_initialize@ret^0,c
  5068   0031D6                     l4078:
  5069                           
  5070                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:     return ret;
  5071   0031D6  5021               	movf	ecu_dc_motor_initialize@ret^0,w,c
  5072   0031D8  0012               	return		;funcret
  5073   0031DA                     __end_of_ecu_dc_motor_initialize:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _gpio_pin_initialize *****************
  5077 ;; Defined at:
  5078 ;;		line 161 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  _pin_config     2   26[COMRAM] PTR const struct .
  5081 ;;		 -> dc_motor_2.dc_motor_pins(2), dc_motor_2(2), dc_motor_1.dc_motor_pins(2), dc_motor_1(2), 
  5082 ;;		 -> lcd_1.lcd_data_pins(4), lcd_1(6), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  ret             1   29[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      unsigned char 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 5
  5101 ;; This function calls:
  5102 ;;		_gpio_pin_direction_initialize
  5103 ;;		_gpio_pin_write_logic
  5104 ;; This function is called by:
  5105 ;;		_ecu_dc_motor_initialize
  5106 ;;		_ecu_dc_motor_stop
  5107 ;;		_ecu_lcd_4bits_initialize
  5108 ;;		_ecu_7_segment_initialize
  5109 ;;		_ecu_keypad_initialize
  5110 ;;		_ecu_lcd_8bits_initialize
  5111 ;;		_ecu_led_initialize
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text34
  5116   002D3A                     __ptext34:
  5117                           	callstack 0
  5118   002D3A                     _gpio_pin_initialize:
  5119                           	callstack 24
  5120   002D3A                     
  5121                           ;MCAL_Layer/GPIO/mcal_gpio.c: 165:     if(((void*)0) == _pin_config || _pin_config->pin 
      +                          > 7)
  5122   002D3A  501B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  5123   002D3C  101C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  5124   002D3E  B4D8               	btfsc	status,2,c
  5125   002D40  EFA4  F016         	goto	u3031
  5126   002D44  EFA6  F016         	goto	u3030
  5127   002D48                     u3031:
  5128   002D48  EFB7  F016         	goto	l4020
  5129   002D4C                     u3030:
  5130   002D4C  C01B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  5131   002D50  C01C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  5132   002D54  30DF               	rrcf	223,w,c
  5133   002D56  32E8               	rrcf	wreg,f,c
  5134   002D58  32E8               	rrcf	wreg,f,c
  5135   002D5A  0B07               	andlw	7
  5136   002D5C  6E1D               	movwf	??_gpio_pin_initialize^0,c
  5137   002D5E  0E07               	movlw	7
  5138   002D60  641D               	cpfsgt	??_gpio_pin_initialize^0,c
  5139   002D62  EFB5  F016         	goto	u3041
  5140   002D66  EFB7  F016         	goto	u3040
  5141   002D6A                     u3041:
  5142   002D6A  EFBB  F016         	goto	l4022
  5143   002D6E                     u3040:
  5144   002D6E                     l4020:
  5145                           
  5146                           ;MCAL_Layer/GPIO/mcal_gpio.c: 166:     {;MCAL_Layer/GPIO/mcal_gpio.c: 167:         ret =
      +                           (Std_ReturnType)0x00;
  5147   002D6E  0E00               	movlw	0
  5148   002D70  6E1E               	movwf	gpio_pin_initialize@ret^0,c
  5149                           
  5150                           ;MCAL_Layer/GPIO/mcal_gpio.c: 168:     }
  5151   002D72  EFD1  F016         	goto	l4024
  5152   002D76                     l4022:
  5153                           
  5154                           ;MCAL_Layer/GPIO/mcal_gpio.c: 171:     {;MCAL_Layer/GPIO/mcal_gpio.c: 172:         ret =
      +                           gpio_pin_direction_initialize(_pin_config);
  5155   002D76  C01B  F011         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  5156   002D7A  C01C  F012         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  5157   002D7E  EC44  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  5158   002D82  6E1E               	movwf	gpio_pin_initialize@ret^0,c
  5159                           
  5160                           ;MCAL_Layer/GPIO/mcal_gpio.c: 173:         ret = gpio_pin_write_logic(_pin_config, _pin_
      +                          config->logic);
  5161   002D84  C01B  F011         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  5162   002D88  C01C  F012         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  5163   002D8C  C01B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  5164   002D90  C01C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  5165   002D94  0E00               	movlw	0
  5166   002D96  BEDF               	btfsc	indf2,7,c
  5167   002D98  0E01               	movlw	1
  5168   002D9A  6E13               	movwf	gpio_pin_write_logic@logic^0,c
  5169   002D9C  EC12  F011         	call	_gpio_pin_write_logic	;wreg free
  5170   002DA0  6E1E               	movwf	gpio_pin_initialize@ret^0,c
  5171   002DA2                     l4024:
  5172                           
  5173                           ;MCAL_Layer/GPIO/mcal_gpio.c: 176:     return ret;
  5174   002DA2  501E               	movf	gpio_pin_initialize@ret^0,w,c
  5175   002DA4  0012               	return		;funcret
  5176   002DA6                     __end_of_gpio_pin_initialize:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _gpio_pin_write_logic *****************
  5180 ;; Defined at:
  5181 ;;		line 83 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  _pin_config     2   16[COMRAM] PTR const struct .
  5184 ;;		 -> dc_motor_2.dc_motor_pins(2), dc_motor_2(2), dc_motor_1.dc_motor_pins(2), dc_motor_1(2), 
  5185 ;;		 -> lcd_1.lcd_data_pins(4), lcd_1(6), 
  5186 ;;  logic           1   18[COMRAM] enum E2801
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  ret             1   25[COMRAM] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      unsigned char 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;Total ram usage:       10 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 4
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_ecu_dc_motor_move_right
  5209 ;;		_ecu_dc_motor_move_left
  5210 ;;		_ecu_lcd_4bits_send_command
  5211 ;;		_ecu_lcd_4bits_send_char_data
  5212 ;;		_lcd_send_4bits
  5213 ;;		_lcd_4bits_send_enable_signal
  5214 ;;		_gpio_pin_initialize
  5215 ;;		_ecu_7_segment_write_number
  5216 ;;		_ecu_keypad_get_value
  5217 ;;		_ecu_lcd_8bits_send_command
  5218 ;;		_ecu_lcd_8bits_send_char_data
  5219 ;;		_lcd_8bits_send_enable_signal
  5220 ;;		_ecu_led_turn_off
  5221 ;;		_ecu_led_turn_on
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text35
  5226   002224                     __ptext35:
  5227                           	callstack 0
  5228   002224                     _gpio_pin_write_logic:
  5229                           	callstack 22
  5230   002224                     
  5231                           ;MCAL_Layer/GPIO/mcal_gpio.c: 83: Std_ReturnType gpio_pin_write_logic(const pin_config_t
      +                          * _pin_config, logic_t logic);MCAL_Layer/GPIO/mcal_gpio.c: 84: {;MCAL_Layer/GPIO/mcal_gp
      +                          io.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5232   002224  0E01               	movlw	1
  5233   002226  6E1A               	movwf	gpio_pin_write_logic@ret^0,c
  5234   002228                     
  5235                           ;MCAL_Layer/GPIO/mcal_gpio.c: 87:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  5236   002228  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5237   00222A  1012               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  5238   00222C  B4D8               	btfsc	status,2,c
  5239   00222E  EF1B  F011         	goto	u2681
  5240   002232  EF1D  F011         	goto	u2680
  5241   002236                     u2681:
  5242   002236  EF2E  F011         	goto	l3802
  5243   00223A                     u2680:
  5244   00223A  C011  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5245   00223E  C012  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5246   002242  30DF               	rrcf	223,w,c
  5247   002244  32E8               	rrcf	wreg,f,c
  5248   002246  32E8               	rrcf	wreg,f,c
  5249   002248  0B07               	andlw	7
  5250   00224A  6E14               	movwf	??_gpio_pin_write_logic^0,c
  5251   00224C  0E07               	movlw	7
  5252   00224E  6414               	cpfsgt	??_gpio_pin_write_logic^0,c
  5253   002250  EF2C  F011         	goto	u2691
  5254   002254  EF2E  F011         	goto	u2690
  5255   002258                     u2691:
  5256   002258  EF91  F011         	goto	l3810
  5257   00225C                     u2690:
  5258   00225C                     l3802:
  5259                           
  5260                           ;MCAL_Layer/GPIO/mcal_gpio.c: 88:     {;MCAL_Layer/GPIO/mcal_gpio.c: 89:         ret = (
      +                          Std_ReturnType)0x00;
  5261   00225C  0E00               	movlw	0
  5262   00225E  6E1A               	movwf	gpio_pin_write_logic@ret^0,c
  5263                           
  5264                           ;MCAL_Layer/GPIO/mcal_gpio.c: 90:     }
  5265   002260  EFA6  F011         	goto	l3812
  5266   002264                     l3804:
  5267                           
  5268                           ;MCAL_Layer/GPIO/mcal_gpio.c: 97:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((Std_ReturnType)1 << _pin_config->pin));
  5269   002264  C011  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5270   002268  C012  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5271   00226C  30DF               	rrcf	223,w,c
  5272   00226E  32E8               	rrcf	wreg,f,c
  5273   002270  32E8               	rrcf	wreg,f,c
  5274   002272  0B07               	andlw	7
  5275   002274  6E14               	movwf	??_gpio_pin_write_logic^0,c
  5276   002276  0E01               	movlw	1
  5277   002278  6E15               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5278   00227A  2A14               	incf	??_gpio_pin_write_logic^0,f,c
  5279   00227C  EF42  F011         	goto	u2704
  5280   002280                     u2705:
  5281   002280  90D8               	bcf	status,0,c
  5282   002282  3615               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5283   002284                     u2704:
  5284   002284  2E14               	decfsz	??_gpio_pin_write_logic^0,f,c
  5285   002286  EF40  F011         	goto	u2705
  5286   00228A  5015               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5287   00228C  0AFF               	xorlw	255
  5288   00228E  6E16               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5289   002290  C011  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5290   002294  C012  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5291   002298  50DF               	movf	223,w,c
  5292   00229A  0B07               	andlw	7
  5293   00229C  6E17               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5294   00229E  5017               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5295   0022A0  0D02               	mullw	2
  5296   0022A2  0EC7               	movlw	low _lat_registers
  5297   0022A4  24F3               	addwf	243,w,c
  5298   0022A6  6ED9               	movwf	fsr2l,c
  5299   0022A8  0E00               	movlw	high _lat_registers
  5300   0022AA  20F4               	addwfc	prodh,w,c
  5301   0022AC  6EDA               	movwf	fsr2h,c
  5302   0022AE  CFDE F018          	movff	postinc2,??_gpio_pin_write_logic+4
  5303   0022B2  CFDD F019          	movff	postdec2,??_gpio_pin_write_logic+5
  5304   0022B6  C018  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5305   0022BA  C019  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5306   0022BE  5016               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5307   0022C0  16DF               	andwf	indf2,f,c
  5308                           
  5309                           ;MCAL_Layer/GPIO/mcal_gpio.c: 98:                 break;
  5310   0022C2  EFA6  F011         	goto	l3812
  5311   0022C6                     l3806:
  5312                           
  5313                           ;MCAL_Layer/GPIO/mcal_gpio.c: 101:                 (*lat_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  5314   0022C6  C011  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5315   0022CA  C012  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5316   0022CE  30DF               	rrcf	223,w,c
  5317   0022D0  32E8               	rrcf	wreg,f,c
  5318   0022D2  32E8               	rrcf	wreg,f,c
  5319   0022D4  0B07               	andlw	7
  5320   0022D6  6E14               	movwf	??_gpio_pin_write_logic^0,c
  5321   0022D8  0E01               	movlw	1
  5322   0022DA  6E15               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5323   0022DC  2A14               	incf	??_gpio_pin_write_logic^0,f,c
  5324   0022DE  EF73  F011         	goto	u2714
  5325   0022E2                     u2715:
  5326   0022E2  90D8               	bcf	status,0,c
  5327   0022E4  3615               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5328   0022E6                     u2714:
  5329   0022E6  2E14               	decfsz	??_gpio_pin_write_logic^0,f,c
  5330   0022E8  EF71  F011         	goto	u2715
  5331   0022EC  C011  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5332   0022F0  C012  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5333   0022F4  50DF               	movf	223,w,c
  5334   0022F6  0B07               	andlw	7
  5335   0022F8  6E16               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5336   0022FA  5016               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5337   0022FC  0D02               	mullw	2
  5338   0022FE  0EC7               	movlw	low _lat_registers
  5339   002300  24F3               	addwf	243,w,c
  5340   002302  6ED9               	movwf	fsr2l,c
  5341   002304  0E00               	movlw	high _lat_registers
  5342   002306  20F4               	addwfc	prodh,w,c
  5343   002308  6EDA               	movwf	fsr2h,c
  5344   00230A  CFDE F017          	movff	postinc2,??_gpio_pin_write_logic+3
  5345   00230E  CFDD F018          	movff	postdec2,??_gpio_pin_write_logic+4
  5346   002312  C017  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5347   002316  C018  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5348   00231A  5015               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5349   00231C  12DF               	iorwf	indf2,f,c
  5350                           
  5351                           ;MCAL_Layer/GPIO/mcal_gpio.c: 102:                 break;
  5352   00231E  EFA6  F011         	goto	l3812
  5353   002322                     l3810:
  5354   002322  5013               	movf	gpio_pin_write_logic@logic^0,w,c
  5355   002324  6E14               	movwf	??_gpio_pin_write_logic^0,c
  5356   002326  6A15               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5357                           
  5358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5359                           ; Switch size 1, requested type "simple"
  5360                           ; Number of cases is 1, Range of values is 0 to 0
  5361                           ; switch strategies available:
  5362                           ; Name         Instructions Cycles
  5363                           ; simple_byte            4     3 (average)
  5364                           ;	Chosen strategy is simple_byte
  5365   002328  5015               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5366   00232A  0A00               	xorlw	0	; case 0
  5367   00232C  B4D8               	btfsc	status,2,c
  5368   00232E  EF9B  F011         	goto	l6156
  5369   002332  EF2E  F011         	goto	l3802
  5370   002336                     l6156:
  5371                           
  5372                           ; Switch size 1, requested type "simple"
  5373                           ; Number of cases is 2, Range of values is 0 to 1
  5374                           ; switch strategies available:
  5375                           ; Name         Instructions Cycles
  5376                           ; simple_byte            7     4 (average)
  5377                           ;	Chosen strategy is simple_byte
  5378   002336  5014               	movf	??_gpio_pin_write_logic^0,w,c
  5379   002338  0A00               	xorlw	0	; case 0
  5380   00233A  B4D8               	btfsc	status,2,c
  5381   00233C  EF32  F011         	goto	l3804
  5382   002340  0A01               	xorlw	1	; case 1
  5383   002342  B4D8               	btfsc	status,2,c
  5384   002344  EF63  F011         	goto	l3806
  5385   002348  EF2E  F011         	goto	l3802
  5386   00234C                     l3812:
  5387                           
  5388                           ;MCAL_Layer/GPIO/mcal_gpio.c: 108:     return ret;
  5389   00234C  501A               	movf	gpio_pin_write_logic@ret^0,w,c
  5390   00234E  0012               	return		;funcret
  5391   002350                     __end_of_gpio_pin_write_logic:
  5392                           	callstack 0
  5393                           
  5394 ;; *************** function _gpio_pin_direction_initialize *****************
  5395 ;; Defined at:
  5396 ;;		line 25 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  _pin_config     2   16[COMRAM] PTR const struct .
  5399 ;;		 -> dc_motor_2.dc_motor_pins(2), dc_motor_2(2), dc_motor_1.dc_motor_pins(2), dc_motor_1(2), 
  5400 ;;		 -> lcd_1.lcd_data_pins(4), lcd_1(6), 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  ret             1   24[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;Total ram usage:        9 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 4
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_gpio_pin_initialize
  5423 ;;		_ecu_button_initialize
  5424 ;;		_ecu_keypad_initialize
  5425 ;;		_Interrupt_INTx_Pin_Init
  5426 ;;		_Interrupt_RBx_Pin_Init
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text36
  5431   001E88                     __ptext36:
  5432                           	callstack 0
  5433   001E88                     _gpio_pin_direction_initialize:
  5434                           	callstack 24
  5435   001E88                     
  5436                           ;MCAL_Layer/GPIO/mcal_gpio.c: 25: Std_ReturnType gpio_pin_direction_initialize(const pin
      +                          _config_t* _pin_config);MCAL_Layer/GPIO/mcal_gpio.c: 26: {;MCAL_Layer/GPIO/mcal_gpio.c: 
      +                          27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5437   001E88  0E01               	movlw	1
  5438   001E8A  6E19               	movwf	gpio_pin_direction_initialize@ret^0,c
  5439   001E8C                     
  5440                           ;MCAL_Layer/GPIO/mcal_gpio.c: 29:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  5441   001E8C  5011               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  5442   001E8E  1012               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  5443   001E90  B4D8               	btfsc	status,2,c
  5444   001E92  EF4D  F00F         	goto	u2871
  5445   001E96  EF4F  F00F         	goto	u2870
  5446   001E9A                     u2871:
  5447   001E9A  EF60  F00F         	goto	l3924
  5448   001E9E                     u2870:
  5449   001E9E  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5450   001EA2  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5451   001EA6  30DF               	rrcf	223,w,c
  5452   001EA8  32E8               	rrcf	wreg,f,c
  5453   001EAA  32E8               	rrcf	wreg,f,c
  5454   001EAC  0B07               	andlw	7
  5455   001EAE  6E13               	movwf	??_gpio_pin_direction_initialize^0,c
  5456   001EB0  0E07               	movlw	7
  5457   001EB2  6413               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  5458   001EB4  EF5E  F00F         	goto	u2881
  5459   001EB8  EF60  F00F         	goto	u2880
  5460   001EBC                     u2881:
  5461   001EBC  EFC3  F00F         	goto	l3932
  5462   001EC0                     u2880:
  5463   001EC0                     l3924:
  5464                           
  5465                           ;MCAL_Layer/GPIO/mcal_gpio.c: 30:     {;MCAL_Layer/GPIO/mcal_gpio.c: 31:         ret = (
      +                          Std_ReturnType)0x00;
  5466   001EC0  0E00               	movlw	0
  5467   001EC2  6E19               	movwf	gpio_pin_direction_initialize@ret^0,c
  5468                           
  5469                           ;MCAL_Layer/GPIO/mcal_gpio.c: 32:     }
  5470   001EC4  EFE4  F00F         	goto	l3934
  5471   001EC8                     l3926:
  5472                           
  5473                           ;MCAL_Layer/GPIO/mcal_gpio.c: 39:                 (*tris_registers[_pin_config->port] &=
      +                           ~((Std_ReturnType)1 << _pin_config->pin));
  5474   001EC8  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5475   001ECC  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5476   001ED0  30DF               	rrcf	223,w,c
  5477   001ED2  32E8               	rrcf	wreg,f,c
  5478   001ED4  32E8               	rrcf	wreg,f,c
  5479   001ED6  0B07               	andlw	7
  5480   001ED8  6E13               	movwf	??_gpio_pin_direction_initialize^0,c
  5481   001EDA  0E01               	movlw	1
  5482   001EDC  6E14               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  5483   001EDE  2A13               	incf	??_gpio_pin_direction_initialize^0,f,c
  5484   001EE0  EF74  F00F         	goto	u2894
  5485   001EE4                     u2895:
  5486   001EE4  90D8               	bcf	status,0,c
  5487   001EE6  3614               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  5488   001EE8                     u2894:
  5489   001EE8  2E13               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  5490   001EEA  EF72  F00F         	goto	u2895
  5491   001EEE  5014               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5492   001EF0  0AFF               	xorlw	255
  5493   001EF2  6E15               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  5494   001EF4  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5495   001EF8  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5496   001EFC  50DF               	movf	223,w,c
  5497   001EFE  0B07               	andlw	7
  5498   001F00  6E16               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  5499   001F02  5016               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  5500   001F04  0D02               	mullw	2
  5501   001F06  0ED1               	movlw	low _tris_registers
  5502   001F08  24F3               	addwf	243,w,c
  5503   001F0A  6ED9               	movwf	fsr2l,c
  5504   001F0C  0E00               	movlw	high _tris_registers
  5505   001F0E  20F4               	addwfc	prodh,w,c
  5506   001F10  6EDA               	movwf	fsr2h,c
  5507   001F12  CFDE F017          	movff	postinc2,??_gpio_pin_direction_initialize+4
  5508   001F16  CFDD F018          	movff	postdec2,??_gpio_pin_direction_initialize+5
  5509   001F1A  C017  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  5510   001F1E  C018  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  5511   001F22  5015               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  5512   001F24  16DF               	andwf	indf2,f,c
  5513                           
  5514                           ;MCAL_Layer/GPIO/mcal_gpio.c: 40:                 break;
  5515   001F26  EFE4  F00F         	goto	l3934
  5516   001F2A                     l3928:
  5517                           
  5518                           ;MCAL_Layer/GPIO/mcal_gpio.c: 43:                 (*tris_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  5519   001F2A  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5520   001F2E  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5521   001F32  30DF               	rrcf	223,w,c
  5522   001F34  32E8               	rrcf	wreg,f,c
  5523   001F36  32E8               	rrcf	wreg,f,c
  5524   001F38  0B07               	andlw	7
  5525   001F3A  6E13               	movwf	??_gpio_pin_direction_initialize^0,c
  5526   001F3C  0E01               	movlw	1
  5527   001F3E  6E14               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  5528   001F40  2A13               	incf	??_gpio_pin_direction_initialize^0,f,c
  5529   001F42  EFA5  F00F         	goto	u2904
  5530   001F46                     u2905:
  5531   001F46  90D8               	bcf	status,0,c
  5532   001F48  3614               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  5533   001F4A                     u2904:
  5534   001F4A  2E13               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  5535   001F4C  EFA3  F00F         	goto	u2905
  5536   001F50  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5537   001F54  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5538   001F58  50DF               	movf	223,w,c
  5539   001F5A  0B07               	andlw	7
  5540   001F5C  6E15               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  5541   001F5E  5015               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  5542   001F60  0D02               	mullw	2
  5543   001F62  0ED1               	movlw	low _tris_registers
  5544   001F64  24F3               	addwf	243,w,c
  5545   001F66  6ED9               	movwf	fsr2l,c
  5546   001F68  0E00               	movlw	high _tris_registers
  5547   001F6A  20F4               	addwfc	prodh,w,c
  5548   001F6C  6EDA               	movwf	fsr2h,c
  5549   001F6E  CFDE F016          	movff	postinc2,??_gpio_pin_direction_initialize+3
  5550   001F72  CFDD F017          	movff	postdec2,??_gpio_pin_direction_initialize+4
  5551   001F76  C016  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  5552   001F7A  C017  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  5553   001F7E  5014               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5554   001F80  12DF               	iorwf	indf2,f,c
  5555                           
  5556                           ;MCAL_Layer/GPIO/mcal_gpio.c: 44:                 break;
  5557   001F82  EFE4  F00F         	goto	l3934
  5558   001F86                     l3932:
  5559   001F86  C011  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5560   001F8A  C012  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5561   001F8E  BCDF               	btfsc	indf2,6,c
  5562   001F90  EFCC  F00F         	goto	u2911
  5563   001F94  EFCF  F00F         	goto	u2910
  5564   001F98                     u2911:
  5565   001F98  0E01               	movlw	1
  5566   001F9A  EFD0  F00F         	goto	u2920
  5567   001F9E                     u2910:
  5568   001F9E  0E00               	movlw	0
  5569   001FA0                     u2920:
  5570   001FA0  6E13               	movwf	??_gpio_pin_direction_initialize^0,c
  5571   001FA2  6A14               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  5572                           
  5573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5574                           ; Switch size 1, requested type "simple"
  5575                           ; Number of cases is 1, Range of values is 0 to 0
  5576                           ; switch strategies available:
  5577                           ; Name         Instructions Cycles
  5578                           ; simple_byte            4     3 (average)
  5579                           ;	Chosen strategy is simple_byte
  5580   001FA4  5014               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5581   001FA6  0A00               	xorlw	0	; case 0
  5582   001FA8  B4D8               	btfsc	status,2,c
  5583   001FAA  EFD9  F00F         	goto	l6158
  5584   001FAE  EF60  F00F         	goto	l3924
  5585   001FB2                     l6158:
  5586                           
  5587                           ; Switch size 1, requested type "simple"
  5588                           ; Number of cases is 2, Range of values is 0 to 1
  5589                           ; switch strategies available:
  5590                           ; Name         Instructions Cycles
  5591                           ; simple_byte            7     4 (average)
  5592                           ;	Chosen strategy is simple_byte
  5593   001FB2  5013               	movf	??_gpio_pin_direction_initialize^0,w,c
  5594   001FB4  0A00               	xorlw	0	; case 0
  5595   001FB6  B4D8               	btfsc	status,2,c
  5596   001FB8  EF64  F00F         	goto	l3926
  5597   001FBC  0A01               	xorlw	1	; case 1
  5598   001FBE  B4D8               	btfsc	status,2,c
  5599   001FC0  EF95  F00F         	goto	l3928
  5600   001FC4  EF60  F00F         	goto	l3924
  5601   001FC8                     l3934:
  5602                           
  5603                           ;MCAL_Layer/GPIO/mcal_gpio.c: 51:     return ret;
  5604   001FC8  5019               	movf	gpio_pin_direction_initialize@ret^0,w,c
  5605   001FCA  0012               	return		;funcret
  5606   001FCC                     __end_of_gpio_pin_direction_initialize:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function ___xxtofl *****************
  5610 ;; Defined at:
  5611 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  sign            1    wreg     unsigned char 
  5614 ;;  val             4   16[COMRAM] long 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  sign            1   24[COMRAM] unsigned char 
  5617 ;;  arg             4   26[COMRAM] unsigned long 
  5618 ;;  exp             1   25[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  4   16[COMRAM] unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:       14 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 4
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text37
  5643   0019C8                     __ptext37:
  5644                           	callstack 0
  5645   0019C8                     ___xxtofl:
  5646                           	callstack 26
  5647                           
  5648                           ;incstack = 0
  5649                           ;___xxtofl@sign stored from wreg
  5650   0019C8  6E19               	movwf	___xxtofl@sign^0,c
  5651   0019CA  5019               	movf	___xxtofl@sign^0,w,c
  5652   0019CC  B4D8               	btfsc	status,2,c
  5653   0019CE  EFEB  F00C         	goto	u3931
  5654   0019D2  EFED  F00C         	goto	u3930
  5655   0019D6                     u3931:
  5656   0019D6  EF0F  F00D         	goto	l1601
  5657   0019DA                     u3930:
  5658   0019DA  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  5659   0019DC  EFF4  F00C         	goto	u3940
  5660   0019E0  EFF2  F00C         	goto	u3941
  5661   0019E4                     u3941:
  5662   0019E4  EF0F  F00D         	goto	l1601
  5663   0019E8                     u3940:
  5664   0019E8  C011  F015         	movff	___xxtofl@val,??___xxtofl
  5665   0019EC  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
  5666   0019F0  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
  5667   0019F4  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
  5668   0019F8  1E15               	comf	??___xxtofl^0,f,c
  5669   0019FA  1E16               	comf	(??___xxtofl+1)^0,f,c
  5670   0019FC  1E17               	comf	(??___xxtofl+2)^0,f,c
  5671   0019FE  1E18               	comf	(??___xxtofl+3)^0,f,c
  5672   001A00  2A15               	incf	??___xxtofl^0,f,c
  5673   001A02  0E00               	movlw	0
  5674   001A04  2216               	addwfc	(??___xxtofl+1)^0,f,c
  5675   001A06  2217               	addwfc	(??___xxtofl+2)^0,f,c
  5676   001A08  2218               	addwfc	(??___xxtofl+3)^0,f,c
  5677   001A0A  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
  5678   001A0E  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5679   001A12  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5680   001A16  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5681   001A1A  EF17  F00D         	goto	l4876
  5682   001A1E                     l1601:
  5683   001A1E  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
  5684   001A22  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5685   001A26  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5686   001A2A  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5687   001A2E                     l4876:
  5688   001A2E  5011               	movf	___xxtofl@val^0,w,c
  5689   001A30  1012               	iorwf	(___xxtofl@val+1)^0,w,c
  5690   001A32  1013               	iorwf	(___xxtofl@val+2)^0,w,c
  5691   001A34  1014               	iorwf	(___xxtofl@val+3)^0,w,c
  5692   001A36  A4D8               	btfss	status,2,c
  5693   001A38  EF20  F00D         	goto	u3951
  5694   001A3C  EF22  F00D         	goto	u3950
  5695   001A40                     u3951:
  5696   001A40  EF2C  F00D         	goto	l4882
  5697   001A44                     u3950:
  5698   001A44  0E00               	movlw	0
  5699   001A46  6E11               	movwf	?___xxtofl^0,c
  5700   001A48  0E00               	movlw	0
  5701   001A4A  6E12               	movwf	(?___xxtofl+1)^0,c
  5702   001A4C  0E00               	movlw	0
  5703   001A4E  6E13               	movwf	(?___xxtofl+2)^0,c
  5704   001A50  0E00               	movlw	0
  5705   001A52  6E14               	movwf	(?___xxtofl+3)^0,c
  5706   001A54  EFBD  F00D         	goto	l1604
  5707   001A58                     l4882:
  5708   001A58  0E96               	movlw	150
  5709   001A5A  6E1A               	movwf	___xxtofl@exp^0,c
  5710   001A5C  EF36  F00D         	goto	l4886
  5711   001A60                     l4884:
  5712   001A60  2A1A               	incf	___xxtofl@exp^0,f,c
  5713   001A62  90D8               	bcf	status,0,c
  5714   001A64  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5715   001A66  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5716   001A68  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5717   001A6A  321B               	rrcf	___xxtofl@arg^0,f,c
  5718   001A6C                     l4886:
  5719   001A6C  0E00               	movlw	0
  5720   001A6E  141B               	andwf	___xxtofl@arg^0,w,c
  5721   001A70  6E15               	movwf	??___xxtofl^0,c
  5722   001A72  0E00               	movlw	0
  5723   001A74  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  5724   001A76  6E16               	movwf	(??___xxtofl+1)^0,c
  5725   001A78  0E00               	movlw	0
  5726   001A7A  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  5727   001A7C  6E17               	movwf	(??___xxtofl+2)^0,c
  5728   001A7E  0EFE               	movlw	254
  5729   001A80  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  5730   001A82  6E18               	movwf	(??___xxtofl+3)^0,c
  5731   001A84  5015               	movf	??___xxtofl^0,w,c
  5732   001A86  1016               	iorwf	(??___xxtofl+1)^0,w,c
  5733   001A88  1017               	iorwf	(??___xxtofl+2)^0,w,c
  5734   001A8A  1018               	iorwf	(??___xxtofl+3)^0,w,c
  5735   001A8C  A4D8               	btfss	status,2,c
  5736   001A8E  EF4B  F00D         	goto	u3961
  5737   001A92  EF4D  F00D         	goto	u3960
  5738   001A96                     u3961:
  5739   001A96  EF30  F00D         	goto	l4884
  5740   001A9A                     u3960:
  5741   001A9A  EF5B  F00D         	goto	l1608
  5742   001A9E                     l4888:
  5743   001A9E  2A1A               	incf	___xxtofl@exp^0,f,c
  5744   001AA0  0E01               	movlw	1
  5745   001AA2  261B               	addwf	___xxtofl@arg^0,f,c
  5746   001AA4  0E00               	movlw	0
  5747   001AA6  221C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5748   001AA8  221D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5749   001AAA  221E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5750   001AAC  90D8               	bcf	status,0,c
  5751   001AAE  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5752   001AB0  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5753   001AB2  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5754   001AB4  321B               	rrcf	___xxtofl@arg^0,f,c
  5755   001AB6                     l1608:
  5756   001AB6  0E00               	movlw	0
  5757   001AB8  141B               	andwf	___xxtofl@arg^0,w,c
  5758   001ABA  6E15               	movwf	??___xxtofl^0,c
  5759   001ABC  0E00               	movlw	0
  5760   001ABE  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  5761   001AC0  6E16               	movwf	(??___xxtofl+1)^0,c
  5762   001AC2  0E00               	movlw	0
  5763   001AC4  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  5764   001AC6  6E17               	movwf	(??___xxtofl+2)^0,c
  5765   001AC8  0EFF               	movlw	255
  5766   001ACA  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  5767   001ACC  6E18               	movwf	(??___xxtofl+3)^0,c
  5768   001ACE  5015               	movf	??___xxtofl^0,w,c
  5769   001AD0  1016               	iorwf	(??___xxtofl+1)^0,w,c
  5770   001AD2  1017               	iorwf	(??___xxtofl+2)^0,w,c
  5771   001AD4  1018               	iorwf	(??___xxtofl+3)^0,w,c
  5772   001AD6  A4D8               	btfss	status,2,c
  5773   001AD8  EF70  F00D         	goto	u3971
  5774   001ADC  EF72  F00D         	goto	u3970
  5775   001AE0                     u3971:
  5776   001AE0  EF4F  F00D         	goto	l4888
  5777   001AE4                     u3970:
  5778   001AE4  EF7A  F00D         	goto	l4896
  5779   001AE8                     l4894:
  5780   001AE8  061A               	decf	___xxtofl@exp^0,f,c
  5781   001AEA  90D8               	bcf	status,0,c
  5782   001AEC  361B               	rlcf	___xxtofl@arg^0,f,c
  5783   001AEE  361C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5784   001AF0  361D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5785   001AF2  361E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5786   001AF4                     l4896:
  5787   001AF4  BE1D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5788   001AF6  EF7F  F00D         	goto	u3981
  5789   001AFA  EF81  F00D         	goto	u3980
  5790   001AFE                     u3981:
  5791   001AFE  EF89  F00D         	goto	l1615
  5792   001B02                     u3980:
  5793   001B02  0E02               	movlw	2
  5794   001B04  601A               	cpfslt	___xxtofl@exp^0,c
  5795   001B06  EF87  F00D         	goto	u3991
  5796   001B0A  EF89  F00D         	goto	u3990
  5797   001B0E                     u3991:
  5798   001B0E  EF74  F00D         	goto	l4894
  5799   001B12                     u3990:
  5800   001B12                     l1615:
  5801   001B12  B01A               	btfsc	___xxtofl@exp^0,0,c
  5802   001B14  EF8E  F00D         	goto	u4001
  5803   001B18  EF90  F00D         	goto	u4000
  5804   001B1C                     u4001:
  5805   001B1C  EF91  F00D         	goto	l4902
  5806   001B20                     u4000:
  5807   001B20  9E1D               	bcf	(___xxtofl@arg+2)^0,7,c
  5808   001B22                     l4902:
  5809   001B22  90D8               	bcf	status,0,c
  5810   001B24  321A               	rrcf	___xxtofl@exp^0,f,c
  5811   001B26  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
  5812   001B2A  6A16               	clrf	(??___xxtofl+1)^0,c
  5813   001B2C  6A17               	clrf	(??___xxtofl+2)^0,c
  5814   001B2E  6A18               	clrf	(??___xxtofl+3)^0,c
  5815   001B30  C015  F018         	movff	??___xxtofl,??___xxtofl+3
  5816   001B34  6A17               	clrf	(??___xxtofl+2)^0,c
  5817   001B36  6A16               	clrf	(??___xxtofl+1)^0,c
  5818   001B38  6A15               	clrf	??___xxtofl^0,c
  5819   001B3A  5015               	movf	??___xxtofl^0,w,c
  5820   001B3C  121B               	iorwf	___xxtofl@arg^0,f,c
  5821   001B3E  5016               	movf	(??___xxtofl+1)^0,w,c
  5822   001B40  121C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5823   001B42  5017               	movf	(??___xxtofl+2)^0,w,c
  5824   001B44  121D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5825   001B46  5018               	movf	(??___xxtofl+3)^0,w,c
  5826   001B48  121E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5827   001B4A  5019               	movf	___xxtofl@sign^0,w,c
  5828   001B4C  B4D8               	btfsc	status,2,c
  5829   001B4E  EFAB  F00D         	goto	u4011
  5830   001B52  EFAD  F00D         	goto	u4010
  5831   001B56                     u4011:
  5832   001B56  EFB5  F00D         	goto	l4912
  5833   001B5A                     u4010:
  5834   001B5A  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  5835   001B5C  EFB4  F00D         	goto	u4020
  5836   001B60  EFB2  F00D         	goto	u4021
  5837   001B64                     u4021:
  5838   001B64  EFB5  F00D         	goto	l4912
  5839   001B68                     u4020:
  5840   001B68  8E1E               	bsf	(___xxtofl@arg+3)^0,7,c
  5841   001B6A                     l4912:
  5842   001B6A  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
  5843   001B6E  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
  5844   001B72  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
  5845   001B76  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
  5846   001B7A                     l1604:
  5847   001B7A  0012               	return		;funcret
  5848   001B7C                     __end_of___xxtofl:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function ___lwdiv *****************
  5852 ;; Defined at:
  5853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  dividend        2   16[COMRAM] unsigned int 
  5856 ;;  divisor         2   18[COMRAM] unsigned int 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  quotient        2   20[COMRAM] unsigned int 
  5859 ;;  counter         1   22[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  2   16[COMRAM] unsigned int 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:        7 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 4
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_main
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text38
  5884   002C58                     __ptext38:
  5885                           	callstack 0
  5886   002C58                     ___lwdiv:
  5887                           	callstack 26
  5888   002C58  0E00               	movlw	0
  5889   002C5A  6E16               	movwf	(___lwdiv@quotient+1)^0,c
  5890   002C5C  0E00               	movlw	0
  5891   002C5E  6E15               	movwf	___lwdiv@quotient^0,c
  5892   002C60  5013               	movf	___lwdiv@divisor^0,w,c
  5893   002C62  1014               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5894   002C64  B4D8               	btfsc	status,2,c
  5895   002C66  EF37  F016         	goto	u3901
  5896   002C6A  EF39  F016         	goto	u3900
  5897   002C6E                     u3901:
  5898   002C6E  EF61  F016         	goto	l1437
  5899   002C72                     u3900:
  5900   002C72  0E01               	movlw	1
  5901   002C74  6E17               	movwf	___lwdiv@counter^0,c
  5902   002C76  EF41  F016         	goto	l4856
  5903   002C7A                     l4854:
  5904   002C7A  90D8               	bcf	status,0,c
  5905   002C7C  3613               	rlcf	___lwdiv@divisor^0,f,c
  5906   002C7E  3614               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5907   002C80  2A17               	incf	___lwdiv@counter^0,f,c
  5908   002C82                     l4856:
  5909   002C82  AE14               	btfss	(___lwdiv@divisor+1)^0,7,c
  5910   002C84  EF46  F016         	goto	u3911
  5911   002C88  EF48  F016         	goto	u3910
  5912   002C8C                     u3911:
  5913   002C8C  EF3D  F016         	goto	l4854
  5914   002C90                     u3910:
  5915   002C90                     l4858:
  5916   002C90  90D8               	bcf	status,0,c
  5917   002C92  3615               	rlcf	___lwdiv@quotient^0,f,c
  5918   002C94  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5919   002C96  5013               	movf	___lwdiv@divisor^0,w,c
  5920   002C98  5C11               	subwf	___lwdiv@dividend^0,w,c
  5921   002C9A  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  5922   002C9C  5812               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5923   002C9E  A0D8               	btfss	status,0,c
  5924   002CA0  EF54  F016         	goto	u3921
  5925   002CA4  EF56  F016         	goto	u3920
  5926   002CA8                     u3921:
  5927   002CA8  EF5B  F016         	goto	l4866
  5928   002CAC                     u3920:
  5929   002CAC  5013               	movf	___lwdiv@divisor^0,w,c
  5930   002CAE  5E11               	subwf	___lwdiv@dividend^0,f,c
  5931   002CB0  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  5932   002CB2  5A12               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5933   002CB4  8015               	bsf	___lwdiv@quotient^0,0,c
  5934   002CB6                     l4866:
  5935   002CB6  90D8               	bcf	status,0,c
  5936   002CB8  3214               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5937   002CBA  3213               	rrcf	___lwdiv@divisor^0,f,c
  5938   002CBC  2E17               	decfsz	___lwdiv@counter^0,f,c
  5939   002CBE  EF48  F016         	goto	l4858
  5940   002CC2                     l1437:
  5941   002CC2  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
  5942   002CC6  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5943   002CCA  0012               	return		;funcret
  5944   002CCC                     __end_of___lwdiv:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function ___fltol *****************
  5948 ;; Defined at:
  5949 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  f1              4   55[COMRAM] unsigned int 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  exp1            1   64[COMRAM] unsigned char 
  5954 ;;  sign1           1   63[COMRAM] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  4   55[COMRAM] long 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;Total ram usage:       10 bytes
  5969 ;; Hardware stack levels used: 1
  5970 ;; Hardware stack levels required when called: 4
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_main
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text39
  5979   002350                     __ptext39:
  5980                           	callstack 0
  5981   002350                     ___fltol:
  5982                           	callstack 26
  5983   002350  343A               	rlcf	(___fltol@f1+2)^0,w,c
  5984   002352  343B               	rlcf	(___fltol@f1+3)^0,w,c
  5985   002354  6E41               	movwf	___fltol@exp1^0,c
  5986   002356  5041               	movf	___fltol@exp1^0,w,c
  5987   002358  A4D8               	btfss	status,2,c
  5988   00235A  EFB1  F011         	goto	u3831
  5989   00235E  EFB3  F011         	goto	u3830
  5990   002362                     u3831:
  5991   002362  EFBD  F011         	goto	l4810
  5992   002366                     u3830:
  5993   002366                     l4806:
  5994   002366  0E00               	movlw	0
  5995   002368  6E38               	movwf	?___fltol^0,c
  5996   00236A  0E00               	movlw	0
  5997   00236C  6E39               	movwf	(?___fltol+1)^0,c
  5998   00236E  0E00               	movlw	0
  5999   002370  6E3A               	movwf	(?___fltol+2)^0,c
  6000   002372  0E00               	movlw	0
  6001   002374  6E3B               	movwf	(?___fltol+3)^0,c
  6002   002376  EF2A  F012         	goto	l1243
  6003   00237A                     l4810:
  6004   00237A  C038  F03C         	movff	___fltol@f1,??___fltol
  6005   00237E  C039  F03D         	movff	___fltol@f1+1,??___fltol+1
  6006   002382  C03A  F03E         	movff	___fltol@f1+2,??___fltol+2
  6007   002386  C03B  F03F         	movff	___fltol@f1+3,??___fltol+3
  6008   00238A  0E20               	movlw	32
  6009   00238C  EFCD  F011         	goto	u3840
  6010   002390                     u3845:
  6011   002390  90D8               	bcf	status,0,c
  6012   002392  323F               	rrcf	(??___fltol+3)^0,f,c
  6013   002394  323E               	rrcf	(??___fltol+2)^0,f,c
  6014   002396  323D               	rrcf	(??___fltol+1)^0,f,c
  6015   002398  323C               	rrcf	??___fltol^0,f,c
  6016   00239A                     u3840:
  6017   00239A  2EE8               	decfsz	wreg,f,c
  6018   00239C  EFC8  F011         	goto	u3845
  6019   0023A0  503C               	movf	??___fltol^0,w,c
  6020   0023A2  6E40               	movwf	___fltol@sign1^0,c
  6021   0023A4  8E3A               	bsf	(___fltol@f1+2)^0,7,c
  6022   0023A6  0EFF               	movlw	255
  6023   0023A8  1638               	andwf	___fltol@f1^0,f,c
  6024   0023AA  0EFF               	movlw	255
  6025   0023AC  1639               	andwf	(___fltol@f1+1)^0,f,c
  6026   0023AE  0EFF               	movlw	255
  6027   0023B0  163A               	andwf	(___fltol@f1+2)^0,f,c
  6028   0023B2  0E00               	movlw	0
  6029   0023B4  163B               	andwf	(___fltol@f1+3)^0,f,c
  6030   0023B6  0E96               	movlw	150
  6031   0023B8  5E41               	subwf	___fltol@exp1^0,f,c
  6032   0023BA  BE41               	btfsc	___fltol@exp1^0,7,c
  6033   0023BC  EFE4  F011         	goto	u3850
  6034   0023C0  EFE2  F011         	goto	u3851
  6035   0023C4                     u3851:
  6036   0023C4  EFFA  F011         	goto	l4830
  6037   0023C8                     u3850:
  6038   0023C8  5041               	movf	___fltol@exp1^0,w,c
  6039   0023CA  0A80               	xorlw	128
  6040   0023CC  0F97               	addlw	151
  6041   0023CE  B0D8               	btfsc	status,0,c
  6042   0023D0  EFEC  F011         	goto	u3861
  6043   0023D4  EFEE  F011         	goto	u3860
  6044   0023D8                     u3861:
  6045   0023D8  EFF0  F011         	goto	l4826
  6046   0023DC                     u3860:
  6047   0023DC  EFB3  F011         	goto	l4806
  6048   0023E0                     l4826:
  6049   0023E0  90D8               	bcf	status,0,c
  6050   0023E2  323B               	rrcf	(___fltol@f1+3)^0,f,c
  6051   0023E4  323A               	rrcf	(___fltol@f1+2)^0,f,c
  6052   0023E6  3239               	rrcf	(___fltol@f1+1)^0,f,c
  6053   0023E8  3238               	rrcf	___fltol@f1^0,f,c
  6054   0023EA  3E41               	incfsz	___fltol@exp1^0,f,c
  6055   0023EC  EFF0  F011         	goto	l4826
  6056   0023F0  EF12  F012         	goto	l4840
  6057   0023F4                     l4830:
  6058   0023F4  0E1F               	movlw	31
  6059   0023F6  6441               	cpfsgt	___fltol@exp1^0,c
  6060   0023F8  EF00  F012         	goto	u3871
  6061   0023FC  EF02  F012         	goto	u3870
  6062   002400                     u3871:
  6063   002400  EF0A  F012         	goto	l4838
  6064   002404                     u3870:
  6065   002404  EFB3  F011         	goto	l4806
  6066   002408                     l4836:
  6067   002408  90D8               	bcf	status,0,c
  6068   00240A  3638               	rlcf	___fltol@f1^0,f,c
  6069   00240C  3639               	rlcf	(___fltol@f1+1)^0,f,c
  6070   00240E  363A               	rlcf	(___fltol@f1+2)^0,f,c
  6071   002410  363B               	rlcf	(___fltol@f1+3)^0,f,c
  6072   002412  0641               	decf	___fltol@exp1^0,f,c
  6073   002414                     l4838:
  6074   002414  5041               	movf	___fltol@exp1^0,w,c
  6075   002416  A4D8               	btfss	status,2,c
  6076   002418  EF10  F012         	goto	u3881
  6077   00241C  EF12  F012         	goto	u3880
  6078   002420                     u3881:
  6079   002420  EF04  F012         	goto	l4836
  6080   002424                     u3880:
  6081   002424                     l4840:
  6082   002424  5040               	movf	___fltol@sign1^0,w,c
  6083   002426  B4D8               	btfsc	status,2,c
  6084   002428  EF18  F012         	goto	u3891
  6085   00242C  EF1A  F012         	goto	u3890
  6086   002430                     u3891:
  6087   002430  EF22  F012         	goto	l4844
  6088   002434                     u3890:
  6089   002434  1E3B               	comf	(___fltol@f1+3)^0,f,c
  6090   002436  1E3A               	comf	(___fltol@f1+2)^0,f,c
  6091   002438  1E39               	comf	(___fltol@f1+1)^0,f,c
  6092   00243A  6C38               	negf	___fltol@f1^0,c
  6093   00243C  0E00               	movlw	0
  6094   00243E  2239               	addwfc	(___fltol@f1+1)^0,f,c
  6095   002440  223A               	addwfc	(___fltol@f1+2)^0,f,c
  6096   002442  223B               	addwfc	(___fltol@f1+3)^0,f,c
  6097   002444                     l4844:
  6098   002444  C038  F038         	movff	___fltol@f1,?___fltol
  6099   002448  C039  F039         	movff	___fltol@f1+1,?___fltol+1
  6100   00244C  C03A  F03A         	movff	___fltol@f1+2,?___fltol+2
  6101   002450  C03B  F03B         	movff	___fltol@f1+3,?___fltol+3
  6102   002454                     l1243:
  6103   002454  0012               	return		;funcret
  6104   002456                     __end_of___fltol:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function ___flmul *****************
  6108 ;; Defined at:
  6109 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  b               4   30[COMRAM] long 
  6112 ;;  a               4   34[COMRAM] long 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  prod            4   49[COMRAM] struct .
  6115 ;;  grs             4   43[COMRAM] unsigned long 
  6116 ;;  temp            2   53[COMRAM] struct .
  6117 ;;  bexp            1   48[COMRAM] unsigned char 
  6118 ;;  aexp            1   47[COMRAM] unsigned char 
  6119 ;;  sign            1   42[COMRAM] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  4   30[COMRAM] unsigned char 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, prodl, prodh
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6129 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;Total ram usage:       25 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 4
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text40
  6144   001030                     __ptext40:
  6145                           	callstack 0
  6146   001030                     ___flmul:
  6147                           	callstack 26
  6148   001030  5022               	movf	(___flmul@b+3)^0,w,c
  6149   001032  0B80               	andlw	128
  6150   001034  6E2B               	movwf	___flmul@sign^0,c
  6151   001036  5022               	movf	(___flmul@b+3)^0,w,c
  6152   001038  2422               	addwf	(___flmul@b+3)^0,w,c
  6153   00103A  6E31               	movwf	___flmul@bexp^0,c
  6154   00103C  AE21               	btfss	(___flmul@b+2)^0,7,c
  6155   00103E  EF23  F008         	goto	u3641
  6156   001042  EF25  F008         	goto	u3640
  6157   001046                     u3641:
  6158   001046  EF26  F008         	goto	l4680
  6159   00104A                     u3640:
  6160   00104A  8031               	bsf	___flmul@bexp^0,0,c
  6161   00104C                     l4680:
  6162   00104C  5031               	movf	___flmul@bexp^0,w,c
  6163   00104E  B4D8               	btfsc	status,2,c
  6164   001050  EF2C  F008         	goto	u3651
  6165   001054  EF2E  F008         	goto	u3650
  6166   001058                     u3651:
  6167   001058  EF41  F008         	goto	l4688
  6168   00105C                     u3650:
  6169   00105C  2831               	incf	___flmul@bexp^0,w,c
  6170   00105E  A4D8               	btfss	status,2,c
  6171   001060  EF34  F008         	goto	u3661
  6172   001064  EF36  F008         	goto	u3660
  6173   001068                     u3661:
  6174   001068  EF3E  F008         	goto	l4686
  6175   00106C                     u3660:
  6176   00106C  0E00               	movlw	0
  6177   00106E  6E1F               	movwf	___flmul@b^0,c
  6178   001070  0E00               	movlw	0
  6179   001072  6E20               	movwf	(___flmul@b+1)^0,c
  6180   001074  0E00               	movlw	0
  6181   001076  6E21               	movwf	(___flmul@b+2)^0,c
  6182   001078  0E00               	movlw	0
  6183   00107A  6E22               	movwf	(___flmul@b+3)^0,c
  6184   00107C                     l4686:
  6185   00107C  8E21               	bsf	(___flmul@b+2)^0,7,c
  6186   00107E  EF49  F008         	goto	l4690
  6187   001082                     l4688:
  6188   001082  0E00               	movlw	0
  6189   001084  6E1F               	movwf	___flmul@b^0,c
  6190   001086  0E00               	movlw	0
  6191   001088  6E20               	movwf	(___flmul@b+1)^0,c
  6192   00108A  0E00               	movlw	0
  6193   00108C  6E21               	movwf	(___flmul@b+2)^0,c
  6194   00108E  0E00               	movlw	0
  6195   001090  6E22               	movwf	(___flmul@b+3)^0,c
  6196   001092                     l4690:
  6197   001092  5026               	movf	(___flmul@a+3)^0,w,c
  6198   001094  0B80               	andlw	128
  6199   001096  1A2B               	xorwf	___flmul@sign^0,f,c
  6200   001098  5026               	movf	(___flmul@a+3)^0,w,c
  6201   00109A  2426               	addwf	(___flmul@a+3)^0,w,c
  6202   00109C  6E30               	movwf	___flmul@aexp^0,c
  6203   00109E  AE25               	btfss	(___flmul@a+2)^0,7,c
  6204   0010A0  EF54  F008         	goto	u3671
  6205   0010A4  EF56  F008         	goto	u3670
  6206   0010A8                     u3671:
  6207   0010A8  EF57  F008         	goto	l4698
  6208   0010AC                     u3670:
  6209   0010AC  8030               	bsf	___flmul@aexp^0,0,c
  6210   0010AE                     l4698:
  6211   0010AE  5030               	movf	___flmul@aexp^0,w,c
  6212   0010B0  B4D8               	btfsc	status,2,c
  6213   0010B2  EF5D  F008         	goto	u3681
  6214   0010B6  EF5F  F008         	goto	u3680
  6215   0010BA                     u3681:
  6216   0010BA  EF72  F008         	goto	l4706
  6217   0010BE                     u3680:
  6218   0010BE  2830               	incf	___flmul@aexp^0,w,c
  6219   0010C0  A4D8               	btfss	status,2,c
  6220   0010C2  EF65  F008         	goto	u3691
  6221   0010C6  EF67  F008         	goto	u3690
  6222   0010CA                     u3691:
  6223   0010CA  EF6F  F008         	goto	l4704
  6224   0010CE                     u3690:
  6225   0010CE  0E00               	movlw	0
  6226   0010D0  6E23               	movwf	___flmul@a^0,c
  6227   0010D2  0E00               	movlw	0
  6228   0010D4  6E24               	movwf	(___flmul@a+1)^0,c
  6229   0010D6  0E00               	movlw	0
  6230   0010D8  6E25               	movwf	(___flmul@a+2)^0,c
  6231   0010DA  0E00               	movlw	0
  6232   0010DC  6E26               	movwf	(___flmul@a+3)^0,c
  6233   0010DE                     l4704:
  6234   0010DE  8E25               	bsf	(___flmul@a+2)^0,7,c
  6235   0010E0  EF7A  F008         	goto	l1560
  6236   0010E4                     l4706:
  6237   0010E4  0E00               	movlw	0
  6238   0010E6  6E23               	movwf	___flmul@a^0,c
  6239   0010E8  0E00               	movlw	0
  6240   0010EA  6E24               	movwf	(___flmul@a+1)^0,c
  6241   0010EC  0E00               	movlw	0
  6242   0010EE  6E25               	movwf	(___flmul@a+2)^0,c
  6243   0010F0  0E00               	movlw	0
  6244   0010F2  6E26               	movwf	(___flmul@a+3)^0,c
  6245   0010F4                     l1560:
  6246   0010F4  5030               	movf	___flmul@aexp^0,w,c
  6247   0010F6  B4D8               	btfsc	status,2,c
  6248   0010F8  EF80  F008         	goto	u3701
  6249   0010FC  EF82  F008         	goto	u3700
  6250   001100                     u3701:
  6251   001100  EF8A  F008         	goto	l4710
  6252   001104                     u3700:
  6253   001104  5031               	movf	___flmul@bexp^0,w,c
  6254   001106  A4D8               	btfss	status,2,c
  6255   001108  EF88  F008         	goto	u3711
  6256   00110C  EF8A  F008         	goto	u3710
  6257   001110                     u3711:
  6258   001110  EF94  F008         	goto	l4714
  6259   001114                     u3710:
  6260   001114                     l4710:
  6261   001114  0E00               	movlw	0
  6262   001116  6E1F               	movwf	?___flmul^0,c
  6263   001118  0E00               	movlw	0
  6264   00111A  6E20               	movwf	(?___flmul+1)^0,c
  6265   00111C  0E00               	movlw	0
  6266   00111E  6E21               	movwf	(?___flmul+2)^0,c
  6267   001120  0E00               	movlw	0
  6268   001122  6E22               	movwf	(?___flmul+3)^0,c
  6269   001124  EF2C  F00A         	goto	l1564
  6270   001128                     l4714:
  6271   001128  5025               	movf	(___flmul@a+2)^0,w,c
  6272   00112A  021F               	mulwf	___flmul@b^0,c
  6273   00112C  CFF3 F036          	movff	prodl,___flmul@temp
  6274   001130  CFF4 F037          	movff	prodh,___flmul@temp+1
  6275   001134  5036               	movf	___flmul@temp^0,w,c
  6276   001136  6E2C               	movwf	___flmul@grs^0,c
  6277   001138  6A2D               	clrf	(___flmul@grs+1)^0,c
  6278   00113A  6A2E               	clrf	(___flmul@grs+2)^0,c
  6279   00113C  6A2F               	clrf	(___flmul@grs+3)^0,c
  6280   00113E  5037               	movf	(___flmul@temp+1)^0,w,c
  6281   001140  6E32               	movwf	___flmul@prod^0,c
  6282   001142  6A33               	clrf	(___flmul@prod+1)^0,c
  6283   001144  6A34               	clrf	(___flmul@prod+2)^0,c
  6284   001146  6A35               	clrf	(___flmul@prod+3)^0,c
  6285   001148  5024               	movf	(___flmul@a+1)^0,w,c
  6286   00114A  0220               	mulwf	(___flmul@b+1)^0,c
  6287   00114C  CFF3 F036          	movff	prodl,___flmul@temp
  6288   001150  CFF4 F037          	movff	prodh,___flmul@temp+1
  6289   001154  5036               	movf	___flmul@temp^0,w,c
  6290   001156  262C               	addwf	___flmul@grs^0,f,c
  6291   001158  0E00               	movlw	0
  6292   00115A  222D               	addwfc	(___flmul@grs+1)^0,f,c
  6293   00115C  222E               	addwfc	(___flmul@grs+2)^0,f,c
  6294   00115E  222F               	addwfc	(___flmul@grs+3)^0,f,c
  6295   001160  5037               	movf	(___flmul@temp+1)^0,w,c
  6296   001162  2632               	addwf	___flmul@prod^0,f,c
  6297   001164  0E00               	movlw	0
  6298   001166  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6299   001168  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6300   00116A  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6301   00116C  5023               	movf	___flmul@a^0,w,c
  6302   00116E  0221               	mulwf	(___flmul@b+2)^0,c
  6303   001170  CFF3 F036          	movff	prodl,___flmul@temp
  6304   001174  CFF4 F037          	movff	prodh,___flmul@temp+1
  6305   001178  5036               	movf	___flmul@temp^0,w,c
  6306   00117A  262C               	addwf	___flmul@grs^0,f,c
  6307   00117C  0E00               	movlw	0
  6308   00117E  222D               	addwfc	(___flmul@grs+1)^0,f,c
  6309   001180  222E               	addwfc	(___flmul@grs+2)^0,f,c
  6310   001182  222F               	addwfc	(___flmul@grs+3)^0,f,c
  6311   001184  5037               	movf	(___flmul@temp+1)^0,w,c
  6312   001186  2632               	addwf	___flmul@prod^0,f,c
  6313   001188  0E00               	movlw	0
  6314   00118A  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6315   00118C  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6316   00118E  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6317   001190  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
  6318   001194  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
  6319   001198  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
  6320   00119C  6A2C               	clrf	___flmul@grs^0,c
  6321   00119E  5023               	movf	___flmul@a^0,w,c
  6322   0011A0  0220               	mulwf	(___flmul@b+1)^0,c
  6323   0011A2  CFF3 F036          	movff	prodl,___flmul@temp
  6324   0011A6  CFF4 F037          	movff	prodh,___flmul@temp+1
  6325   0011AA  5036               	movf	___flmul@temp^0,w,c
  6326   0011AC  262C               	addwf	___flmul@grs^0,f,c
  6327   0011AE  5037               	movf	(___flmul@temp+1)^0,w,c
  6328   0011B0  222D               	addwfc	(___flmul@grs+1)^0,f,c
  6329   0011B2  0E00               	movlw	0
  6330   0011B4  222E               	addwfc	(___flmul@grs+2)^0,f,c
  6331   0011B6  0E00               	movlw	0
  6332   0011B8  222F               	addwfc	(___flmul@grs+3)^0,f,c
  6333   0011BA  5024               	movf	(___flmul@a+1)^0,w,c
  6334   0011BC  021F               	mulwf	___flmul@b^0,c
  6335   0011BE  CFF3 F036          	movff	prodl,___flmul@temp
  6336   0011C2  CFF4 F037          	movff	prodh,___flmul@temp+1
  6337   0011C6  5036               	movf	___flmul@temp^0,w,c
  6338   0011C8  262C               	addwf	___flmul@grs^0,f,c
  6339   0011CA  5037               	movf	(___flmul@temp+1)^0,w,c
  6340   0011CC  222D               	addwfc	(___flmul@grs+1)^0,f,c
  6341   0011CE  0E00               	movlw	0
  6342   0011D0  222E               	addwfc	(___flmul@grs+2)^0,f,c
  6343   0011D2  0E00               	movlw	0
  6344   0011D4  222F               	addwfc	(___flmul@grs+3)^0,f,c
  6345   0011D6  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
  6346   0011DA  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
  6347   0011DE  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
  6348   0011E2  6A2C               	clrf	___flmul@grs^0,c
  6349   0011E4  5023               	movf	___flmul@a^0,w,c
  6350   0011E6  021F               	mulwf	___flmul@b^0,c
  6351   0011E8  CFF3 F036          	movff	prodl,___flmul@temp
  6352   0011EC  CFF4 F037          	movff	prodh,___flmul@temp+1
  6353   0011F0  5036               	movf	___flmul@temp^0,w,c
  6354   0011F2  262C               	addwf	___flmul@grs^0,f,c
  6355   0011F4  5037               	movf	(___flmul@temp+1)^0,w,c
  6356   0011F6  222D               	addwfc	(___flmul@grs+1)^0,f,c
  6357   0011F8  0E00               	movlw	0
  6358   0011FA  222E               	addwfc	(___flmul@grs+2)^0,f,c
  6359   0011FC  0E00               	movlw	0
  6360   0011FE  222F               	addwfc	(___flmul@grs+3)^0,f,c
  6361   001200  5025               	movf	(___flmul@a+2)^0,w,c
  6362   001202  0220               	mulwf	(___flmul@b+1)^0,c
  6363   001204  CFF3 F036          	movff	prodl,___flmul@temp
  6364   001208  CFF4 F037          	movff	prodh,___flmul@temp+1
  6365   00120C  5036               	movf	___flmul@temp^0,w,c
  6366   00120E  2632               	addwf	___flmul@prod^0,f,c
  6367   001210  5037               	movf	(___flmul@temp+1)^0,w,c
  6368   001212  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6369   001214  0E00               	movlw	0
  6370   001216  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6371   001218  0E00               	movlw	0
  6372   00121A  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6373   00121C  5024               	movf	(___flmul@a+1)^0,w,c
  6374   00121E  0221               	mulwf	(___flmul@b+2)^0,c
  6375   001220  CFF3 F036          	movff	prodl,___flmul@temp
  6376   001224  CFF4 F037          	movff	prodh,___flmul@temp+1
  6377   001228  5036               	movf	___flmul@temp^0,w,c
  6378   00122A  2632               	addwf	___flmul@prod^0,f,c
  6379   00122C  5037               	movf	(___flmul@temp+1)^0,w,c
  6380   00122E  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6381   001230  0E00               	movlw	0
  6382   001232  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6383   001234  0E00               	movlw	0
  6384   001236  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6385   001238  5025               	movf	(___flmul@a+2)^0,w,c
  6386   00123A  0221               	mulwf	(___flmul@b+2)^0,c
  6387   00123C  CFF3 F036          	movff	prodl,___flmul@temp
  6388   001240  CFF4 F037          	movff	prodh,___flmul@temp+1
  6389   001244  5036               	movf	___flmul@temp^0,w,c
  6390   001246  6E27               	movwf	??___flmul^0,c
  6391   001248  5037               	movf	(___flmul@temp+1)^0,w,c
  6392   00124A  6E28               	movwf	(??___flmul+1)^0,c
  6393   00124C  6A29               	clrf	(??___flmul+2)^0,c
  6394   00124E  6A2A               	clrf	(??___flmul+3)^0,c
  6395   001250  C029  F02A         	movff	??___flmul+2,??___flmul+3
  6396   001254  C028  F029         	movff	??___flmul+1,??___flmul+2
  6397   001258  C027  F028         	movff	??___flmul,??___flmul+1
  6398   00125C  6A27               	clrf	??___flmul^0,c
  6399   00125E  5027               	movf	??___flmul^0,w,c
  6400   001260  2632               	addwf	___flmul@prod^0,f,c
  6401   001262  5028               	movf	(??___flmul+1)^0,w,c
  6402   001264  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6403   001266  5029               	movf	(??___flmul+2)^0,w,c
  6404   001268  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6405   00126A  502A               	movf	(??___flmul+3)^0,w,c
  6406   00126C  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6407   00126E  C02C  F027         	movff	___flmul@grs,??___flmul
  6408   001272  C02D  F028         	movff	___flmul@grs+1,??___flmul+1
  6409   001276  C02E  F029         	movff	___flmul@grs+2,??___flmul+2
  6410   00127A  C02F  F02A         	movff	___flmul@grs+3,??___flmul+3
  6411   00127E  0E19               	movlw	25
  6412   001280  EF47  F009         	goto	u3720
  6413   001284                     u3725:
  6414   001284  90D8               	bcf	status,0,c
  6415   001286  322A               	rrcf	(??___flmul+3)^0,f,c
  6416   001288  3229               	rrcf	(??___flmul+2)^0,f,c
  6417   00128A  3228               	rrcf	(??___flmul+1)^0,f,c
  6418   00128C  3227               	rrcf	??___flmul^0,f,c
  6419   00128E                     u3720:
  6420   00128E  2EE8               	decfsz	wreg,f,c
  6421   001290  EF42  F009         	goto	u3725
  6422   001294  5027               	movf	??___flmul^0,w,c
  6423   001296  2632               	addwf	___flmul@prod^0,f,c
  6424   001298  5028               	movf	(??___flmul+1)^0,w,c
  6425   00129A  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6426   00129C  5029               	movf	(??___flmul+2)^0,w,c
  6427   00129E  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6428   0012A0  502A               	movf	(??___flmul+3)^0,w,c
  6429   0012A2  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6430   0012A4  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
  6431   0012A8  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
  6432   0012AC  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
  6433   0012B0  6A2C               	clrf	___flmul@grs^0,c
  6434   0012B2  5030               	movf	___flmul@aexp^0,w,c
  6435   0012B4  C031  F027         	movff	___flmul@bexp,??___flmul
  6436   0012B8  6A28               	clrf	(??___flmul+1)^0,c
  6437   0012BA  2627               	addwf	??___flmul^0,f,c
  6438   0012BC  0E00               	movlw	0
  6439   0012BE  2228               	addwfc	(??___flmul+1)^0,f,c
  6440   0012C0  0E82               	movlw	130
  6441   0012C2  2427               	addwf	??___flmul^0,w,c
  6442   0012C4  6E36               	movwf	___flmul@temp^0,c
  6443   0012C6  0EFF               	movlw	255
  6444   0012C8  2028               	addwfc	(??___flmul+1)^0,w,c
  6445   0012CA  6E37               	movwf	(___flmul@temp+1)^0,c
  6446   0012CC  EF7D  F009         	goto	l4762
  6447   0012D0                     l4756:
  6448   0012D0  90D8               	bcf	status,0,c
  6449   0012D2  3632               	rlcf	___flmul@prod^0,f,c
  6450   0012D4  3633               	rlcf	(___flmul@prod+1)^0,f,c
  6451   0012D6  3634               	rlcf	(___flmul@prod+2)^0,f,c
  6452   0012D8  3635               	rlcf	(___flmul@prod+3)^0,f,c
  6453   0012DA  AE2F               	btfss	(___flmul@grs+3)^0,7,c
  6454   0012DC  EF72  F009         	goto	u3731
  6455   0012E0  EF74  F009         	goto	u3730
  6456   0012E4                     u3731:
  6457   0012E4  EF75  F009         	goto	l1567
  6458   0012E8                     u3730:
  6459   0012E8  8032               	bsf	___flmul@prod^0,0,c
  6460   0012EA                     l1567:
  6461   0012EA  90D8               	bcf	status,0,c
  6462   0012EC  362C               	rlcf	___flmul@grs^0,f,c
  6463   0012EE  362D               	rlcf	(___flmul@grs+1)^0,f,c
  6464   0012F0  362E               	rlcf	(___flmul@grs+2)^0,f,c
  6465   0012F2  362F               	rlcf	(___flmul@grs+3)^0,f,c
  6466   0012F4  0636               	decf	___flmul@temp^0,f,c
  6467   0012F6  A0D8               	btfss	status,0,c
  6468   0012F8  0637               	decf	(___flmul@temp+1)^0,f,c
  6469   0012FA                     l4762:
  6470   0012FA  AE34               	btfss	(___flmul@prod+2)^0,7,c
  6471   0012FC  EF82  F009         	goto	u3741
  6472   001300  EF84  F009         	goto	u3740
  6473   001304                     u3741:
  6474   001304  EF68  F009         	goto	l4756
  6475   001308                     u3740:
  6476   001308  0E00               	movlw	0
  6477   00130A  6E30               	movwf	___flmul@aexp^0,c
  6478   00130C  AE2F               	btfss	(___flmul@grs+3)^0,7,c
  6479   00130E  EF8B  F009         	goto	u3751
  6480   001312  EF8D  F009         	goto	u3750
  6481   001316                     u3751:
  6482   001316  EFB1  F009         	goto	l1569
  6483   00131A                     u3750:
  6484   00131A  0EFF               	movlw	255
  6485   00131C  142C               	andwf	___flmul@grs^0,w,c
  6486   00131E  6E27               	movwf	??___flmul^0,c
  6487   001320  0EFF               	movlw	255
  6488   001322  142D               	andwf	(___flmul@grs+1)^0,w,c
  6489   001324  6E28               	movwf	(??___flmul+1)^0,c
  6490   001326  0EFF               	movlw	255
  6491   001328  142E               	andwf	(___flmul@grs+2)^0,w,c
  6492   00132A  6E29               	movwf	(??___flmul+2)^0,c
  6493   00132C  0E7F               	movlw	127
  6494   00132E  142F               	andwf	(___flmul@grs+3)^0,w,c
  6495   001330  6E2A               	movwf	(??___flmul+3)^0,c
  6496   001332  5027               	movf	??___flmul^0,w,c
  6497   001334  1028               	iorwf	(??___flmul+1)^0,w,c
  6498   001336  1029               	iorwf	(??___flmul+2)^0,w,c
  6499   001338  102A               	iorwf	(??___flmul+3)^0,w,c
  6500   00133A  B4D8               	btfsc	status,2,c
  6501   00133C  EFA2  F009         	goto	u3761
  6502   001340  EFA4  F009         	goto	u3760
  6503   001344                     u3761:
  6504   001344  EFA8  F009         	goto	l1570
  6505   001348                     u3760:
  6506   001348                     l4770:
  6507   001348  0E01               	movlw	1
  6508   00134A  6E30               	movwf	___flmul@aexp^0,c
  6509   00134C  EFB1  F009         	goto	l1569
  6510   001350                     l1570:
  6511   001350  A032               	btfss	___flmul@prod^0,0,c
  6512   001352  EFAD  F009         	goto	u3771
  6513   001356  EFAF  F009         	goto	u3770
  6514   00135A                     u3771:
  6515   00135A  EFB1  F009         	goto	l1569
  6516   00135E                     u3770:
  6517   00135E  EFA4  F009         	goto	l4770
  6518   001362                     l1569:
  6519   001362  5030               	movf	___flmul@aexp^0,w,c
  6520   001364  B4D8               	btfsc	status,2,c
  6521   001366  EFB7  F009         	goto	u3781
  6522   00136A  EFB9  F009         	goto	u3780
  6523   00136E                     u3781:
  6524   00136E  EFDD  F009         	goto	l4782
  6525   001372                     u3780:
  6526   001372  0E01               	movlw	1
  6527   001374  2632               	addwf	___flmul@prod^0,f,c
  6528   001376  0E00               	movlw	0
  6529   001378  2233               	addwfc	(___flmul@prod+1)^0,f,c
  6530   00137A  2234               	addwfc	(___flmul@prod+2)^0,f,c
  6531   00137C  2235               	addwfc	(___flmul@prod+3)^0,f,c
  6532   00137E  A035               	btfss	(___flmul@prod+3)^0,0,c
  6533   001380  EFC4  F009         	goto	u3791
  6534   001384  EFC6  F009         	goto	u3790
  6535   001388                     u3791:
  6536   001388  EFDD  F009         	goto	l4782
  6537   00138C                     u3790:
  6538   00138C  C032  F027         	movff	___flmul@prod,??___flmul
  6539   001390  C033  F028         	movff	___flmul@prod+1,??___flmul+1
  6540   001394  C034  F029         	movff	___flmul@prod+2,??___flmul+2
  6541   001398  C035  F02A         	movff	___flmul@prod+3,??___flmul+3
  6542   00139C  342A               	rlcf	(??___flmul+3)^0,w,c
  6543   00139E  322A               	rrcf	(??___flmul+3)^0,f,c
  6544   0013A0  3229               	rrcf	(??___flmul+2)^0,f,c
  6545   0013A2  3228               	rrcf	(??___flmul+1)^0,f,c
  6546   0013A4  3227               	rrcf	??___flmul^0,f,c
  6547   0013A6  C027  F032         	movff	??___flmul,___flmul@prod
  6548   0013AA  C028  F033         	movff	??___flmul+1,___flmul@prod+1
  6549   0013AE  C029  F034         	movff	??___flmul+2,___flmul@prod+2
  6550   0013B2  C02A  F035         	movff	??___flmul+3,___flmul@prod+3
  6551   0013B6  4A36               	infsnz	___flmul@temp^0,f,c
  6552   0013B8  2A37               	incf	(___flmul@temp+1)^0,f,c
  6553   0013BA                     l4782:
  6554   0013BA  BE37               	btfsc	(___flmul@temp+1)^0,7,c
  6555   0013BC  EFE8  F009         	goto	u3801
  6556   0013C0  5037               	movf	(___flmul@temp+1)^0,w,c
  6557   0013C2  E108               	bnz	u3800
  6558   0013C4  2836               	incf	___flmul@temp^0,w,c
  6559   0013C6  A0D8               	btfss	status,0,c
  6560   0013C8  EFE8  F009         	goto	u3801
  6561   0013CC  EFEA  F009         	goto	u3800
  6562   0013D0                     u3801:
  6563   0013D0  EFF4  F009         	goto	l4786
  6564   0013D4                     u3800:
  6565   0013D4  0E00               	movlw	0
  6566   0013D6  6E32               	movwf	___flmul@prod^0,c
  6567   0013D8  0E00               	movlw	0
  6568   0013DA  6E33               	movwf	(___flmul@prod+1)^0,c
  6569   0013DC  0E80               	movlw	128
  6570   0013DE  6E34               	movwf	(___flmul@prod+2)^0,c
  6571   0013E0  0E7F               	movlw	127
  6572   0013E2  6E35               	movwf	(___flmul@prod+3)^0,c
  6573   0013E4  EF22  F00A         	goto	l4798
  6574   0013E8                     l4786:
  6575   0013E8  BE37               	btfsc	(___flmul@temp+1)^0,7,c
  6576   0013EA  EF01  F00A         	goto	u3810
  6577   0013EE  5037               	movf	(___flmul@temp+1)^0,w,c
  6578   0013F0  E106               	bnz	u3811
  6579   0013F2  0436               	decf	___flmul@temp^0,w,c
  6580   0013F4  B0D8               	btfsc	status,0,c
  6581   0013F6  EFFF  F009         	goto	u3811
  6582   0013FA  EF01  F00A         	goto	u3810
  6583   0013FE                     u3811:
  6584   0013FE  EF0D  F00A         	goto	l1577
  6585   001402                     u3810:
  6586   001402  0E00               	movlw	0
  6587   001404  6E32               	movwf	___flmul@prod^0,c
  6588   001406  0E00               	movlw	0
  6589   001408  6E33               	movwf	(___flmul@prod+1)^0,c
  6590   00140A  0E00               	movlw	0
  6591   00140C  6E34               	movwf	(___flmul@prod+2)^0,c
  6592   00140E  0E00               	movlw	0
  6593   001410  6E35               	movwf	(___flmul@prod+3)^0,c
  6594   001412  0E00               	movlw	0
  6595   001414  6E2B               	movwf	___flmul@sign^0,c
  6596   001416  EF22  F00A         	goto	l4798
  6597   00141A                     l1577:
  6598   00141A  C036  F031         	movff	___flmul@temp,___flmul@bexp
  6599   00141E  0EFF               	movlw	255
  6600   001420  1632               	andwf	___flmul@prod^0,f,c
  6601   001422  0EFF               	movlw	255
  6602   001424  1633               	andwf	(___flmul@prod+1)^0,f,c
  6603   001426  0E7F               	movlw	127
  6604   001428  1634               	andwf	(___flmul@prod+2)^0,f,c
  6605   00142A  0E00               	movlw	0
  6606   00142C  1635               	andwf	(___flmul@prod+3)^0,f,c
  6607   00142E  A031               	btfss	___flmul@bexp^0,0,c
  6608   001430  EF1C  F00A         	goto	u3821
  6609   001434  EF1E  F00A         	goto	u3820
  6610   001438                     u3821:
  6611   001438  EF1F  F00A         	goto	l4796
  6612   00143C                     u3820:
  6613   00143C  8E34               	bsf	(___flmul@prod+2)^0,7,c
  6614   00143E                     l4796:
  6615   00143E  90D8               	bcf	status,0,c
  6616   001440  3031               	rrcf	___flmul@bexp^0,w,c
  6617   001442  6E35               	movwf	(___flmul@prod+3)^0,c
  6618   001444                     l4798:
  6619   001444  502B               	movf	___flmul@sign^0,w,c
  6620   001446  1235               	iorwf	(___flmul@prod+3)^0,f,c
  6621   001448  C032  F01F         	movff	___flmul@prod,?___flmul
  6622   00144C  C033  F020         	movff	___flmul@prod+1,?___flmul+1
  6623   001450  C034  F021         	movff	___flmul@prod+2,?___flmul+2
  6624   001454  C035  F022         	movff	___flmul@prod+3,?___flmul+3
  6625   001458                     l1564:
  6626   001458  0012               	return		;funcret
  6627   00145A                     __end_of___flmul:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function _InterruptManager *****************
  6631 ;; Defined at:
  6632 ;;		line 37 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;Total ram usage:        8 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 3
  6653 ;; This function calls:
  6654 ;;		_ADC_ISR
  6655 ;;		_INT0_ISR
  6656 ;;		_INT1_ISR
  6657 ;;		_INT2_ISR
  6658 ;;		_RB4_ISR
  6659 ;;		_RB5_ISR
  6660 ;;		_RB6_ISR
  6661 ;;		_RB7_ISR
  6662 ;; This function is called by:
  6663 ;;		Interrupt level 2
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	intcode
  6668   000008                     __pintcode:
  6669                           	callstack 0
  6670   000008                     _InterruptManager:
  6671                           	callstack 18
  6672                           
  6673                           ;incstack = 0
  6674   000008  8269               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6675   00000A  ED2D  F00A         	call	int_func,f	;refresh shadow registers
  6676                           
  6677                           	psect	intcode_body
  6678   00145A                     __pintcode_body:
  6679                           	callstack 18
  6680   00145A                     int_func:
  6681                           	callstack 18
  6682   00145A  0006               	pop		; remove dummy address from shadow register refresh
  6683   00145C  CFFA F009          	movff	pclath,??_InterruptManager
  6684   001460  CFFB F00A          	movff	pclatu,??_InterruptManager+1
  6685   001464  CFE1 F00B          	movff	fsr1l,??_InterruptManager+2
  6686   001468  CFE2 F00C          	movff	fsr1h,??_InterruptManager+3
  6687   00146C  CFD9 F00D          	movff	fsr2l,??_InterruptManager+4
  6688   001470  CFDA F00E          	movff	fsr2h,??_InterruptManager+5
  6689   001474  CFF3 F00F          	movff	prodl,??_InterruptManager+6
  6690   001478  CFF4 F010          	movff	prodh,??_InterruptManager+7
  6691   00147C                     
  6692                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:     if(1 == INTCONbits.INT0IE && 1 =
      +                          = INTCONbits.INT0IF)
  6693   00147C  A8F2               	btfss	242,4,c	;volatile
  6694   00147E  EF43  F00A         	goto	i2u463_41
  6695   001482  EF45  F00A         	goto	i2u463_40
  6696   001486                     i2u463_41:
  6697   001486  EF4E  F00A         	goto	i2l848
  6698   00148A                     i2u463_40:
  6699   00148A  A2F2               	btfss	242,1,c	;volatile
  6700   00148C  EF4A  F00A         	goto	i2u464_41
  6701   001490  EF4C  F00A         	goto	i2u464_40
  6702   001494                     i2u464_41:
  6703   001494  EF4E  F00A         	goto	i2l848
  6704   001498                     i2u464_40:
  6705   001498                     
  6706                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 41:         INT0_ISR();
  6707   001498  ECD9  F019         	call	_INT0_ISR	;wreg free
  6708   00149C                     i2l848:
  6709                           
  6710                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:     if(1 == INTCON3bits.INT1IE && 1 
      +                          == INTCON3bits.INT1IF)
  6711   00149C  A6F0               	btfss	240,3,c	;volatile
  6712   00149E  EF53  F00A         	goto	i2u465_41
  6713   0014A2  EF55  F00A         	goto	i2u465_40
  6714   0014A6                     i2u465_41:
  6715   0014A6  EF5E  F00A         	goto	i2l850
  6716   0014AA                     i2u465_40:
  6717   0014AA  A0F0               	btfss	240,0,c	;volatile
  6718   0014AC  EF5A  F00A         	goto	i2u466_41
  6719   0014B0  EF5C  F00A         	goto	i2u466_40
  6720   0014B4                     i2u466_41:
  6721   0014B4  EF5E  F00A         	goto	i2l850
  6722   0014B8                     i2u466_40:
  6723   0014B8                     
  6724                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 47:         INT1_ISR();
  6725   0014B8  ECD7  F019         	call	_INT1_ISR	;wreg free
  6726   0014BC                     i2l850:
  6727                           
  6728                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:     if(1 == INTCON3bits.INT2IE && 1 
      +                          == INTCON3bits.INT2IF)
  6729   0014BC  A8F0               	btfss	240,4,c	;volatile
  6730   0014BE  EF63  F00A         	goto	i2u467_41
  6731   0014C2  EF65  F00A         	goto	i2u467_40
  6732   0014C6                     i2u467_41:
  6733   0014C6  EF6E  F00A         	goto	i2l852
  6734   0014CA                     i2u467_40:
  6735   0014CA  A2F0               	btfss	240,1,c	;volatile
  6736   0014CC  EF6A  F00A         	goto	i2u468_41
  6737   0014D0  EF6C  F00A         	goto	i2u468_40
  6738   0014D4                     i2u468_41:
  6739   0014D4  EF6E  F00A         	goto	i2l852
  6740   0014D8                     i2u468_40:
  6741   0014D8                     
  6742                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 53:         INT2_ISR();
  6743   0014D8  ECD5  F019         	call	_INT2_ISR	;wreg free
  6744   0014DC                     i2l852:
  6745                           
  6746                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:     if(1 == INTCONbits.RBIE && 1 == 
      +                          INTCONbits.RBIF
  6747   0014DC  A6F2               	btfss	242,3,c	;volatile
  6748   0014DE  EF73  F00A         	goto	i2u469_41
  6749   0014E2  EF75  F00A         	goto	i2u469_40
  6750   0014E6                     i2u469_41:
  6751   0014E6  EF92  F00A         	goto	i2l853
  6752   0014EA                     i2u469_40:
  6753   0014EA  A0F2               	btfss	242,0,c	;volatile
  6754   0014EC  EF7A  F00A         	goto	i2u470_41
  6755   0014F0  EF7C  F00A         	goto	i2u470_40
  6756   0014F4                     i2u470_41:
  6757   0014F4  EF92  F00A         	goto	i2l853
  6758   0014F8                     i2u470_40:
  6759   0014F8  B881               	btfsc	129,4,c	;volatile
  6760   0014FA  EF81  F00A         	goto	i2u471_41
  6761   0014FE  EF83  F00A         	goto	i2u471_40
  6762   001502                     i2u471_41:
  6763   001502  EF92  F00A         	goto	i2l853
  6764   001506                     i2u471_40:
  6765   001506  0468               	decf	_RB4_flag^0,w,c	;volatile
  6766   001508  A4D8               	btfss	status,2,c
  6767   00150A  EF89  F00A         	goto	i2u472_41
  6768   00150E  EF8B  F00A         	goto	i2u472_40
  6769   001512                     i2u472_41:
  6770   001512  EF92  F00A         	goto	i2l853
  6771   001516                     i2u472_40:
  6772   001516                     
  6773                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 60:         RB4_flag = 0;
  6774   001516  0E00               	movlw	0
  6775   001518  6E68               	movwf	_RB4_flag^0,c	;volatile
  6776   00151A                     
  6777                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         RB4_ISR(0);
  6778   00151A  0E00               	movlw	0
  6779   00151C  EC8F  F019         	call	_RB4_ISR
  6780                           
  6781                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:     }
  6782   001520  EFB4  F00A         	goto	i2l854
  6783   001524                     i2l853:
  6784   001524  A6F2               	btfss	242,3,c	;volatile
  6785   001526  EF97  F00A         	goto	i2u473_41
  6786   00152A  EF99  F00A         	goto	i2u473_40
  6787   00152E                     i2u473_41:
  6788   00152E  EFB4  F00A         	goto	i2l854
  6789   001532                     i2u473_40:
  6790   001532  A0F2               	btfss	242,0,c	;volatile
  6791   001534  EF9E  F00A         	goto	i2u474_41
  6792   001538  EFA0  F00A         	goto	i2u474_40
  6793   00153C                     i2u474_41:
  6794   00153C  EFB4  F00A         	goto	i2l854
  6795   001540                     i2u474_40:
  6796   001540  A881               	btfss	129,4,c	;volatile
  6797   001542  EFA5  F00A         	goto	i2u475_41
  6798   001546  EFA7  F00A         	goto	i2u475_40
  6799   00154A                     i2u475_41:
  6800   00154A  EFB4  F00A         	goto	i2l854
  6801   00154E                     i2u475_40:
  6802   00154E  5068               	movf	_RB4_flag^0,w,c	;volatile
  6803   001550  A4D8               	btfss	status,2,c
  6804   001552  EFAD  F00A         	goto	i2u476_41
  6805   001556  EFAF  F00A         	goto	i2u476_40
  6806   00155A                     i2u476_41:
  6807   00155A  EFB4  F00A         	goto	i2l854
  6808   00155E                     i2u476_40:
  6809   00155E                     
  6810                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 66:         RB4_flag = 1;
  6811   00155E  0E01               	movlw	1
  6812   001560  6E68               	movwf	_RB4_flag^0,c	;volatile
  6813   001562                     
  6814                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         RB4_ISR(1);
  6815   001562  0E01               	movlw	1
  6816   001564  EC8F  F019         	call	_RB4_ISR
  6817   001568                     i2l854:
  6818                           
  6819                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:     if(1 == INTCONbits.RBIE && 1 == 
      +                          INTCONbits.RBIF
  6820   001568  A6F2               	btfss	242,3,c	;volatile
  6821   00156A  EFB9  F00A         	goto	i2u477_41
  6822   00156E  EFBB  F00A         	goto	i2u477_40
  6823   001572                     i2u477_41:
  6824   001572  EFD8  F00A         	goto	i2l857
  6825   001576                     i2u477_40:
  6826   001576  A0F2               	btfss	242,0,c	;volatile
  6827   001578  EFC0  F00A         	goto	i2u478_41
  6828   00157C  EFC2  F00A         	goto	i2u478_40
  6829   001580                     i2u478_41:
  6830   001580  EFD8  F00A         	goto	i2l857
  6831   001584                     i2u478_40:
  6832   001584  BA81               	btfsc	129,5,c	;volatile
  6833   001586  EFC7  F00A         	goto	i2u479_41
  6834   00158A  EFC9  F00A         	goto	i2u479_40
  6835   00158E                     i2u479_41:
  6836   00158E  EFD8  F00A         	goto	i2l857
  6837   001592                     i2u479_40:
  6838   001592  0467               	decf	_RB5_flag^0,w,c	;volatile
  6839   001594  A4D8               	btfss	status,2,c
  6840   001596  EFCF  F00A         	goto	i2u480_41
  6841   00159A  EFD1  F00A         	goto	i2u480_40
  6842   00159E                     i2u480_41:
  6843   00159E  EFD8  F00A         	goto	i2l857
  6844   0015A2                     i2u480_40:
  6845   0015A2                     
  6846                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 74:         RB5_flag = 0;
  6847   0015A2  0E00               	movlw	0
  6848   0015A4  6E67               	movwf	_RB5_flag^0,c	;volatile
  6849   0015A6                     
  6850                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB5_ISR(0);
  6851   0015A6  0E00               	movlw	0
  6852   0015A8  EC7B  F019         	call	_RB5_ISR
  6853                           
  6854                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:     }
  6855   0015AC  EFFA  F00A         	goto	i2l858
  6856   0015B0                     i2l857:
  6857   0015B0  A6F2               	btfss	242,3,c	;volatile
  6858   0015B2  EFDD  F00A         	goto	i2u481_41
  6859   0015B6  EFDF  F00A         	goto	i2u481_40
  6860   0015BA                     i2u481_41:
  6861   0015BA  EFFA  F00A         	goto	i2l858
  6862   0015BE                     i2u481_40:
  6863   0015BE  A0F2               	btfss	242,0,c	;volatile
  6864   0015C0  EFE4  F00A         	goto	i2u482_41
  6865   0015C4  EFE6  F00A         	goto	i2u482_40
  6866   0015C8                     i2u482_41:
  6867   0015C8  EFFA  F00A         	goto	i2l858
  6868   0015CC                     i2u482_40:
  6869   0015CC  AA81               	btfss	129,5,c	;volatile
  6870   0015CE  EFEB  F00A         	goto	i2u483_41
  6871   0015D2  EFED  F00A         	goto	i2u483_40
  6872   0015D6                     i2u483_41:
  6873   0015D6  EFFA  F00A         	goto	i2l858
  6874   0015DA                     i2u483_40:
  6875   0015DA  5067               	movf	_RB5_flag^0,w,c	;volatile
  6876   0015DC  A4D8               	btfss	status,2,c
  6877   0015DE  EFF3  F00A         	goto	i2u484_41
  6878   0015E2  EFF5  F00A         	goto	i2u484_40
  6879   0015E6                     i2u484_41:
  6880   0015E6  EFFA  F00A         	goto	i2l858
  6881   0015EA                     i2u484_40:
  6882   0015EA                     
  6883                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 80:         RB5_flag = 1;
  6884   0015EA  0E01               	movlw	1
  6885   0015EC  6E67               	movwf	_RB5_flag^0,c	;volatile
  6886   0015EE                     
  6887                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR(1);
  6888   0015EE  0E01               	movlw	1
  6889   0015F0  EC7B  F019         	call	_RB5_ISR
  6890   0015F4                     i2l858:
  6891                           
  6892                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if(1 == INTCONbits.RBIE && 1 == 
      +                          INTCONbits.RBIF
  6893   0015F4  A6F2               	btfss	242,3,c	;volatile
  6894   0015F6  EFFF  F00A         	goto	i2u485_41
  6895   0015FA  EF01  F00B         	goto	i2u485_40
  6896   0015FE                     i2u485_41:
  6897   0015FE  EF1E  F00B         	goto	i2l861
  6898   001602                     i2u485_40:
  6899   001602  A0F2               	btfss	242,0,c	;volatile
  6900   001604  EF06  F00B         	goto	i2u486_41
  6901   001608  EF08  F00B         	goto	i2u486_40
  6902   00160C                     i2u486_41:
  6903   00160C  EF1E  F00B         	goto	i2l861
  6904   001610                     i2u486_40:
  6905   001610  BC81               	btfsc	129,6,c	;volatile
  6906   001612  EF0D  F00B         	goto	i2u487_41
  6907   001616  EF0F  F00B         	goto	i2u487_40
  6908   00161A                     i2u487_41:
  6909   00161A  EF1E  F00B         	goto	i2l861
  6910   00161E                     i2u487_40:
  6911   00161E  0466               	decf	_RB6_flag^0,w,c	;volatile
  6912   001620  A4D8               	btfss	status,2,c
  6913   001622  EF15  F00B         	goto	i2u488_41
  6914   001626  EF17  F00B         	goto	i2u488_40
  6915   00162A                     i2u488_41:
  6916   00162A  EF1E  F00B         	goto	i2l861
  6917   00162E                     i2u488_40:
  6918   00162E                     
  6919                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 88:         RB6_flag = 0;
  6920   00162E  0E00               	movlw	0
  6921   001630  6E66               	movwf	_RB6_flag^0,c	;volatile
  6922   001632                     
  6923                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:         RB6_ISR(0);
  6924   001632  0E00               	movlw	0
  6925   001634  EC67  F019         	call	_RB6_ISR
  6926                           
  6927                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:     }
  6928   001638  EF40  F00B         	goto	i2l862
  6929   00163C                     i2l861:
  6930   00163C  A6F2               	btfss	242,3,c	;volatile
  6931   00163E  EF23  F00B         	goto	i2u489_41
  6932   001642  EF25  F00B         	goto	i2u489_40
  6933   001646                     i2u489_41:
  6934   001646  EF40  F00B         	goto	i2l862
  6935   00164A                     i2u489_40:
  6936   00164A  A0F2               	btfss	242,0,c	;volatile
  6937   00164C  EF2A  F00B         	goto	i2u490_41
  6938   001650  EF2C  F00B         	goto	i2u490_40
  6939   001654                     i2u490_41:
  6940   001654  EF40  F00B         	goto	i2l862
  6941   001658                     i2u490_40:
  6942   001658  AC81               	btfss	129,6,c	;volatile
  6943   00165A  EF31  F00B         	goto	i2u491_41
  6944   00165E  EF33  F00B         	goto	i2u491_40
  6945   001662                     i2u491_41:
  6946   001662  EF40  F00B         	goto	i2l862
  6947   001666                     i2u491_40:
  6948   001666  5066               	movf	_RB6_flag^0,w,c	;volatile
  6949   001668  A4D8               	btfss	status,2,c
  6950   00166A  EF39  F00B         	goto	i2u492_41
  6951   00166E  EF3B  F00B         	goto	i2u492_40
  6952   001672                     i2u492_41:
  6953   001672  EF40  F00B         	goto	i2l862
  6954   001676                     i2u492_40:
  6955   001676                     
  6956                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 94:         RB6_flag = 1;
  6957   001676  0E01               	movlw	1
  6958   001678  6E66               	movwf	_RB6_flag^0,c	;volatile
  6959   00167A                     
  6960                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         RB6_ISR(1);
  6961   00167A  0E01               	movlw	1
  6962   00167C  EC67  F019         	call	_RB6_ISR
  6963   001680                     i2l862:
  6964                           
  6965                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if(1 == INTCONbits.RBIE && 1 == 
      +                          INTCONbits.RBIF
  6966   001680  A6F2               	btfss	242,3,c	;volatile
  6967   001682  EF45  F00B         	goto	i2u493_41
  6968   001686  EF47  F00B         	goto	i2u493_40
  6969   00168A                     i2u493_41:
  6970   00168A  EF64  F00B         	goto	i2l865
  6971   00168E                     i2u493_40:
  6972   00168E  A0F2               	btfss	242,0,c	;volatile
  6973   001690  EF4C  F00B         	goto	i2u494_41
  6974   001694  EF4E  F00B         	goto	i2u494_40
  6975   001698                     i2u494_41:
  6976   001698  EF64  F00B         	goto	i2l865
  6977   00169C                     i2u494_40:
  6978   00169C  BE81               	btfsc	129,7,c	;volatile
  6979   00169E  EF53  F00B         	goto	i2u495_41
  6980   0016A2  EF55  F00B         	goto	i2u495_40
  6981   0016A6                     i2u495_41:
  6982   0016A6  EF64  F00B         	goto	i2l865
  6983   0016AA                     i2u495_40:
  6984   0016AA  0465               	decf	_RB7_flag^0,w,c	;volatile
  6985   0016AC  A4D8               	btfss	status,2,c
  6986   0016AE  EF5B  F00B         	goto	i2u496_41
  6987   0016B2  EF5D  F00B         	goto	i2u496_40
  6988   0016B6                     i2u496_41:
  6989   0016B6  EF64  F00B         	goto	i2l865
  6990   0016BA                     i2u496_40:
  6991   0016BA                     
  6992                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 101:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 102:         RB7_flag = 0;
  6993   0016BA  0E00               	movlw	0
  6994   0016BC  6E65               	movwf	_RB7_flag^0,c	;volatile
  6995   0016BE                     
  6996                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:         RB7_ISR(0);
  6997   0016BE  0E00               	movlw	0
  6998   0016C0  EC53  F019         	call	_RB7_ISR
  6999                           
  7000                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     }
  7001   0016C4  EF86  F00B         	goto	i2l866
  7002   0016C8                     i2l865:
  7003   0016C8  A6F2               	btfss	242,3,c	;volatile
  7004   0016CA  EF69  F00B         	goto	i2u497_41
  7005   0016CE  EF6B  F00B         	goto	i2u497_40
  7006   0016D2                     i2u497_41:
  7007   0016D2  EF86  F00B         	goto	i2l866
  7008   0016D6                     i2u497_40:
  7009   0016D6  A0F2               	btfss	242,0,c	;volatile
  7010   0016D8  EF70  F00B         	goto	i2u498_41
  7011   0016DC  EF72  F00B         	goto	i2u498_40
  7012   0016E0                     i2u498_41:
  7013   0016E0  EF86  F00B         	goto	i2l866
  7014   0016E4                     i2u498_40:
  7015   0016E4  AE81               	btfss	129,7,c	;volatile
  7016   0016E6  EF77  F00B         	goto	i2u499_41
  7017   0016EA  EF79  F00B         	goto	i2u499_40
  7018   0016EE                     i2u499_41:
  7019   0016EE  EF86  F00B         	goto	i2l866
  7020   0016F2                     i2u499_40:
  7021   0016F2  5065               	movf	_RB7_flag^0,w,c	;volatile
  7022   0016F4  A4D8               	btfss	status,2,c
  7023   0016F6  EF7F  F00B         	goto	i2u500_41
  7024   0016FA  EF81  F00B         	goto	i2u500_40
  7025   0016FE                     i2u500_41:
  7026   0016FE  EF86  F00B         	goto	i2l866
  7027   001702                     i2u500_40:
  7028   001702                     
  7029                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 108:         RB7_flag = 1;
  7030   001702  0E01               	movlw	1
  7031   001704  6E65               	movwf	_RB7_flag^0,c	;volatile
  7032   001706                     
  7033                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         RB7_ISR(1);
  7034   001706  0E01               	movlw	1
  7035   001708  EC53  F019         	call	_RB7_ISR
  7036   00170C                     i2l866:
  7037                           
  7038                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:     if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF))
  7039   00170C  AC9D               	btfss	157,6,c	;volatile
  7040   00170E  EF8B  F00B         	goto	i2u501_41
  7041   001712  EF8D  F00B         	goto	i2u501_40
  7042   001716                     i2u501_41:
  7043   001716  EF96  F00B         	goto	i2l871
  7044   00171A                     i2u501_40:
  7045   00171A  AC9E               	btfss	158,6,c	;volatile
  7046   00171C  EF92  F00B         	goto	i2u502_41
  7047   001720  EF94  F00B         	goto	i2u502_40
  7048   001724                     i2u502_41:
  7049   001724  EF96  F00B         	goto	i2l871
  7050   001728                     i2u502_40:
  7051   001728                     
  7052                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 115:         ADC_ISR();
  7053   001728  EC3C  F019         	call	_ADC_ISR	;wreg free
  7054   00172C                     i2l871:
  7055   00172C  C010  FFF4         	movff	??_InterruptManager+7,prodh
  7056   001730  C00F  FFF3         	movff	??_InterruptManager+6,prodl
  7057   001734  C00E  FFDA         	movff	??_InterruptManager+5,fsr2h
  7058   001738  C00D  FFD9         	movff	??_InterruptManager+4,fsr2l
  7059   00173C  C00C  FFE2         	movff	??_InterruptManager+3,fsr1h
  7060   001740  C00B  FFE1         	movff	??_InterruptManager+2,fsr1l
  7061   001744  C00A  FFFB         	movff	??_InterruptManager+1,pclatu
  7062   001748  C009  FFFA         	movff	??_InterruptManager,pclath
  7063   00174C  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7064   00174E  0011               	retfie		f
  7065   001750                     __end_of_InterruptManager:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _RB7_ISR *****************
  7069 ;; Defined at:
  7070 ;;		line 259 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  RB7_Source      1    wreg     unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  RB7_Source      1    7[COMRAM] unsigned char 
  7075 ;;  value           1    6[COMRAM] unsigned char 
  7076 ;;  ret             1    0        unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;Total ram usage:        2 bytes
  7091 ;; Hardware stack levels used: 1
  7092 ;; Hardware stack levels required when called: 1
  7093 ;; This function calls:
  7094 ;;		_gpio_port_read_logic
  7095 ;; This function is called by:
  7096 ;;		_InterruptManager
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text42
  7101   0032A6                     __ptext42:
  7102                           	callstack 0
  7103   0032A6                     _RB7_ISR:
  7104                           	callstack 19
  7105                           
  7106                           ;incstack = 0
  7107                           ;RB7_ISR@RB7_Source stored from wreg
  7108   0032A6  6E08               	movwf	RB7_ISR@RB7_Source^0,c
  7109   0032A8  0E07               	movlw	low RB7_ISR@value
  7110   0032AA  6E01               	movwf	gpio_port_read_logic@direction^0,c
  7111   0032AC  0E00               	movlw	high RB7_ISR@value
  7112   0032AE  6E02               	movwf	(gpio_port_read_logic@direction+1)^0,c
  7113   0032B0  0E01               	movlw	1
  7114   0032B2  EC07  F017         	call	_gpio_port_read_logic
  7115   0032B6                     
  7116                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 271:     (INTCONbits.RBIF = 0);
  7117   0032B6  90F2               	bcf	242,0,c	;volatile
  7118   0032B8                     
  7119                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 274:     if(0 == RB7_Source)
  7120   0032B8  5008               	movf	RB7_ISR@RB7_Source^0,w,c
  7121   0032BA  A4D8               	btfss	status,2,c
  7122   0032BC  EF62  F019         	goto	i2u363_41
  7123   0032C0  EF64  F019         	goto	i2u363_40
  7124   0032C4                     i2u363_41:
  7125   0032C4  EF66  F019         	goto	i2l4664
  7126   0032C8                     i2u363_40:
  7127   0032C8  EF66  F019         	goto	i2l713
  7128   0032CC                     i2l4664:
  7129   0032CC                     i2l713:
  7130   0032CC  0012               	return		;funcret
  7131   0032CE                     __end_of_RB7_ISR:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _RB6_ISR *****************
  7135 ;; Defined at:
  7136 ;;		line 225 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  RB6_Source      1    wreg     unsigned char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  RB6_Source      1    7[COMRAM] unsigned char 
  7141 ;;  value           1    6[COMRAM] unsigned char 
  7142 ;;  ret             1    0        unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;Total ram usage:        2 bytes
  7157 ;; Hardware stack levels used: 1
  7158 ;; Hardware stack levels required when called: 1
  7159 ;; This function calls:
  7160 ;;		_gpio_port_read_logic
  7161 ;; This function is called by:
  7162 ;;		_InterruptManager
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text43
  7167   0032CE                     __ptext43:
  7168                           	callstack 0
  7169   0032CE                     _RB6_ISR:
  7170                           	callstack 19
  7171                           
  7172                           ;incstack = 0
  7173                           ;RB6_ISR@RB6_Source stored from wreg
  7174   0032CE  6E08               	movwf	RB6_ISR@RB6_Source^0,c
  7175   0032D0  0E07               	movlw	low RB6_ISR@value
  7176   0032D2  6E01               	movwf	gpio_port_read_logic@direction^0,c
  7177   0032D4  0E00               	movlw	high RB6_ISR@value
  7178   0032D6  6E02               	movwf	(gpio_port_read_logic@direction+1)^0,c
  7179   0032D8  0E01               	movlw	1
  7180   0032DA  EC07  F017         	call	_gpio_port_read_logic
  7181   0032DE                     
  7182                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 237:     (INTCONbits.RBIF = 0);
  7183   0032DE  90F2               	bcf	242,0,c	;volatile
  7184   0032E0                     
  7185                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 240:     if(0 == RB6_Source)
  7186   0032E0  5008               	movf	RB6_ISR@RB6_Source^0,w,c
  7187   0032E2  A4D8               	btfss	status,2,c
  7188   0032E4  EF76  F019         	goto	i2u362_41
  7189   0032E8  EF78  F019         	goto	i2u362_40
  7190   0032EC                     i2u362_41:
  7191   0032EC  EF7A  F019         	goto	i2l4648
  7192   0032F0                     i2u362_40:
  7193   0032F0  EF7A  F019         	goto	i2l702
  7194   0032F4                     i2l4648:
  7195   0032F4                     i2l702:
  7196   0032F4  0012               	return		;funcret
  7197   0032F6                     __end_of_RB6_ISR:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function _RB5_ISR *****************
  7201 ;; Defined at:
  7202 ;;		line 191 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  RB5_Source      1    wreg     unsigned char 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  RB5_Source      1    7[COMRAM] unsigned char 
  7207 ;;  value           1    6[COMRAM] unsigned char 
  7208 ;;  ret             1    0        unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;Total ram usage:        2 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 1
  7225 ;; This function calls:
  7226 ;;		_gpio_port_read_logic
  7227 ;; This function is called by:
  7228 ;;		_InterruptManager
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text44
  7233   0032F6                     __ptext44:
  7234                           	callstack 0
  7235   0032F6                     _RB5_ISR:
  7236                           	callstack 19
  7237                           
  7238                           ;incstack = 0
  7239                           ;RB5_ISR@RB5_Source stored from wreg
  7240   0032F6  6E08               	movwf	RB5_ISR@RB5_Source^0,c
  7241   0032F8  0E07               	movlw	low RB5_ISR@value
  7242   0032FA  6E01               	movwf	gpio_port_read_logic@direction^0,c
  7243   0032FC  0E00               	movlw	high RB5_ISR@value
  7244   0032FE  6E02               	movwf	(gpio_port_read_logic@direction+1)^0,c
  7245   003300  0E01               	movlw	1
  7246   003302  EC07  F017         	call	_gpio_port_read_logic
  7247   003306                     
  7248                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 203:     (INTCONbits.RBIF = 0);
  7249   003306  90F2               	bcf	242,0,c	;volatile
  7250   003308                     
  7251                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 206:     if(0 == RB5_Source)
  7252   003308  5008               	movf	RB5_ISR@RB5_Source^0,w,c
  7253   00330A  A4D8               	btfss	status,2,c
  7254   00330C  EF8A  F019         	goto	i2u361_41
  7255   003310  EF8C  F019         	goto	i2u361_40
  7256   003314                     i2u361_41:
  7257   003314  EF8E  F019         	goto	i2l4632
  7258   003318                     i2u361_40:
  7259   003318  EF8E  F019         	goto	i2l691
  7260   00331C                     i2l4632:
  7261   00331C                     i2l691:
  7262   00331C  0012               	return		;funcret
  7263   00331E                     __end_of_RB5_ISR:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function _RB4_ISR *****************
  7267 ;; Defined at:
  7268 ;;		line 157 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  RB4_Source      1    wreg     unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  RB4_Source      1    7[COMRAM] unsigned char 
  7273 ;;  value           1    6[COMRAM] unsigned char 
  7274 ;;  ret             1    0        unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;Total ram usage:        2 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		_gpio_port_read_logic
  7293 ;; This function is called by:
  7294 ;;		_InterruptManager
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text45
  7299   00331E                     __ptext45:
  7300                           	callstack 0
  7301   00331E                     _RB4_ISR:
  7302                           	callstack 19
  7303                           
  7304                           ;incstack = 0
  7305                           ;RB4_ISR@RB4_Source stored from wreg
  7306   00331E  6E08               	movwf	RB4_ISR@RB4_Source^0,c
  7307   003320  0E07               	movlw	low RB4_ISR@value
  7308   003322  6E01               	movwf	gpio_port_read_logic@direction^0,c
  7309   003324  0E00               	movlw	high RB4_ISR@value
  7310   003326  6E02               	movwf	(gpio_port_read_logic@direction+1)^0,c
  7311   003328  0E01               	movlw	1
  7312   00332A  EC07  F017         	call	_gpio_port_read_logic
  7313   00332E                     
  7314                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     (INTCONbits.RBIF = 0);
  7315   00332E  90F2               	bcf	242,0,c	;volatile
  7316   003330                     
  7317                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 172:     if(0 == RB4_Source)
  7318   003330  5008               	movf	RB4_ISR@RB4_Source^0,w,c
  7319   003332  A4D8               	btfss	status,2,c
  7320   003334  EF9E  F019         	goto	i2u360_41
  7321   003338  EFA0  F019         	goto	i2u360_40
  7322   00333C                     i2u360_41:
  7323   00333C  EFA2  F019         	goto	i2l4616
  7324   003340                     i2u360_40:
  7325   003340  EFA2  F019         	goto	i2l680
  7326   003344                     i2l4616:
  7327   003344                     i2l680:
  7328   003344  0012               	return		;funcret
  7329   003346                     __end_of_RB4_ISR:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function _gpio_port_read_logic *****************
  7333 ;; Defined at:
  7334 ;;		line 256 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  port            1    wreg     enum E2819
  7337 ;;  direction       2    0[COMRAM] PTR unsigned char 
  7338 ;;		 -> Interrupt_RBx_Clear_Flag@value(1), RB7_ISR@value(1), RB6_ISR@value(1), RB5_ISR@value(1), 
  7339 ;;		 -> RB4_ISR@value(1), 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  port            1    5[COMRAM] enum E2819
  7342 ;;  ret             1    4[COMRAM] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:        6 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_RB4_ISR
  7362 ;;		_RB5_ISR
  7363 ;;		_RB6_ISR
  7364 ;;		_RB7_ISR
  7365 ;;		_Interrupt_RBx_Clear_Flag
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text46
  7370   002E0E                     __ptext46:
  7371                           	callstack 0
  7372   002E0E                     _gpio_port_read_logic:
  7373                           	callstack 19
  7374                           
  7375                           ;incstack = 0
  7376                           ;gpio_port_read_logic@port stored from wreg
  7377   002E0E  6E06               	movwf	gpio_port_read_logic@port^0,c
  7378   002E10                     
  7379                           ;MCAL_Layer/GPIO/mcal_gpio.c: 256: Std_ReturnType gpio_port_read_logic(port_index_t port
      +                          , Std_ReturnType* direction);MCAL_Layer/GPIO/mcal_gpio.c: 257: {;MCAL_Layer/GPIO/mcal_gp
      +                          io.c: 258:     Std_ReturnType ret = (Std_ReturnType)0x01;
  7380   002E10  0E01               	movlw	1
  7381   002E12  6E05               	movwf	gpio_port_read_logic@ret^0,c
  7382   002E14                     
  7383                           ;MCAL_Layer/GPIO/mcal_gpio.c: 260:     if(((void*)0) == direction || port > 4)
  7384   002E14  5001               	movf	gpio_port_read_logic@direction^0,w,c
  7385   002E16  1002               	iorwf	(gpio_port_read_logic@direction+1)^0,w,c
  7386   002E18  B4D8               	btfsc	status,2,c
  7387   002E1A  EF11  F017         	goto	i2u337_41
  7388   002E1E  EF13  F017         	goto	i2u337_40
  7389   002E22                     i2u337_41:
  7390   002E22  EF1B  F017         	goto	i2l4404
  7391   002E26                     i2u337_40:
  7392   002E26  0E04               	movlw	4
  7393   002E28  6406               	cpfsgt	gpio_port_read_logic@port^0,c
  7394   002E2A  EF19  F017         	goto	i2u338_41
  7395   002E2E  EF1B  F017         	goto	i2u338_40
  7396   002E32                     i2u338_41:
  7397   002E32  EF1F  F017         	goto	i2l4406
  7398   002E36                     i2u338_40:
  7399   002E36                     i2l4404:
  7400                           
  7401                           ;MCAL_Layer/GPIO/mcal_gpio.c: 261:     {;MCAL_Layer/GPIO/mcal_gpio.c: 262:         ret =
      +                           (Std_ReturnType)0x00;
  7402   002E36  0E00               	movlw	0
  7403   002E38  6E05               	movwf	gpio_port_read_logic@ret^0,c
  7404                           
  7405                           ;MCAL_Layer/GPIO/mcal_gpio.c: 263:     }
  7406   002E3A  EF35  F017         	goto	i2l4408
  7407   002E3E                     i2l4406:
  7408                           
  7409                           ;MCAL_Layer/GPIO/mcal_gpio.c: 266:     {;MCAL_Layer/GPIO/mcal_gpio.c: 267:         *dire
      +                          ction = *port_registers[port];
  7410   002E3E  5006               	movf	gpio_port_read_logic@port^0,w,c
  7411   002E40  0D02               	mullw	2
  7412   002E42  0EBD               	movlw	low _port_registers
  7413   002E44  24F3               	addwf	243,w,c
  7414   002E46  6ED9               	movwf	fsr2l,c
  7415   002E48  0E00               	movlw	high _port_registers
  7416   002E4A  20F4               	addwfc	prodh,w,c
  7417   002E4C  6EDA               	movwf	fsr2h,c
  7418   002E4E  CFDE F003          	movff	postinc2,??_gpio_port_read_logic
  7419   002E52  CFDD F004          	movff	postdec2,??_gpio_port_read_logic+1
  7420   002E56  C003  FFD9         	movff	??_gpio_port_read_logic,fsr2l
  7421   002E5A  C004  FFDA         	movff	??_gpio_port_read_logic+1,fsr2h
  7422   002E5E  C001  FFE1         	movff	gpio_port_read_logic@direction,fsr1l
  7423   002E62  C002  FFE2         	movff	gpio_port_read_logic@direction+1,fsr1h
  7424   002E66  CFDF FFE7          	movff	indf2,indf1
  7425   002E6A                     i2l4408:
  7426                           
  7427                           ;MCAL_Layer/GPIO/mcal_gpio.c: 270:      return ret;
  7428   002E6A  5005               	movf	gpio_port_read_logic@ret^0,w,c
  7429   002E6C  0012               	return		;funcret
  7430   002E6E                     __end_of_gpio_port_read_logic:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _INT2_ISR *****************
  7434 ;; Defined at:
  7435 ;;		line 96 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		None
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_InterruptManager
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text47
  7463   0033AA                     __ptext47:
  7464                           	callstack 0
  7465   0033AA                     _INT2_ISR:
  7466                           	callstack 20
  7467   0033AA                     
  7468                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 99:     (INTCON3bits.INT2IF = 0);
  7469   0033AA  92F0               	bcf	240,1,c	;volatile
  7470   0033AC  0012               	return		;funcret
  7471   0033AE                     __end_of_INT2_ISR:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _INT1_ISR *****************
  7475 ;; Defined at:
  7476 ;;		line 83 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		None
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_InterruptManager
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text48
  7504   0033AE                     __ptext48:
  7505                           	callstack 0
  7506   0033AE                     _INT1_ISR:
  7507                           	callstack 20
  7508   0033AE                     
  7509                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 86:     (INTCON3bits.INT1IF = 0);
  7510   0033AE  90F0               	bcf	240,0,c	;volatile
  7511   0033B0  0012               	return		;funcret
  7512   0033B2                     __end_of_INT1_ISR:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _INT0_ISR *****************
  7516 ;; Defined at:
  7517 ;;		line 70 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		None
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;Total ram usage:        0 bytes
  7536 ;; Hardware stack levels used: 1
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_InterruptManager
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text49
  7545   0033B2                     __ptext49:
  7546                           	callstack 0
  7547   0033B2                     _INT0_ISR:
  7548                           	callstack 20
  7549   0033B2                     
  7550                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 73:     (INTCONbits.INT0IF = 0);
  7551   0033B2  92F2               	bcf	242,1,c	;volatile
  7552   0033B4  0012               	return		;funcret
  7553   0033B6                     __end_of_INT0_ISR:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _ADC_ISR *****************
  7557 ;; Defined at:
  7558 ;;		line 279 in file "MCAL_Layer/ADC/mcal_adc.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 2
  7579 ;; This function calls:
  7580 ;;		NULL
  7581 ;;		_ADC_App_ISR
  7582 ;; This function is called by:
  7583 ;;		_InterruptManager
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text50
  7588   003278                     __ptext50:
  7589                           	callstack 0
  7590   003278                     _ADC_ISR:
  7591                           	callstack 18
  7592   003278                     
  7593                           ;MCAL_Layer/ADC/mcal_adc.c: 282:         (PIR1bits.ADIF = 0);
  7594   003278  9C9E               	bcf	158,6,c	;volatile
  7595   00327A                     
  7596                           ;MCAL_Layer/ADC/mcal_adc.c: 283:         if(ADC_InterruptHandler)
  7597   00327A  505D               	movf	_ADC_InterruptHandler^0,w,c
  7598   00327C  105E               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  7599   00327E  B4D8               	btfsc	status,2,c
  7600   003280  EF44  F019         	goto	i2u358_41
  7601   003284  EF46  F019         	goto	i2u358_40
  7602   003288                     i2u358_41:
  7603   003288  EF52  F019         	goto	i2l441
  7604   00328C                     i2u358_40:
  7605   00328C                     
  7606                           ;MCAL_Layer/ADC/mcal_adc.c: 284:         {;MCAL_Layer/ADC/mcal_adc.c: 285:             A
      +                          DC_InterruptHandler();
  7607   00328C  D802               	call	i2u359_48
  7608   00328E  EF52  F019         	goto	i2u359_49
  7609   003292                     i2u359_48:
  7610   003292  0005               	push	
  7611   003294  6EFA               	movwf	pclath,c
  7612   003296  505D               	movf	_ADC_InterruptHandler^0,w,c
  7613   003298  6EFD               	movwf	tosl,c
  7614   00329A  505E               	movf	(_ADC_InterruptHandler+1)^0,w,c
  7615   00329C  6EFE               	movwf	tosh,c
  7616   00329E  6AFF               	clrf	tosu,c
  7617   0032A0  50FA               	movf	pclath,w,c
  7618   0032A2  0012               	return		;indir
  7619   0032A4                     i2u359_49:
  7620   0032A4                     i2l441:
  7621   0032A4  0012               	return		;funcret
  7622   0032A6                     __end_of_ADC_ISR:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _ADC_App_ISR *****************
  7626 ;; Defined at:
  7627 ;;		line 89 in file "application.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 1
  7648 ;; This function calls:
  7649 ;;		_mcal_adc_GetConversionResult
  7650 ;; This function is called by:
  7651 ;;		_ADC_ISR
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text51
  7656   002E6E                     __ptext51:
  7657                           	callstack 0
  7658   002E6E                     _ADC_App_ISR:
  7659                           	callstack 18
  7660   002E6E                     
  7661                           ;application.c: 91:     if(0 == ADC_Req)
  7662   002E6E  5060               	movf	_ADC_Req^0,w,c
  7663   002E70  A4D8               	btfss	status,2,c
  7664   002E72  EF3D  F017         	goto	i2u339_41
  7665   002E76  EF3F  F017         	goto	i2u339_40
  7666   002E7A                     i2u339_41:
  7667   002E7A  EF4F  F017         	goto	i2l4418
  7668   002E7E                     i2u339_40:
  7669   002E7E                     
  7670                           ;application.c: 92:     {;application.c: 93:         ret = mcal_adc_GetConversionResult(
      +                          &adc_obj, &lm35_res_1);
  7671   002E7E  0EDB               	movlw	low _adc_obj
  7672   002E80  6E01               	movwf	mcal_adc_GetConversionResult@_adc_config^0,c
  7673   002E82  0E00               	movlw	high _adc_obj
  7674   002E84  6E02               	movwf	(mcal_adc_GetConversionResult@_adc_config+1)^0,c
  7675   002E86  0E63               	movlw	low _lm35_res_1
  7676   002E88  6E03               	movwf	mcal_adc_GetConversionResult@conversion_result^0,c
  7677   002E8A  0E00               	movlw	high _lm35_res_1
  7678   002E8C  6E04               	movwf	(mcal_adc_GetConversionResult@conversion_result+1)^0,c
  7679   002E8E  EC5E  F013         	call	_mcal_adc_GetConversionResult	;wreg free
  7680   002E92  0100               	movlb	0	; () banked
  7681   002E94  6FFA               	movwf	_ret& (0+255),b
  7682   002E96                     
  7683                           ; BSR set to: 0
  7684                           ;application.c: 94:         ADC_Req = 1;
  7685   002E96  0E01               	movlw	1
  7686   002E98  6E60               	movwf	_ADC_Req^0,c
  7687                           
  7688                           ;application.c: 95:     }
  7689   002E9A  EF65  F017         	goto	i2l943
  7690   002E9E                     i2l4418:
  7691   002E9E  0460               	decf	_ADC_Req^0,w,c
  7692   002EA0  A4D8               	btfss	status,2,c
  7693   002EA2  EF55  F017         	goto	i2u340_41
  7694   002EA6  EF57  F017         	goto	i2u340_40
  7695   002EAA                     i2u340_41:
  7696   002EAA  EF65  F017         	goto	i2l943
  7697   002EAE                     i2u340_40:
  7698   002EAE                     
  7699                           ;application.c: 97:     {;application.c: 98:         ret = mcal_adc_GetConversionResult(
      +                          &adc_obj, &lm35_res_2);
  7700   002EAE  0EDB               	movlw	low _adc_obj
  7701   002EB0  6E01               	movwf	mcal_adc_GetConversionResult@_adc_config^0,c
  7702   002EB2  0E00               	movlw	high _adc_obj
  7703   002EB4  6E02               	movwf	(mcal_adc_GetConversionResult@_adc_config+1)^0,c
  7704   002EB6  0E61               	movlw	low _lm35_res_2
  7705   002EB8  6E03               	movwf	mcal_adc_GetConversionResult@conversion_result^0,c
  7706   002EBA  0E00               	movlw	high _lm35_res_2
  7707   002EBC  6E04               	movwf	(mcal_adc_GetConversionResult@conversion_result+1)^0,c
  7708   002EBE  EC5E  F013         	call	_mcal_adc_GetConversionResult	;wreg free
  7709   002EC2  0100               	movlb	0	; () banked
  7710   002EC4  6FFA               	movwf	_ret& (0+255),b
  7711   002EC6                     
  7712                           ; BSR set to: 0
  7713                           ;application.c: 99:         ADC_Req = 0;
  7714   002EC6  0E00               	movlw	0
  7715   002EC8  6E60               	movwf	_ADC_Req^0,c
  7716   002ECA                     i2l943:
  7717   002ECA  0012               	return		;funcret
  7718   002ECC                     __end_of_ADC_App_ISR:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function _mcal_adc_GetConversionResult *****************
  7722 ;; Defined at:
  7723 ;;		line 151 in file "MCAL_Layer/ADC/mcal_adc.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  _adc_config     2    0[COMRAM] PTR const struct .
  7726 ;;		 -> adc_obj(7), 
  7727 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
  7728 ;;		 -> lm35_res_2(2), lm35_res_1(2), 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  ret             1    7[COMRAM] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      unsigned char 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;Total ram usage:        8 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_ADC_App_ISR
  7750 ;;		_mcal_adc_GetConversion_Blocking
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text52
  7755   0026BC                     __ptext52:
  7756                           	callstack 0
  7757   0026BC                     _mcal_adc_GetConversionResult:
  7758                           	callstack 18
  7759   0026BC                     
  7760                           ;MCAL_Layer/ADC/mcal_adc.c: 151: Std_ReturnType mcal_adc_GetConversionResult(const adc_c
      +                          onfig_t* _adc_config, adc_result_t* conversion_result);MCAL_Layer/ADC/mcal_adc.c: 152: {
      +                          ;MCAL_Layer/ADC/mcal_adc.c: 153:     Std_ReturnType ret = (Std_ReturnType)0x01;
  7761   0026BC  0E01               	movlw	1
  7762   0026BE  6E08               	movwf	mcal_adc_GetConversionResult@ret^0,c
  7763   0026C0                     
  7764                           ;MCAL_Layer/ADC/mcal_adc.c: 155:     if(((void*)0) == _adc_config || ((void*)0) == conve
      +                          rsion_result)
  7765   0026C0  5001               	movf	mcal_adc_GetConversionResult@_adc_config^0,w,c
  7766   0026C2  1002               	iorwf	(mcal_adc_GetConversionResult@_adc_config+1)^0,w,c
  7767   0026C4  B4D8               	btfsc	status,2,c
  7768   0026C6  EF67  F013         	goto	i2u315_41
  7769   0026CA  EF69  F013         	goto	i2u315_40
  7770   0026CE                     i2u315_41:
  7771   0026CE  EF72  F013         	goto	i2l4188
  7772   0026D2                     i2u315_40:
  7773   0026D2  5003               	movf	mcal_adc_GetConversionResult@conversion_result^0,w,c
  7774   0026D4  1004               	iorwf	(mcal_adc_GetConversionResult@conversion_result+1)^0,w,c
  7775   0026D6  A4D8               	btfss	status,2,c
  7776   0026D8  EF70  F013         	goto	i2u316_41
  7777   0026DC  EF72  F013         	goto	i2u316_40
  7778   0026E0                     i2u316_41:
  7779   0026E0  EF76  F013         	goto	i2l4190
  7780   0026E4                     i2u316_40:
  7781   0026E4                     i2l4188:
  7782                           
  7783                           ;MCAL_Layer/ADC/mcal_adc.c: 156:     {;MCAL_Layer/ADC/mcal_adc.c: 157:         ret = (St
      +                          d_ReturnType)0x00;
  7784   0026E4  0E00               	movlw	0
  7785   0026E6  6E08               	movwf	mcal_adc_GetConversionResult@ret^0,c
  7786                           
  7787                           ;MCAL_Layer/ADC/mcal_adc.c: 158:     }
  7788   0026E8  EFBE  F013         	goto	i2l4200
  7789   0026EC                     i2l4190:
  7790                           
  7791                           ;MCAL_Layer/ADC/mcal_adc.c: 161:     {;MCAL_Layer/ADC/mcal_adc.c: 162:         if(0x01U 
      +                          == _adc_config->result_format)
  7792   0026EC  EE20 F006          	lfsr	2,6
  7793   0026F0  5001               	movf	mcal_adc_GetConversionResult@_adc_config^0,w,c
  7794   0026F2  26D9               	addwf	fsr2l,f,c
  7795   0026F4  5002               	movf	(mcal_adc_GetConversionResult@_adc_config+1)^0,w,c
  7796   0026F6  22DA               	addwfc	fsr2h,f,c
  7797   0026F8  A2DF               	btfss	indf2,1,c
  7798   0026FA  EF81  F013         	goto	i2u317_41
  7799   0026FE  EF83  F013         	goto	i2u317_40
  7800   002702                     i2u317_41:
  7801   002702  EF97  F013         	goto	i2l4194
  7802   002706                     i2u317_40:
  7803   002706                     i2l4192:
  7804                           
  7805                           ;MCAL_Layer/ADC/mcal_adc.c: 163:         {;MCAL_Layer/ADC/mcal_adc.c: 164:             *
      +                          conversion_result = (adc_result_t)((ADRESH << 8) + ADRESL);
  7806   002706  50C3               	movf	195,w,c	;volatile
  7807   002708  CFC4 F005          	movff	4036,??_mcal_adc_GetConversionResult	;volatile
  7808   00270C  6A06               	clrf	(??_mcal_adc_GetConversionResult+1)^0,c
  7809   00270E  C005  F006         	movff	??_mcal_adc_GetConversionResult,??_mcal_adc_GetConversionResult+1
  7810   002712  6A05               	clrf	??_mcal_adc_GetConversionResult^0,c
  7811   002714  2605               	addwf	??_mcal_adc_GetConversionResult^0,f,c
  7812   002716  0E00               	movlw	0
  7813   002718  2206               	addwfc	(??_mcal_adc_GetConversionResult+1)^0,f,c
  7814   00271A  C003  FFD9         	movff	mcal_adc_GetConversionResult@conversion_result,fsr2l
  7815   00271E  C004  FFDA         	movff	mcal_adc_GetConversionResult@conversion_result+1,fsr2h
  7816   002722  C005  FFDE         	movff	??_mcal_adc_GetConversionResult,postinc2
  7817   002726  C006  FFDD         	movff	??_mcal_adc_GetConversionResult+1,postdec2
  7818                           
  7819                           ;MCAL_Layer/ADC/mcal_adc.c: 165:         }
  7820   00272A  EFBE  F013         	goto	i2l4200
  7821   00272E                     i2l4194:
  7822   00272E  EE20 F006          	lfsr	2,6
  7823   002732  5001               	movf	mcal_adc_GetConversionResult@_adc_config^0,w,c
  7824   002734  26D9               	addwf	fsr2l,f,c
  7825   002736  5002               	movf	(mcal_adc_GetConversionResult@_adc_config+1)^0,w,c
  7826   002738  22DA               	addwfc	fsr2h,f,c
  7827   00273A  B2DF               	btfsc	indf2,1,c
  7828   00273C  EFA2  F013         	goto	i2u318_41
  7829   002740  EFA4  F013         	goto	i2u318_40
  7830   002744                     i2u318_41:
  7831   002744  EF83  F013         	goto	i2l4192
  7832   002748                     i2u318_40:
  7833   002748                     
  7834                           ;MCAL_Layer/ADC/mcal_adc.c: 167:         {;MCAL_Layer/ADC/mcal_adc.c: 168:             *
      +                          conversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL) >> 6);
  7835   002748  50C3               	movf	195,w,c	;volatile
  7836   00274A  CFC4 F005          	movff	4036,??_mcal_adc_GetConversionResult	;volatile
  7837   00274E  6A06               	clrf	(??_mcal_adc_GetConversionResult+1)^0,c
  7838   002750  C005  F006         	movff	??_mcal_adc_GetConversionResult,??_mcal_adc_GetConversionResult+1
  7839   002754  6A05               	clrf	??_mcal_adc_GetConversionResult^0,c
  7840   002756  2605               	addwf	??_mcal_adc_GetConversionResult^0,f,c
  7841   002758  0E00               	movlw	0
  7842   00275A  2206               	addwfc	(??_mcal_adc_GetConversionResult+1)^0,f,c
  7843   00275C  0E06               	movlw	6
  7844   00275E  6E07               	movwf	(??_mcal_adc_GetConversionResult+2)^0,c
  7845   002760                     i2u319_45:
  7846   002760  3406               	rlcf	(??_mcal_adc_GetConversionResult+1)^0,w,c
  7847   002762  3206               	rrcf	(??_mcal_adc_GetConversionResult+1)^0,f,c
  7848   002764  3205               	rrcf	??_mcal_adc_GetConversionResult^0,f,c
  7849   002766  2E07               	decfsz	(??_mcal_adc_GetConversionResult+2)^0,f,c
  7850   002768  EFB0  F013         	goto	i2u319_45
  7851   00276C  C003  FFD9         	movff	mcal_adc_GetConversionResult@conversion_result,fsr2l
  7852   002770  C004  FFDA         	movff	mcal_adc_GetConversionResult@conversion_result+1,fsr2h
  7853   002774  C005  FFDE         	movff	??_mcal_adc_GetConversionResult,postinc2
  7854   002778  C006  FFDD         	movff	??_mcal_adc_GetConversionResult+1,postdec2
  7855   00277C                     i2l4200:
  7856                           
  7857                           ;MCAL_Layer/ADC/mcal_adc.c: 176:     return ret;
  7858   00277C  5008               	movf	mcal_adc_GetConversionResult@ret^0,w,c
  7859   00277E  0012               	return		;funcret
  7860   002780                     __end_of_mcal_adc_GetConversionResult:
  7861                           	callstack 0
  7862                           
  7863                           	psect	text53
  7864   000000                     __ptext53:
  7865                           	callstack 0
  7866   000000                     
  7867                           	psect	rparam
  7868   000000                     
  7869                           	psect	temp
  7870   000069                     btemp:
  7871                           	callstack 0
  7872   000069                     	ds	1
  7873   000000                     int$flags	set	btemp
  7874   000000                     wtemp8	set	btemp+1
  7875   000000                     ttemp5	set	btemp+1
  7876   000000                     ttemp6	set	btemp+4
  7877   000000                     ttemp7	set	btemp+8
  7878                           
  7879                           	psect	idloc
  7880                           
  7881                           ;Config register IDLOC0 @ 0x200000
  7882                           ;	unspecified, using default values
  7883   200000                     	org	2097152
  7884   200000  FF                 	db	255
  7885                           
  7886                           ;Config register IDLOC1 @ 0x200001
  7887                           ;	unspecified, using default values
  7888   200001                     	org	2097153
  7889   200001  FF                 	db	255
  7890                           
  7891                           ;Config register IDLOC2 @ 0x200002
  7892                           ;	unspecified, using default values
  7893   200002                     	org	2097154
  7894   200002  FF                 	db	255
  7895                           
  7896                           ;Config register IDLOC3 @ 0x200003
  7897                           ;	unspecified, using default values
  7898   200003                     	org	2097155
  7899   200003  FF                 	db	255
  7900                           
  7901                           ;Config register IDLOC4 @ 0x200004
  7902                           ;	unspecified, using default values
  7903   200004                     	org	2097156
  7904   200004  FF                 	db	255
  7905                           
  7906                           ;Config register IDLOC5 @ 0x200005
  7907                           ;	unspecified, using default values
  7908   200005                     	org	2097157
  7909   200005  FF                 	db	255
  7910                           
  7911                           ;Config register IDLOC6 @ 0x200006
  7912                           ;	unspecified, using default values
  7913   200006                     	org	2097158
  7914   200006  FF                 	db	255
  7915                           
  7916                           ;Config register IDLOC7 @ 0x200007
  7917                           ;	unspecified, using default values
  7918   200007                     	org	2097159
  7919   200007  FF                 	db	255
  7920                           
  7921                           	psect	config
  7922                           
  7923                           ; Padding undefined space
  7924   300000                     	org	3145728
  7925   300000  FF                 	db	255
  7926                           
  7927                           ;Config register CONFIG1H @ 0x300001
  7928                           ;	unspecified, using default values
  7929                           ;	Oscillator Selection bits
  7930                           ;	OSC = 0x7, unprogrammed default
  7931                           ;	Fail-Safe Clock Monitor Enable bit
  7932                           ;	FCMEN = 0x0, unprogrammed default
  7933                           ;	Internal/External Oscillator Switchover bit
  7934                           ;	IESO = 0x0, unprogrammed default
  7935   300001                     	org	3145729
  7936   300001  07                 	db	7
  7937                           
  7938                           ;Config register CONFIG2L @ 0x300002
  7939                           ;	unspecified, using default values
  7940                           ;	Power-up Timer Enable bit
  7941                           ;	PWRT = 0x1, unprogrammed default
  7942                           ;	Brown-out Reset Enable bits
  7943                           ;	BOREN = 0x3, unprogrammed default
  7944                           ;	Brown Out Reset Voltage bits
  7945                           ;	BORV = 0x3, unprogrammed default
  7946   300002                     	org	3145730
  7947   300002  1F                 	db	31
  7948                           
  7949                           ;Config register CONFIG2H @ 0x300003
  7950                           ;	unspecified, using default values
  7951                           ;	Watchdog Timer Enable bit
  7952                           ;	WDT = 0x1, unprogrammed default
  7953                           ;	Watchdog Timer Postscale Select bits
  7954                           ;	WDTPS = 0xF, unprogrammed default
  7955   300003                     	org	3145731
  7956   300003  1F                 	db	31
  7957                           
  7958                           ; Padding undefined space
  7959   300004                     	org	3145732
  7960   300004  FF                 	db	255
  7961                           
  7962                           ;Config register CONFIG3H @ 0x300005
  7963                           ;	unspecified, using default values
  7964                           ;	CCP2 MUX bit
  7965                           ;	CCP2MX = 0x1, unprogrammed default
  7966                           ;	PORTB A/D Enable bit
  7967                           ;	PBADEN = 0x1, unprogrammed default
  7968                           ;	Low-Power Timer1 Oscillator Enable bit
  7969                           ;	LPT1OSC = 0x0, unprogrammed default
  7970                           ;	MCLR Pin Enable bit
  7971                           ;	MCLRE = 0x1, unprogrammed default
  7972   300005                     	org	3145733
  7973   300005  83                 	db	131
  7974                           
  7975                           ;Config register CONFIG4L @ 0x300006
  7976                           ;	unspecified, using default values
  7977                           ;	Stack Full/Underflow Reset Enable bit
  7978                           ;	STVREN = 0x1, unprogrammed default
  7979                           ;	Single-Supply ICSP Enable bit
  7980                           ;	LVP = 0x1, unprogrammed default
  7981                           ;	Extended Instruction Set Enable bit
  7982                           ;	XINST = 0x0, unprogrammed default
  7983                           ;	Background Debugger Enable bit
  7984                           ;	DEBUG = 0x1, unprogrammed default
  7985   300006                     	org	3145734
  7986   300006  85                 	db	133
  7987                           
  7988                           ; Padding undefined space
  7989   300007                     	org	3145735
  7990   300007  FF                 	db	255
  7991                           
  7992                           ;Config register CONFIG5L @ 0x300008
  7993                           ;	unspecified, using default values
  7994                           ;	Code Protection bit
  7995                           ;	CP0 = 0x1, unprogrammed default
  7996                           ;	Code Protection bit
  7997                           ;	CP1 = 0x1, unprogrammed default
  7998                           ;	Code Protection bit
  7999                           ;	CP2 = 0x1, unprogrammed default
  8000                           ;	Code Protection bit
  8001                           ;	CP3 = 0x1, unprogrammed default
  8002   300008                     	org	3145736
  8003   300008  0F                 	db	15
  8004                           
  8005                           ;Config register CONFIG5H @ 0x300009
  8006                           ;	unspecified, using default values
  8007                           ;	Boot Block Code Protection bit
  8008                           ;	CPB = 0x1, unprogrammed default
  8009                           ;	Data EEPROM Code Protection bit
  8010                           ;	CPD = 0x1, unprogrammed default
  8011   300009                     	org	3145737
  8012   300009  C0                 	db	192
  8013                           
  8014                           ;Config register CONFIG6L @ 0x30000A
  8015                           ;	unspecified, using default values
  8016                           ;	Write Protection bit
  8017                           ;	WRT0 = 0x1, unprogrammed default
  8018                           ;	Write Protection bit
  8019                           ;	WRT1 = 0x1, unprogrammed default
  8020                           ;	Write Protection bit
  8021                           ;	WRT2 = 0x1, unprogrammed default
  8022                           ;	Write Protection bit
  8023                           ;	WRT3 = 0x1, unprogrammed default
  8024   30000A                     	org	3145738
  8025   30000A  0F                 	db	15
  8026                           
  8027                           ;Config register CONFIG6H @ 0x30000B
  8028                           ;	unspecified, using default values
  8029                           ;	Configuration Register Write Protection bit
  8030                           ;	WRTC = 0x1, unprogrammed default
  8031                           ;	Boot Block Write Protection bit
  8032                           ;	WRTB = 0x1, unprogrammed default
  8033                           ;	Data EEPROM Write Protection bit
  8034                           ;	WRTD = 0x1, unprogrammed default
  8035   30000B                     	org	3145739
  8036   30000B  E0                 	db	224
  8037                           
  8038                           ;Config register CONFIG7L @ 0x30000C
  8039                           ;	unspecified, using default values
  8040                           ;	Table Read Protection bit
  8041                           ;	EBTR0 = 0x1, unprogrammed default
  8042                           ;	Table Read Protection bit
  8043                           ;	EBTR1 = 0x1, unprogrammed default
  8044                           ;	Table Read Protection bit
  8045                           ;	EBTR2 = 0x1, unprogrammed default
  8046                           ;	Table Read Protection bit
  8047                           ;	EBTR3 = 0x1, unprogrammed default
  8048   30000C                     	org	3145740
  8049   30000C  0F                 	db	15
  8050                           
  8051                           ;Config register CONFIG7H @ 0x30000D
  8052                           ;	unspecified, using default values
  8053                           ;	Boot Block Table Read Protection bit
  8054                           ;	EBTRB = 0x1, unprogrammed default
  8055   30000D                     	org	3145741
  8056   30000D  40                 	db	64
  8057                           tosu	equ	0xFFF
  8058                           tosh	equ	0xFFE
  8059                           tosl	equ	0xFFD
  8060                           stkptr	equ	0xFFC
  8061                           pclatu	equ	0xFFB
  8062                           pclath	equ	0xFFA
  8063                           pcl	equ	0xFF9
  8064                           tblptru	equ	0xFF8
  8065                           tblptrh	equ	0xFF7
  8066                           tblptrl	equ	0xFF6
  8067                           tablat	equ	0xFF5
  8068                           prodh	equ	0xFF4
  8069                           prodl	equ	0xFF3
  8070                           indf0	equ	0xFEF
  8071                           postinc0	equ	0xFEE
  8072                           postdec0	equ	0xFED
  8073                           preinc0	equ	0xFEC
  8074                           plusw0	equ	0xFEB
  8075                           fsr0h	equ	0xFEA
  8076                           fsr0l	equ	0xFE9
  8077                           wreg	equ	0xFE8
  8078                           indf1	equ	0xFE7
  8079                           postinc1	equ	0xFE6
  8080                           postdec1	equ	0xFE5
  8081                           preinc1	equ	0xFE4
  8082                           plusw1	equ	0xFE3
  8083                           fsr1h	equ	0xFE2
  8084                           fsr1l	equ	0xFE1
  8085                           bsr	equ	0xFE0
  8086                           indf2	equ	0xFDF
  8087                           postinc2	equ	0xFDE
  8088                           postdec2	equ	0xFDD
  8089                           preinc2	equ	0xFDC
  8090                           plusw2	equ	0xFDB
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    16
    Data        51
    BSS         105
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     88     104
    BANK0           128     14     123
    BANK1           256      8      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2420$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@temp_str(COMRAM[11]), convert_uint16_to_string@temp_str(BANK1[6]), convert_uint8_to_string@temp_str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2367$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2367$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    adc_obj.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    Interrupt_RBx_SetInterruptHandler@_RBx_intr_config.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@_RBx_intr_config.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    S1334$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@_RBx_intr_config.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    S1334$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@_RBx_intr_config.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1226$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@_INTx_config.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_port_read_logic@direction	PTR unsigned char  size(2) Largest target is 1
		 -> Interrupt_RBx_Clear_Flag@value(COMRAM[1]), RB7_ISR@value(COMRAM[1]), RB6_ISR@value(COMRAM[1]), RB5_ISR@value(COMRAM[1]), 
		 -> RB4_ISR@value(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pins(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pins(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data_pins(BANK0[4]), lcd_1(BANK0[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pins(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pins(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data_pins(BANK0[4]), lcd_1(BANK0[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> dc_motor_2.dc_motor_pins(BANK0[2]), dc_motor_2(BANK0[2]), dc_motor_1.dc_motor_pins(BANK0[2]), dc_motor_1(BANK0[2]), 
		 -> lcd_1.lcd_data_pins(BANK0[4]), lcd_1(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    adc_voltage_reference_configure@_adc_config.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    adc_select_result_format@_adc_config.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    adc_select_result_format@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    mcal_adc_StartConversion_Interrupt@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    mcal_adc_GetConversionResult@_adc_config.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    mcal_adc_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> lm35_res_2(COMRAM[2]), lm35_res_1(COMRAM[2]), 

    mcal_adc_GetConversionResult@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    mcal_adc_StartConversion@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    mcal_adc_SelectChannel@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), NULL(), 

    S622$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    mcal_adc_Init@_adc_config.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_App_ISR(), 

    mcal_adc_Init@_adc_config	PTR const struct . size(2) Largest target is 7
		 -> adc_obj(BANK0[7]), 

    lcd_4bits_set_cursor@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_enable_signal@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bits@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    convert_uint16_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), 

    ecu_lcd_4bits_send_string_pos@str	PTR unsigned char  size(2) Largest target is 10
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[10]), 

    ecu_lcd_4bits_send_string_pos@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    ecu_lcd_4bits_send_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> lm35_res_2_txt(BANK0[7]), lm35_res_1_txt(BANK0[7]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[10]), 

    ecu_lcd_4bits_send_string@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    ecu_lcd_4bits_send_char_data@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    ecu_lcd_4bits_send_command@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    ecu_lcd_4bits_initialize@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    ecu_dc_motor_stop@_dc_motor_config	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 

    ecu_dc_motor_move_left@_dc_motor_config	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), 

    ecu_dc_motor_move_right@_dc_motor_config	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_1(BANK0[2]), 

    ecu_dc_motor_initialize@_dc_motor_config	PTR const struct . size(2) Largest target is 2
		 -> dc_motor_2(BANK0[2]), dc_motor_1(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _mcal_adc_StartConversion_Interrupt->_mcal_adc_SelectChannel
    _mcal_adc_SelectChannel->_adc_input_channel_port_configure
    _ecu_lcd_4bits_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_ecu_lcd_4bits_send_command
    _ecu_lcd_4bits_send_string->_ecu_lcd_4bits_send_char_data
    _ecu_lcd_4bits_send_char_data->_lcd_send_4bits
    _ecu_dc_motor_stop->_gpio_pin_initialize
    _ecu_dc_motor_move_right->_gpio_pin_write_logic
    _ecu_dc_motor_move_left->_gpio_pin_write_logic
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _mcal_adc_Init->_adc_input_channel_port_configure
    _ecu_layer_initialize->_ecu_lcd_4bits_initialize
    _ecu_lcd_4bits_initialize->_ecu_lcd_4bits_send_command
    _ecu_lcd_4bits_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _ecu_dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR
    _RB7_ISR->_gpio_port_read_logic
    _RB6_ISR->_gpio_port_read_logic
    _RB5_ISR->_gpio_port_read_logic
    _RB4_ISR->_gpio_port_read_logic
    _ADC_App_ISR->_mcal_adc_GetConversionResult

Critical Paths under _main in BANK0

    _convert_uint16_to_string->_sprintf

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_uint16_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   93517
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
             _application_initialize
           _convert_uint16_to_string
             _ecu_dc_motor_move_left
            _ecu_dc_motor_move_right
                  _ecu_dc_motor_stop
      _ecu_lcd_4bits_send_string_pos
 _mcal_adc_StartConversion_Interrupt
 ---------------------------------------------------------------------------------
 (1) _mcal_adc_StartConversion_Interrupt                   4     1      3    1032
                                             24 COMRAM     4     1      3
             _mcal_adc_SelectChannel
           _mcal_adc_StartConversion
 ---------------------------------------------------------------------------------
 (2) _mcal_adc_StartConversion                             3     1      2     198
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _mcal_adc_SelectChannel                               5     2      3     416
                                             19 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (1) _ecu_lcd_4bits_send_string_pos                        7     1      6   33731
                                             41 COMRAM     7     1      6
          _ecu_lcd_4bits_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 7     3      4   17049
                                             34 COMRAM     7     3      4
         _ecu_lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _ecu_lcd_4bits_send_string                            5     1      4   14982
                                             34 COMRAM     5     1      4
       _ecu_lcd_4bits_send_char_data
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_4bits_send_char_data                         4     1      3   14694
                                             30 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _ecu_dc_motor_stop                                    3     1      2    6438
                                             30 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _ecu_dc_motor_move_right                              3     1      2    4451
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_dc_motor_move_left                               3     1      2    4451
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            12     8      4   10234
                                             84 COMRAM     4     0      4
                                              0 BANK1      8     8      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    7642
                                             78 COMRAM     6     0      6
                                              0 BANK0     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             70 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             56 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             43 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             16 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   29963
               _ecu_layer_initialize
                      _mcal_adc_Init
 ---------------------------------------------------------------------------------
 (2) _mcal_adc_Init                                        4     2      2     494
                                             19 COMRAM     4     2      2
   _adc_input_channel_port_configure
           _adc_select_result_format
 ---------------------------------------------------------------------------------
 (3) _adc_select_result_format                             2     0      2     196
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   29469
            _ecu_dc_motor_initialize
           _ecu_lcd_4bits_initialize
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_4bits_initialize                             6     4      2   23027
                                             34 COMRAM     6     4      2
         _ecu_lcd_4bits_send_command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_4bits_send_command                           4     1      3   16366
                                             30 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5094
                                             26 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         3     1      2    4656
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _ecu_dc_motor_initialize                              3     1      2    6438
                                             30 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    6194
                                             26 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4283
                                             16 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     559
                                             16 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             55 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             30 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptManager                                    8     8      0    2878
                                              8 COMRAM     8     8      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             3     3      0     561
                                              6 COMRAM     2     2      0
               _gpio_port_read_logic
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             3     3      0     561
                                              6 COMRAM     2     2      0
               _gpio_port_read_logic
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             3     3      0     561
                                              6 COMRAM     2     2      0
               _gpio_port_read_logic
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             3     3      0     561
                                              6 COMRAM     2     2      0
               _gpio_port_read_logic
 ---------------------------------------------------------------------------------
 (12) _gpio_port_read_logic                                6     4      2     492
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     634
                                NULL *
                        _ADC_App_ISR *
 ---------------------------------------------------------------------------------
 (12) _ADC_App_ISR                                         0     0      0     634
       _mcal_adc_GetConversionResult
 ---------------------------------------------------------------------------------
 (13) _mcal_adc_GetConversionResult                        8     4      4     634
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _application_initialize
     _ecu_layer_initialize
       _ecu_dc_motor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _ecu_lcd_4bits_initialize
         _ecu_lcd_4bits_send_command
           _gpio_pin_write_logic
           _lcd_4bits_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
         _gpio_pin_initialize
     _mcal_adc_Init
       _adc_input_channel_port_configure
       _adc_select_result_format
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _ecu_dc_motor_move_left
     _gpio_pin_write_logic
   _ecu_dc_motor_move_right
     _gpio_pin_write_logic
   _ecu_dc_motor_stop
     _gpio_pin_initialize
   _ecu_lcd_4bits_send_string_pos
     _ecu_lcd_4bits_send_string
       _ecu_lcd_4bits_send_char_data
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
         _lcd_send_4bits
     _lcd_4bits_set_cursor
       _ecu_lcd_4bits_send_command
   _mcal_adc_StartConversion_Interrupt
     _mcal_adc_SelectChannel
       _adc_input_channel_port_configure
     _mcal_adc_StartConversion

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_App_ISR *
       _mcal_adc_GetConversionResult
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
     _gpio_port_read_logic
   _RB5_ISR
     _gpio_port_read_logic
   _RB6_ISR
     _gpio_port_read_logic
   _RB7_ISR
     _gpio_port_read_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8      28       7       15.6%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      E      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     58      68       1       82.5%
BITBIGSFRhlhl       2B      0       0      38        0.0%
BITBIGSFRllhh       15      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhll       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      12        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Oct 30 00:06:13 2023

                            ??_InterruptManager 0009                                 ?_lcd_send_4bits 001B  
                                            l52 300A                                              l62 319A  
                                            l47 31D8                                              l57 3050  
                                            l75 336A                                    ___awdiv@sign 0016  
                                           l144 2C56                                             l139 2222  
                                           l171 2F24                                             l252 28F8  
                                           l164 2AF0                                             l149 2BE0  
                                           l422 311A                                             l350 283E  
                                           l424 311C                                             l360 3212  
                                           l265 2E0C                                             l417 252C  
                                           l514 1FCA                                             l363 338A  
                                           l268 3246                                             l348 279E  
                                           l533 234E                                             l365 338E  
                                           l278 2A54                                             l554 2DA4  
                                           l396 3070                                             l398 3094  
                                           l936 33A4            __end_of_lcd_4bits_send_enable_signal 3248  
                  _lcd_4bits_send_enable_signal 3214                                             _abs 311E  
                                           _pad 2AF2                                 __end_of_ADC_ISR 32A6  
                                           _ret 00FA                                    ___awmod@sign 0016  
                                           prod 0FF3                                             tosl 0FFD  
                                           wreg 0FE8                       _RB5_InterruptHandler_High 00A1  
                                ?_mcal_adc_Init 0014                                    ___flmul@aexp 0030  
                                  ___flmul@bexp 0031                        ??_ecu_dc_motor_move_left 001D  
                                  ___flmul@sign 002B                                    ___flmul@temp 0036  
                                  ___flmul@prod 0032                       ?_convert_uint16_to_string 0055  
                               __end_of_RB4_ISR 3346                                 __end_of_RB5_ISR 331E  
                               __end_of_RB6_ISR 32F6                                 __end_of_RB7_ISR 32CE  
                             _ecu_dc_motor_stop 315E                                    ___fltol@exp1 0041  
                                          ?_abs 0017                                            l1243 2454  
                                          l1190 29A8                                            l1601 1A1E  
                                          l1177 26BA                                            l1444 2CCA  
                                          l1604 1B7A                                            l4020 2D6E  
                                          l4100 2158                                            l1437 2CC2  
                                          l1621 1E86                                            l4022 2D76  
                                          l4014 2D3A                                            l4030 2BE2  
                                          l4110 21AE                                            l4102 2168  
                                          l1615 1B12                                            l1711 25F6  
                                          l1560 10F4                                            l1608 1AB6  
                                          l4024 2DA2                                            l4016 2D3A  
                                          l4032 2BF4                                            l4120 21FE  
                                          l4112 21BE                                            l4104 2178  
                                          l1570 1350                                            l4018 2D4C  
                                          l4034 2BFC                                            l4122 220E  
                                          l4114 21CE                                            l4106 2188  
                                          l1722 33B6                                            l1634 2F74  
                                          l4130 2B6C                                            l1564 1458  
                                          l4036 2C54                                            l4028 2BE2  
                                          l4116 21DE                                            l4108 21A8  
                                          l4124 2220                                            l4220 335E  
                                          l4140 2458                                            l1660 2B6A  
                                          l4132 2B7E                                            l4070 319C  
                                          l4118 21EE                                            l4214 3346  
                                          l4150 2474                                            l4142 245C  
                                          l4134 2B86                                            l4230 29E0  
                                          l4222 29AA                                            l1567 12EA  
                                          l1719 30D8                                            l4072 319C  
                                          l4216 3346                                            l4160 2492  
                                          l4152 247A                                            l4144 2462  
                                          l1656 2B14                                            l4136 2BDE  
                                          l4128 2B6C                                            l4232 29F8  
                                          l4224 29AA                                            l1577 141A  
                                          l1569 1362                                            l1665 1BC4  
                                          l4074 31AE                                            l4090 2136  
                                          l4082 20F8                                            l4218 3352  
                                          l4162 2498                                            l4154 2480  
                                          l4146 2468                                            l4250 2A6C  
                                          l4234 2A10                                            l4226 29B0  
                                          l1667 1BCC                                            l4076 31B6  
                                          l4084 20FC                                            l4164 249E  
                                          l4156 2486                                            l4148 246E  
                                          l4180 3114                                            l1668 1C12  
                                          l1692 2FC4                                            l4260 2AEE  
                                          l4252 2A7E                                            l4228 29C8  
                                          l4236 2A18                                            l4078 31D6  
                                          l4086 210E                                            l4166 24A4  
                                          l4158 248C                                            l4174 30DA  
                                          l4350 27A0                                            l1686 20F6  
                                          l4430 2FE0                                            l4254 2A86  
                                          l4246 2A56                                            l4238 2A52  
                                          l6030 1750                                            l1679 1D10  
                                          l3800 223A                                            l4096 213A  
                                          l4088 2116                                            l4168 24AA  
                                          l4176 30F4                                            l4360 281E  
                                          l4352 27F8                                            l4344 2780  
                                          l1696 3154                                            l4440 301E  
                                          l4432 3008                                            l4424 2FC6  
                                          l4256 2AB8                                            l4248 2A5A  
                                          l6040 17C4                                            l6032 1754  
                                          l3810 2322                                            l3802 225C  
                                          l4098 2156                                            l4178 30FA  
                                          l4362 2820                                            l4354 280A  
                                          l4370 283C                                            l4346 2784  
                                          l4442 3026                                            l4426 2FC6  
                                          l4450 315E                                            l4258 2ABC  
                                          l6050 186E                                            l6042 17DC  
                                          l6034 1774                                            l1699 315C  
                                          l4700 10BE                                            l3804 2264  
                                          l3812 234C                                            l4364 2822  
                                          l4356 281A                                            l4348 2796  
                                          l4444 304E                                            l4436 300C  
                                          l4428 2FD8                                            l4452 3170  
                                          l4380 31F8                                            l6060 194C  
                                          l6052 18DC                                            l6044 17EC  
                                          l6036 1794                                            l4710 1114  
                                          l4702 10CE                                            l3806 22C6  
                                          l4366 282E                                            l4358 281C  
                                          l4438 300C                                            l4454 3178  
                                          l4382 320A                                            l4374 31DA  
                                          l4390 3370                                            l6070 19B0  
                                          l6062 1962                                            l6054 18F4  
                                          l6046 1800                                            l6038 17B4  
                                          ?_pad 0021                                            l4800 1448  
                                          l4720 1154                                            l4704 10DE  
                                          l3920 1E8C                                            l4368 283A  
                                          l4456 3198                                            l4448 315E  
                                          l6152 2A2C                                            l4480 2EF8  
                                          l4472 2ECC                                            l4384 3210  
                                          l4376 31DE                                            l4392 3382  
                                          l6064 1976                                            l6056 190C  
                                          l6048 1852                                            l4730 119E  
                                          l4722 1160                                            l4714 1128  
                                          l4706 10E4                                            l4810 237A  
                                          l3922 1E9E                                            l6154 24BE  
                                          l4482 2F0C                                            l4474 2ECC  
                                          l4378 31F0                                            l4394 338C  
                                          l4570 3052                                            l6066 1986  
                                          l6058 192C                                            l4740 11F0  
                                          l4732 11AA                                            l4724 1178  
                                          l4716 1134                                            l4708 1104  
                                          l4820 23C8                                            l4812 23A4  
                                          l4804 2350                                            l4900 1B20  
                                          l3932 1F86                                            l3924 1EC0  
                                          l6156 2336                                            l4484 2F22  
                                          l4476 2EDE                                            l4388 336C  
                                          l4572 3056                                            l6068 199C  
                                          l4750 126E                                            l4742 1200  
                                          l4734 11BA                                            l4726 1184  
                                          l4718 113E                                            l4830 23F4  
                                          l4814 23A6                                            l4806 2366  
                                          l4910 1B68                                            l4902 1B22  
                                          l6158 1FB2                                            l3926 1EC8  
                                          l3934 1FC8                                            l3918 1E88  
                                          l3950 2DEE                                            l3942 2DA6  
                                          l4670 3390                                            l5710 252E  
                                          l4478 2EF0                                            l4574 3068  
                                          l4760 12E8                                            l4752 12A4  
                                          l4744 121C                                            l4736 11C6  
                                          l4728 1190                                            l4680 104C  
                                          l4840 2424                                            l4816 23B6  
                                          l4912 1B6A                                            l4904 1B26  
                                          l3928 1F2A                                            l3960 322E  
                                          l3944 2DA6                                            l4672 3394  
                                          l5800 297C                                            l5720 25B0  
                                          l5712 2540                                            l4576 3072  
                                          l4770 1348                                            l4762 12FA  
                                          l4754 12B2                                            l4746 1228  
                                          l4738 11D6                                            l4690 1092  
                                          l4682 105C                                            l4674 1030  
                                          l4842 2434                                            l4826 23E0  
                                          l4818 23BA                                            l4850 2C60  
                                          l4906 1B4A                                            l3954 3214  
                                          l3946 2DBC                                            l5802 2982  
                                          l5714 2552                                            l5730 30B8  
                                          l4578 3092                                            l4780 13B6  
                                          l4764 1308                                            l4756 12D0  
                                          l4748 1244                                            l4692 1098  
                                          l4684 106C                                            l4676 103C  
                                          l4844 2444                                            l4836 2408  
                                          l4828 23EA                                            l4860 2C96  
                                          l4852 2C72                                            l4908 1B5A  
                                          l3796 2224                                            l3956 3214  
                                          l3948 2DD4                                            l5740 2616  
                                          l5732 25F8                                            l5804 2988  
                                          l5716 255C                                            l5724 3096  
                                          l5820 2B34                                            l5812 2AF2  
                                          l5900 20BA                                            l4790 141E  
                                          l4774 1372                                            l4782 13BA  
                                          l4766 130C                                            l4758 12DA  
                                          l4694 109E                                            l4686 107C  
                                          l4678 104A                                            l4838 2414  
                                          l4862 2CAC                                            l4854 2C7A  
                                          l4870 19CA                                            l3798 2228  
                                          l3958 3228                                            l5750 264A  
                                          l5742 2624                                            l5734 25FC  
                                          l5806 2998                                            l5718 257A  
                                          l5726 30A2                                            l5822 2B38  
                                          l5814 2B00                                            l5830 1B7C  
                                          l5910 2F76                                            l4792 142E  
                                          l4784 13D4                                            l4776 137E  
                                          l4768 131A                                            l4696 10AC  
                                          l4688 1082                                            l4864 2CB4  
                                          l4856 2C82                                            l4848 2C58  
                                          l4872 19DA                                            l5920 1D12  
                                          l5760 2684                                            l5752 2652  
                                          l5744 262C                                            l5736 260A  
                                          l5808 29A0                                            l5728 30B4  
                                          l5824 2B56                                            l5816 2B0C  
                                          l5840 1BD4                                            l5832 1B90  
                                          l5904 20CC                                            l5912 2F82  
                                          l4794 143C                                            l4786 13E8  
                                          l4778 138C                                            l4698 10AE  
                                          l4866 2CB6                                            l4858 2C90  
                                          l4890 1AA0                                            l4882 1A58  
                                          l4874 19E8                                            l5930 1D72  
                                          l5770 26AA                                            l5762 268C  
                                          l5754 265A                                            l5746 2630  
                                          l5738 2612                                            l5826 311E  
                                          l5818 2B20                                            l5850 1C0E  
                                          l5842 1BE4                                            l5834 1BA0  
                                          l5914 2F9E                                            l4796 143E  
                                          l4788 1402                                            l4868 2CBC  
                                          l4892 1AAC                                            l4884 1A60  
                                          l4876 1A2E                                            l5932 1DCA  
                                          l5924 1D30                                            l5772 26B2  
                                          l5764 268E                                            l5756 2668  
                                          l5748 2638                                            l5780 290C  
                                          l5828 3138                                            l5860 1C62  
                                          l5852 1C1A                                            l5844 1BEA  
                                          l5836 1BA8                                            l5916 2FBC  
                                          l4798 1444                                            l4894 1AE8  
                                          l4886 1A6C                                            l4878 1A44  
                                          l5950 1E74                                            l5942 1E2A  
                                          l5926 1D3C                                            l5766 2694  
                                          l5758 266E                                            l5790 2940  
                                          l5782 2914                                            l5870 1CCA  
                                          l5862 1C68                                            l5854 1C24  
                                          l5846 1BFA                                            l5838 1BB8  
                                          l4896 1AF4                                            l4888 1A9E  
                                          l5944 1E5E                                            l5936 1DE4  
                                          l5768 269A                                            l5792 2948  
                                          l5784 2918                                            l5776 28FA  
                                          l5872 1CDA                                            l5856 1C2A  
                                          l5864 1C84                                            l5848 1C06  
                                          l5880 1FCC                                            l5960 2F64  
                                          l5952 2F26                                            l4898 1B02  
                                          l5946 1E6A                                            l5938 1E10  
                                          l5794 2950                                            l5786 2926  
                                          l5778 28FE                                            l5874 1CE0  
                                          l5866 1C9E                                            l5858 1C5C  
                                          l5890 2022                                            l5882 1FF2  
                                          l5954 2F38                                            l5970 2856  
                                          l5948 1E70                                            l5796 295E  
                                          l5788 292E                                            l5876 1CF0  
                                          l5868 1CB0                                            l5892 2040  
                                          l5884 2000                                            l5956 2F40  
                                          l5980 28BA                                            l5972 2868  
                                          l5964 2840                                            l5798 2974  
                                          l5894 205E                                            l5886 200E  
                                          l5958 2F48                                            l5982 28D6  
                                          l5974 2870                                            l5966 2846  
                                          l5896 20A2                                            l5888 2012  
                                          l5984 28D8                                            l5976 288C  
                                          l5968 2852                                            l5978 289A  
                                          l5986 28F6                                            STR_1 102B  
                                          STR_2 102B                                            STR_4 1011  
                                          STR_5 101B                                            STR_6 1023  
    ecu_lcd_4bits_send_string@_lcd_4bits_config 0023                                            u3100 210E  
                                          u3101 210A                                            _LATA 0F89  
                                          u3030 2D4C                                            u3110 2168  
                                          _LATB 0F8A                                            u3031 2D48  
                                          u3111 2164                                            _LATC 0F8B  
                                          u4000 1B20                                            u3040 2D6E  
                                          u3120 2B7E                                            _LATD 0F8C  
                                          u4001 1B1C                                            u3041 2D6A  
                                          u3121 2B7A                                            _LATE 0F8D  
                                          u4010 1B5A                                            u3050 2BF4  
                                          u3130 30F4                                            u3210 2A6C  
                                          u4011 1B56                                            u3051 2BF0  
                                          u3131 30F0                                            u3211 2A68  
                                          u4020 1B68                                            u3140 3114  
                                          u3220 2A7E                                            u4021 1B64  
                                          u3141 3110                                            u3221 2A7A  
                                          u3230 2AB0                                            u3240 2ADE  
                                          u3090 31AE                                            u3410 2FD8  
                                          u3250 2AEE                                            u3091 31AA  
                                          u3411 2FD4                                            u3251 2AEA  
                                          u3340 2796                                            u5100 25B0  
                                          u3420 301E                                            u3341 2792  
                                          u5101 25AC                                            u3421 301A  
                                          u3237 2AA6                                            u5110 30D8  
                                          u3430 3170                                            u3350 31F0  
                                          u5111 30D4                                            u3431 316C  
                                          u3247 2AD4                                            u3351 31EC  
                                          u2704 2284                                            u5120 260A  
                                          u5200 2940                                            u3360 3382  
                                          u2705 2280                                            u5121 2606  
                                          u5201 293C                                            u3361 337E  
                                          u2714 22E6                                            u5130 2624  
                                          u5210 295E                                            u3450 2EDE  
                                          u2715 22E2                                            u5131 2620  
                                          u5211 295A                                            u3451 2EDA  
                                          u3700 1104                                            u5140 264A  
                                          u5220 2974                                            u5300 1BB8  
                                          u3460 2EF0                                            u3701 1100  
                                          u5141 2646                                            u5221 2970  
                                          u5301 1BB4                                            u3461 2EEC  
                                          u3710 1114                                            u2910 1F9E  
                                          u5150 2668                                            u5230 2998  
                                          u5070 2540                                            u5310 1BE4  
                                          u3711 1110                                            u2911 1F98  
                                          u5151 2664                                            u5231 2994  
                                          u5071 253C                                            u5311 1BE0  
                                          u3800 13D4                                            u3720 128E  
                                          u3640 104A                                            u2920 1FA0  
                                          u2904 1F4A                                            u2680 223A  
                                          u5160 2684                                            u5080 2552  
                                          u5240 2B00                                            u5320 1BFA  
                                          u5400 2FBC                                            u3801 13D0  
                                          u3641 1046                                            u2905 1F46  
                                          u2681 2236                                            u5161 2680  
                                          u5081 254E                                            u5241 2AFC  
                                          u5321 1BF6                                            u5401 2FB8  
                                          u3810 1402                                            u3730 12E8  
                                          u3650 105C                                            u2690 225C  
                                          u5410 1D2C                                            u5170 26AA  
                                          u5090 257A                                            u5250 2B56  
                                          u5330 1C9E                                            u3570 3068  
                                          u3811 13FE                                            u3731 12E4  
                                          u3651 1058                                            u2691 2258  
                                          u5411 1D28                                            u5171 26A6  
                                          u5091 2576                                            u5251 2B52  
                                          u5331 1C9A                                            u3571 3064  
                                          u3820 143C                                            u3740 1308  
                                          u3660 106C                                            u3900 2C72  
                                          u5420 1D6E                                            u5180 290C  
                                          u5260 3138                                            u5340 1CB0  
                                          u3821 1438                                            u3741 1304  
                                          u3725 1284                                            u3661 1068  
                                          u3901 2C6E                                            u5421 1D6A  
                                          u5181 2908                                            u5261 3134  
                                          u5341 1CAC                                            u3750 131A  
                                          u3670 10AC                                            u3830 2366  
                                          u3910 2C90                                            u2870 1E9E  
                                          u5430 1DE0                                            u5190 2926  
                                          u5350 1CCA                                            u5270 1B8C  
                                          u3751 1316                                            u3671 10A8  
                                          u3831 2362                                            u3911 2C8C  
                                          u2871 1E9A                                            u5431 1DDC  
                                          u5191 2922                                            u5351 1CC6  
                                          u5271 1B86                                            u3760 1348  
                                          u3680 10BE                                            u3840 239A  
                                          u3920 2CAC                                            u2880 1EC0  
                                          u5440 1E26                                            u5360 1CDA  
                                          u5280 1B8E                                            u3761 1344  
                                          u3681 10BA                                            u3921 2CA8  
                                          u2881 1EBC                                            u5441 1E22  
                                          u5361 1CD6                                            u3770 135E  
                                          u3690 10CE                                            u3850 23C8  
                                          u3930 19DA                                            u5450 1E86  
                                          u5290 1BA0                                            u5370 1FF2  
                                          u3771 135A                                            u3691 10CA  
                                          u3851 23C4                                            u3931 19D6  
                                          u5451 1E82                                            u5291 1B9C  
                                          u5371 1FEE                                            u3780 1372  
                                          u3860 23DC                                            u3940 19E8  
                                          u5380 2040                                            u5540 17C4  
                                          u3781 136E                                            u3861 23D8  
                                          u3845 2390                                            u3941 19E4  
                                          u5381 203C                                            u5461 284C  
                                          u5541 17C0                                            u3790 138C  
                                          u3870 2404                                            u3950 1A44  
                                          u2894 1EE8                                            u5390 205E  
                                          u5470 2868                                            u5550 17EC  
                                          u3791 1388                                            u3871 2400  
                                          u3951 1A40                                            u2895 1EE4  
                                          u5607 21AA                                            u5391 205A  
                                          u5471 2864                                            u5551 17E8  
                                          u3880 2424                                            u3960 1A9A  
                                          u5480 28F6                                            u5560 1962  
                                          u3881 2420                                            u3961 1A96  
                                          u5481 28F2                                            u5561 195E  
                                          u3890 2434                                            u3970 1AE4  
                                          u5570 199C                                            u3891 2430  
                                          u3971 1AE0                                            u5571 1998  
                                          u3980 1B02                                            u3981 1AFE  
                                          u3990 1B12                                            u3991 1B0E  
                                          u5587 216E                                            u5597 218E  
                      ?_ecu_dc_motor_move_right 001B                  __end_of_mcal_adc_SelectChannel 3214  
                            ?_ecu_dc_motor_stop 001F                         gpio_port_read_logic@ret 0005  
                                          abs@a 0017                                            _dbuf 0100  
                                          _main 1750                                            _dtoa 1B7C  
                      _RB4_InterruptHandler_Low 00A7                                            _prec 0097  
                                          pad@i 0028                                            pad@p 0025  
                                          fsr0h 0FEA                                            fsr1h 0FE2  
                                          indf0 0FEF                                            fsr2h 0FDA  
                                          fsr0l 0FE9                                            indf1 0FE7  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          pad@w 002A                                            fsr2l 0FD9  
                                          btemp 0069                        _RB7_InterruptHandler_Low 009B  
               ecu_lcd_4bits_initialize@counter 0027                                            prodh 0FF4  
                                          prodl 0FF3                                            start 000E  
                    ecu_dc_motor_initialize@ret 0021                             ??_ecu_dc_motor_stop 0021  
                                  ___param_bank 0000                                  _lm35_res_1_txt 00B6  
                                _lm35_res_2_txt 00AF                                           ??_abs 0019  
                          _gpio_pin_write_logic 2224                                           ??_pad 0027  
                              __end_of_INT0_ISR 33B6                                __end_of_INT1_ISR 33B2  
                              __end_of_INT2_ISR 33AE                                   ___fltol@sign1 0040  
                                         ?_main 0001                                           ?_dtoa 002C  
                      ??_application_initialize 0029                                 __end_of___awdiv 26BC  
                                         _EEADR 0FA9                                 __end_of___awmod 29AA  
                               __end_of___flmul 145A                                 __end_of___fltol 2456  
                               ___awdiv@divisor 0013                                 __end_of___lwdiv 2CCC  
                                         i2l441 32A4                                           i2l702 32F4  
                                         i2l383 277E                                           i2l713 32CC  
                                         i2l654 33B0                                           i2l680 3344  
                                         i2l649 33B4                                           i2l578 2E6C  
                                         i2l850 14BC                                           i2l659 33AC  
                                         i2l691 331C                                           i2l852 14DC  
                                         i2l861 163C                                           i2l853 1524  
                                         i2l862 1680                                           i2l854 1568  
                                         i2l943 2ECA                                           i2l871 172C  
                                         i2l848 149C                                           i2l865 16C8  
                                         i2l857 15B0                                           i2l866 170C  
                                         i2l858 15F4                                 ___awdiv@counter 0015  
                                  vfpfcnvrt@fmt 003B                                           _PORTA 0F80  
                                         _PORTB 0F81                                           _PORTC 0F82  
                                         _PORTD 0F83                                           _PORTE 0F84  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _TRISD 0F95  
                                         _TRISE 0F96                   ?_lcd_4bits_send_enable_signal 001B  
                     __end_of_ecu_dc_motor_stop 319C                       ecu_dc_motor_move_left@ret 001D  
                      gpio_port_read_logic@port 0006                                           _lcd_1 00E2  
                                         _flags 005F                                           _fputc 252E  
                                         _fputs 3096                                           pad@fp 0021  
                                         _width 0095                                           _putch 33B6  
                                         dtoa@d 002E                                           dtoa@i 0037  
                                         dtoa@p 0032                                           dtoa@s 0036  
                                         dtoa@w 0034          ecu_dc_motor_move_left@_dc_motor_config 001B  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                           ttemp5 006A  
                                         ttemp6 006D                                           ttemp7 0071  
                                         status 0FD8                                           wtemp8 006A  
                               __end_of_sprintf 2F76                  ?_gpio_pin_direction_initialize 0011  
                            _lm35_res_1_celsius 005B                                 __initialization 2CCC  
                                  RB4_ISR@value 0007                              _lm35_res_2_celsius 0059  
                                  __end_of_main 19C8                                    __end_of_dtoa 1D12  
                         ?_gpio_pin_write_logic 0011                                       ??_ADC_ISR 0009  
                                 _lat_registers 00C7                                    RB5_ISR@value 0007  
                                        ??_main 0059                                          ??_dtoa 0030  
                                 __activetblptr 0003                                 ??_mcal_adc_Init 0016  
                                     ??_RB4_ISR 0007                                       ??_RB5_ISR 0007  
                                     ??_RB6_ISR 0007                                       ??_RB7_ISR 0007  
                     ?_adc_select_result_format 0011                                    RB6_ISR@value 0007  
                                        ?_fputc 0011                                          ?_fputs 001A  
                                        _ADRESH 0FC4                                          _EEADRH 0FAA  
                                        _ADRESL 0FC3                                          _EEDATA 0FA8  
                                        _EECON2 0FA7                                ___awdiv@dividend 0011  
                                        ?_putch 0001                                          i2l4200 277C  
                                        i2l4400 2E14                                          i2l4402 2E26  
                                        i2l4420 2EAE                                          i2l4412 2E6E  
                                        i2l4404 2E36                                          i2l4190 26EC  
                                        i2l4182 26BC                                          i2l4422 2EC6  
                                        i2l4414 2E7E                                          i2l4406 2E3E  
                                        i2l4192 2706                                          i2l4184 26C0  
                                        i2l4416 2E96                                          i2l4600 33AA  
                                        i2l4408 2E6A                                          i2l4194 272E  
                                        i2l4186 26D2                                          i2l4418 2E9E  
                                        i2l4610 3330                                          i2l4196 2748  
                                        i2l4188 26E4                                          i2l5500 14CA  
                                        i2l4606 3320                                          i2l4622 32F8  
                                        i2l5510 1516                                          i2l5502 14D8  
                                        i2l4616 3344                                          i2l4608 332E  
                                        i2l4632 331C                                          i2l4624 3306  
                                        i2l4640 32DE                                          i2l5520 155E  
                                        i2l5512 151A                                          i2l5504 14EA  
                                        i2l4626 3308                                          i2l4642 32E0  
                                        i2l5530 15A2                                          i2l5522 1562  
                                        i2l5514 1532                                          i2l5506 14F8  
                                        i2l5540 15EA                                          i2l5532 15A6  
                                        i2l5524 1576                                          i2l5516 1540  
                                        i2l5508 1506                                          i2l4582 3278  
                                        i2l4398 2E10                                          i2l4638 32D0  
                                        i2l4654 32A8                                          i2l5550 162E  
                                        i2l5542 15EE                                          i2l5534 15BE  
                                        i2l5526 1584                                          i2l5518 154E  
                                        i2l4584 327A                                          i2l4648 32F4  
                                        i2l4664 32CC                                          i2l4656 32B6  
                                        i2l5560 1676                                          i2l5552 1632  
                                        i2l5544 1602                                          i2l5536 15CC  
                                        i2l5528 1592                                          i2l4586 328C  
                                        i2l4594 33AE                                          i2l4658 32B8  
                                        i2l5570 16BA                                          i2l5562 167A  
                                        i2l5554 164A                                          i2l5546 1610  
                                        i2l5538 15DA                                          i2l5490 147C  
                                        i2l4588 33B2                                          i2l5580 1702  
                                        i2l5572 16BE                                          i2l5564 168E  
                                        i2l5556 1658                                          i2l5548 161E  
                                        i2l5492 148A                                          i2l5582 1706  
                                        i2l5574 16D6                                          i2l5566 169C  
                                        i2l5558 1666                                          i2l5494 1498  
                                        i2l5584 171A                                          i2l5576 16E4  
                                        i2l5568 16AA                                          i2l5496 14AA  
                                        i2l5586 1728                                          i2l5578 16F2  
                                        i2l5498 14B8                __end_of_mcal_adc_StartConversion 3390  
                                  RB7_ISR@value 0007                      ??_ecu_lcd_4bits_initialize 0025  
                    ?_ecu_lcd_4bits_send_string 0023                                __end_of___xxtofl 1B7C  
         lcd_4bits_set_cursor@_lcd_4bits_config 0023                                    vfprintf@cfmt 004D  
                                     ??___awdiv 0015                                       ??___awmod 0015  
                                     ??___flmul 0027                                       ??___fltol 003C  
                                     ??___lwdiv 0015                ecu_lcd_4bits_send_string_pos@col 002D  
                                        _memset 1D12                ecu_lcd_4bits_send_string_pos@ret 0030  
              ecu_lcd_4bits_send_string_pos@row 002C                                          clear_0 2D12  
                                        clear_1 2D1E                                          clear_2 2D2A  
              ecu_lcd_4bits_send_string_pos@str 002E                                ___awdiv@quotient 0017  
                               ___awmod@divisor 0013            __end_of_mcal_adc_GetConversionResult 2780  
                  _mcal_adc_GetConversionResult 26BC                                          isa$std 0001  
                          ecu_dc_motor_stop@ret 0021                                 ___awmod@counter 0015  
                                        pad@buf 0023                                          dtoa@fp 002C  
                                        fputc@c 0011                                          fputs@c 001E  
                                        fputs@i 001F                                    __pdataCOMRAM 0065  
                                        fputs@s 001A                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                    __end_of_gpio_port_read_logic 2E6E  
                                        putch@c 0001                                __end_of_vfprintf 2FC6  
                                     ??_sprintf 0055                                    ___xxtofl@arg 001B  
                                  ___xxtofl@exp 001A                                    ___xxtofl@val 0011  
                                    __accesstop 0080                         __end_of__initialization 2D30  
                                     ?_INT0_ISR 0001                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                                      _lm35_res_1 0063  
                                    _lm35_res_2 0061                                   ___rparam_used 0001  
                                    ___fltol@f1 0038                                ??_lcd_send_4bits 001E  
 ecu_lcd_4bits_send_char_data@_lcd_4bits_config 001F                   ecu_lcd_4bits_send_command@ret 0022  
                        _ecu_dc_motor_move_left 300C                               RB5_ISR@RB5_Source 0008  
                        ??_gpio_pin_write_logic 0014                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 3248                                   __end_of_fputc 25F8  
                                 __end_of_fputs 30DA                                   __end_of_putch 33B8  
ecu_lcd_4bits_send_string_pos@_lcd_4bits_config 002A                        mcal_adc_Init@_adc_config 0014  
      gpio_pin_direction_initialize@_pin_config 0011                   ?_mcal_adc_GetConversionResult 0001  
 mcal_adc_StartConversion_Interrupt@_adc_config 0019                                         ??_fputc 0015  
                                    _dc_motor_1 00EA                                      _dc_motor_2 00E8  
                                       ??_fputs 001E                                         ??_putch 0011  
                ??_ecu_lcd_4bits_send_char_data 0022                                      __pbssBANK0 0080  
                                    __pbssBANK1 0100                           _INT0_InterruptHandler 00AD  
                                    ??_INT0_ISR 0001                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                          _application_initialize 3390  
                  __end_of_lcd_4bits_set_cursor 2A56                 lcd_4bits_send_enable_signal@ret 001D  
                   convert_uint16_to_string@ret 0126                                         _ADC_ISR 3278  
                   convert_uint16_to_string@str 0057                                         ?_memset 0011  
                                       _ADC_Req 0060                       ?_mcal_adc_StartConversion 0011  
                                 ??_ADC_App_ISR 0009                               RB7_ISR@RB7_Source 0008  
                                       _RB4_ISR 331E                                         _RB5_ISR 32F6  
                                       _RB6_ISR 32CE                                         _RB7_ISR 32A6  
                                     ?___xxtofl 0011                       _RB6_InterruptHandler_High 009D  
                 mcal_adc_SelectChannel@channel 0016         ecu_dc_motor_move_right@_dc_motor_config 001B  
              __end_of_ecu_lcd_4bits_initialize 2224                                  _tris_registers 00D1  
                      _RB6_InterruptHandler_Low 009F                            _ADC_InterruptHandler 005D  
                                       __Hparam 0000                                         __Lparam 0000  
                           _gpio_pin_initialize 2D3A                            _gpio_port_read_logic 2E0E  
                                       ___awdiv 25F8                                         ___awmod 28FA  
                                       ___flmul 1030                                         ___fltol 2350  
                                       _adc_obj 00DB                                         ___lwdiv 2C58  
                                     ?_vfprintf 0047                                    __psmallconst 1000  
       mcal_adc_GetConversionResult@_adc_config 0001                                         __pcinit 2CCC  
                                       __ramtop 1000                                         __ptext0 1750  
                                       __ptext1 3052                                         __ptext2 336C  
                                       __ptext3 31DA                                         __ptext4 2ECC  
                                       __ptext5 29AA                                         __ptext6 2A56  
                                       __ptext7 2B6C                                         __ptext8 315E  
                                       __ptext9 2FC6                     mcal_adc_StartConversion@ret 0013  
               ??_gpio_pin_direction_initialize 0013                        _convert_uint16_to_string 2840  
                                    ??___xxtofl 0015                                ___awmod@dividend 0011  
               ??_ecu_lcd_4bits_send_string_pos 0030                         lcd_4bits_set_cursor@col 0026  
                       lcd_4bits_set_cursor@ret 0029                         lcd_4bits_set_cursor@row 0025  
                          ?_gpio_pin_initialize 001B                  ??_mcal_adc_GetConversionResult 0005  
                           __end_of_ADC_App_ISR 2ECC             adc_select_result_format@_adc_config 0011  
                                       _sprintf 2F26                                  __pintcode_body 145A  
                          end_of_initialization 2D30                               lcd_send_4bits@ret 001E  
                          __end_of_keypad_valus 1011                                         fputc@fp 0013  
                                       memset@c 0013                                         memset@k 0019  
                                       memset@n 0015                                         memset@s 001B  
                                       int_func 145A                                         fputs@fp 001C  
                   ??_ecu_lcd_4bits_send_string 0027                               __end_of_vfpfcnvrt 20F8  
                         ?_gpio_port_read_logic 0001                                         postdec1 0FE5  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 0041                                      ??_vfprintf 004D  
         mcal_adc_StartConversion_Interrupt@ret 001C                           _INT1_InterruptHandler 00AB  
                                     _PORTBbits 0F81                         _ecu_dc_motor_initialize 319C  
                              _InterruptManager 0008                            _lcd_4bits_set_cursor 29AA  
                         __end_of_mcal_adc_Init 2840                        ??_mcal_adc_SelectChannel 0017  
                                 ___xxtofl@sign 0019                           ??_gpio_pin_initialize 001D  
                  ecu_lcd_4bits_send_string@ret 0027                    ecu_lcd_4bits_send_string@str 0025  
                                   ___flmul@grs 002C                         ?_ecu_dc_motor_move_left 001B  
                     mcal_adc_SelectChannel@ret 0018                         _ecu_dc_motor_move_right 2FC6  
                 convert_uint16_to_string@F3201 008B                   convert_uint32_to_string@F3208 0080  
                                   vfpfcnvrt@ap 003D                                     vfpfcnvrt@cp 0045  
                                   vfpfcnvrt@fp 0039                                   __pidataCOMRAM 33A6  
                      _adc_select_result_format 30DA         adc_input_channel_port_configure@channel 0013  
                     ?_ecu_lcd_4bits_initialize 0023                       _ecu_lcd_4bits_send_string 2A56  
                                __end_of_memset 1E88                           ?_lcd_4bits_set_cursor 0023  
                                   _ADC_App_ISR 2E6E                             start_initialization 2CCC  
                 convert_uint16_to_string@value 0055                                     __end_of_abs 315E  
                                   __end_of_pad 2B6C           __end_of_gpio_pin_direction_initialize 1FCC  
                 _gpio_pin_direction_initialize 1E88                   gpio_port_read_logic@direction 0001  
                       ?_application_initialize 0001   mcal_adc_GetConversionResult@conversion_result 0003  
                __end_of_ecu_dc_motor_move_left 3052           __end_of_ecu_lcd_4bits_send_string_pos 2F26  
                 _ecu_lcd_4bits_send_string_pos 2ECC                 mcal_adc_GetConversionResult@ret 0008  
     mcal_adc_StartConversion_Interrupt@channel 001B                     ecu_lcd_4bits_initialize@ret 0028  
                        ??_gpio_port_read_logic 0003               ecu_dc_motor_stop@_dc_motor_config 001F  
                                   vfprintf@fmt 0049                       ??_ecu_dc_motor_initialize 0021  
                                   __pdataBANK0 00BD                    convert_uint8_to_string@F3194 0091  
                                      ?_ADC_ISR 0001                                        ??_memset 0017  
                  __end_of_ecu_layer_initialize 336C                                      memset@dest 0011  
                                      ?_RB4_ISR 0001                                        ?_RB5_ISR 0001  
                                      ?_RB6_ISR 0001                                        ?_RB7_ISR 0001  
                                     ___flmul@a 0023                                       ___flmul@b 001F  
                                   __pbssCOMRAM 0059                                   __pcstackBANK0 00EC  
                                 __pcstackBANK1 0120                  __end_of_application_initialize 33A6  
                              mcal_adc_Init@ret 0017                           _INT2_InterruptHandler 00A9  
                ??_lcd_4bits_send_enable_signal 001D                                       __pnvBANK0 00FA  
                     ??_ecu_dc_motor_move_right 001D                ecu_lcd_4bits_send_char_data@data 0021  
                              ___lwdiv@dividend 0011                                       _dtoa$2447 0030  
                                     __pintcode 0008        __end_of_adc_input_channel_port_configure 252E  
            ??_adc_input_channel_port_configure 0011               ?_adc_input_channel_port_configure 0001  
              _adc_input_channel_port_configure 2456                      ??_convert_uint16_to_string 0059  
               gpio_pin_write_logic@_pin_config 0011                                        ?___awdiv 0011  
                                      ?___awmod 0011                                        ?___flmul 001F  
                                      ?___fltol 0038                                        ?___lwdiv 0011  
            __end_of_ecu_lcd_4bits_send_command 2C58                      _ecu_lcd_4bits_send_command 2BE2  
          __end_of_ecu_lcd_4bits_send_char_data 2BE2                    _ecu_lcd_4bits_send_char_data 2B6C  
                     gpio_pin_write_logic@logic 0013                                    _keypad_valus 1001  
                        ??_lcd_4bits_set_cursor 0027                                     __smallconst 1000  
                     _RB4_InterruptHandler_High 00A5         ecu_dc_motor_initialize@_dc_motor_config 001F  
                     _RB7_InterruptHandler_High 0099                                ___lwdiv@quotient 0015  
                                      ?_sprintf 004F                 __end_of_ecu_dc_motor_initialize 31DA  
              convert_uint16_to_string@temp_str 0120                                        _INT0_ISR 33B2  
                                      _INT1_ISR 33AE                                        _INT2_ISR 33AA  
                      _RB5_InterruptHandler_Low 00A3                      lcd_send_4bits@data_command 001D  
                             RB4_ISR@RB4_Source 0008                        __end_of_InterruptManager 1750  
                                      _RB4_flag 0068                                        _PIE1bits 0F9D  
                                      _RB5_flag 0067                                        _RB6_flag 0066  
                                      _RB7_flag 0065                  ?_ecu_lcd_4bits_send_string_pos 002A  
                        _mcal_adc_SelectChannel 31DA                                        i2u315_40 26D2  
                                      i2u315_41 26CE                                        i2u316_40 26E4  
                                      i2u340_40 2EAE                                        i2u500_40 1702  
                                      i2u316_41 26E0                                        i2u340_41 2EAA  
                                      i2u500_41 16FE                                        i2u317_40 2706  
                                      i2u501_40 171A                                        i2u317_41 2702  
                                      i2u501_41 1716                                        i2u318_40 2748  
                                      i2u502_40 1728                                        i2u318_41 2744  
                                      i2u502_41 1724                                        i2u319_45 2760  
                                      i2u360_40 3340                                        i2u360_41 333C  
                                      i2u337_40 2E26                                        i2u361_40 3318  
                                      i2u337_41 2E22                                        i2u361_41 3314  
                                      _PIR1bits 0F9E                                        i2u338_40 2E36  
                                      i2u362_40 32F0                                        i2u338_41 2E32  
                                      i2u362_41 32EC                                        i2u339_40 2E7E  
                                      i2u363_40 32C8                                        i2u339_41 2E7A  
                                      i2u363_41 32C4                                        i2u358_40 328C  
                                      i2u470_40 14F8                                        i2u358_41 3288  
                                      i2u470_41 14F4                                        i2u471_40 1506  
                                      i2u463_40 148A                                        i2u471_41 1502  
                                      i2u463_41 1486                                        i2u359_48 3292  
                                      i2u480_40 15A2                                        i2u472_40 1516  
                                      i2u464_40 1498                                        i2u359_49 32A4  
                                      i2u480_41 159E                                        i2u472_41 1512  
                                      i2u464_41 1494                                        i2u481_40 15BE  
                                      i2u473_40 1532                                        i2u465_40 14AA  
                                      i2u481_41 15BA                                        i2u473_41 152E  
                                      i2u465_41 14A6                                        i2u490_40 1658  
                                      i2u482_40 15CC                                        i2u474_40 1540  
                                      i2u466_40 14B8                                        i2u490_41 1654  
                                      i2u482_41 15C8                                        i2u474_41 153C  
                                      i2u466_41 14B4                                        i2u491_40 1666  
                                      i2u483_40 15DA                                        i2u475_40 154E  
                                      i2u467_40 14CA                                        i2u491_41 1662  
                                      i2u483_41 15D6                                        i2u475_41 154A  
                                      i2u467_41 14C6                                        i2u492_40 1676  
                                      i2u484_40 15EA                                        i2u476_40 155E  
                                      i2u468_40 14D8                                        i2u492_41 1672  
                                      i2u484_41 15E6                                        i2u476_41 155A  
                                      i2u468_41 14D4                                        i2u493_40 168E  
                                      i2u485_40 1602                                        i2u477_40 1576  
                                      i2u469_40 14EA                                        i2u493_41 168A  
                                      i2u485_41 15FE                                        i2u477_41 1572  
                                      i2u469_41 14E6                                        i2u494_40 169C  
                                      i2u486_40 1610                                        i2u478_40 1584  
                                      i2u494_41 1698                                        i2u486_41 160C  
                                      i2u478_41 1580                                        i2u495_40 16AA  
                                      i2u487_40 161E                                        i2u479_40 1592  
                                      i2u495_41 16A6                                        i2u487_41 161A  
                                      i2u479_41 158E                                        i2u496_40 16BA  
                                      i2u488_40 162E                                        i2u496_41 16B6  
                                      i2u488_41 162A                                        i2u497_40 16D6  
                                      i2u489_40 164A                                        i2u497_41 16D2  
                                      i2u489_41 1646                                        i2u498_40 16E4  
                                      i2u498_41 16E0                                        i2u499_40 16F2  
                                      i2u499_41 16EE                gpio_pin_direction_initialize@ret 0019  
                      _mcal_adc_StartConversion 336C                                       _vfpfcnvrt 1FCC  
             mcal_adc_SelectChannel@_adc_config 0014                 lcd_send_4bits@_lcd_4bits_config 001B  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                                    _ADCON2bits 0FC0                   ?_ecu_lcd_4bits_send_char_data 001F  
               __end_of_ecu_dc_motor_move_right 300C                          gpio_pin_initialize@ret 001E  
                       gpio_pin_write_logic@ret 001A                                     _INTCON2bits 0FF1  
                                   _INTCON3bits 0FF0                                       copy_data0 2CE0  
                                     copy_data1 2D00                                  fp__ADC_App_ISR 0000  
                          _ecu_layer_initialize 3346                                      _EECON1bits 0FA6  
                                      __Hrparam 0000                      ??_adc_select_result_format 0013  
                                    vfprintf@ap 004B                                        __Lrparam 0000  
                                    vfprintf@fp 0047       ecu_lcd_4bits_initialize@_lcd_4bits_config 0023  
   ecu_lcd_4bits_send_command@_lcd_4bits_config 001F                               RB6_ISR@RB6_Source 0008  
                                    ?_vfpfcnvrt 0039                     __end_of_gpio_pin_initialize 2DA6  
                gpio_pin_initialize@_pin_config 001B                                    ?_ADC_App_ISR 0001  
                                    sprintf@fmt 0051                                        ___xxtofl 19C8  
                    ecu_dc_motor_move_right@ret 001D                 ecu_lcd_4bits_send_char_data@ret 0022  
                               ___lwdiv@divisor 0013             mcal_adc_StartConversion@_adc_config 0011  
                               ___lwdiv@counter 0017                                        __ptext10 300C  
                                      __ptext11 2840                                        __ptext20 311E  
                                      __ptext12 2F26                                        __ptext21 28FA  
                                      __ptext13 2F76                                        __ptext30 2BE2  
                                      __ptext22 25F8                                        __ptext14 1FCC  
                                      __ptext31 2DA6                                        __ptext23 1D12  
                                      __ptext15 1B7C                                        __ptext40 1030  
                                      __ptext32 3214                                        __ptext24 3390  
                                      __ptext16 2AF2                                        __ptext33 319C  
                                      __ptext25 2780                                        __ptext17 3096  
                                      __ptext50 3278                                        __ptext42 32A6  
                                      __ptext34 2D3A                                        __ptext26 30DA  
                                      __ptext18 252E                                        __ptext51 2E6E  
                                      __ptext43 32CE                                        __ptext35 2224  
                                      __ptext27 2456                                        __ptext19 33B6  
                                      __ptext52 26BC                                        __ptext44 32F6  
                                      __ptext36 1E88                                        __ptext28 3346  
                                      __ptext53 0000                                        __ptext45 331E  
                                      __ptext37 19C8                                        __ptext29 20F8  
                                      __ptext46 2E0E                                        __ptext38 2C58  
                                      __ptext47 33AA                                        __ptext39 2350  
                                      __ptext48 33AE                                        __ptext49 33B2  
             __end_of_ecu_lcd_4bits_send_string 2AF2                 convert_uint16_to_string@counter 0127  
                         ?_ecu_layer_initialize 0001                __end_of_convert_uint16_to_string 28FA  
                                      isa$xinst 0000                                        int$flags 0069  
                                      _vfprintf 2F76                                  _lcd_send_4bits 2DA6  
    __end_of_mcal_adc_StartConversion_Interrupt 3096            ??_mcal_adc_StartConversion_Interrupt 001C  
           ?_mcal_adc_StartConversion_Interrupt 0019              _mcal_adc_StartConversion_Interrupt 3052  
                  ??_ecu_lcd_4bits_send_command 0022                                      _INTCONbits 0FF2  
                  __end_of_gpio_pin_write_logic 2350                                        intlevel2 0000  
                                     sprintf@ap 00EC                        _ecu_lcd_4bits_initialize 20F8  
                        __end_of_lcd_send_4bits 2E0E                     ?_ecu_lcd_4bits_send_command 001F  
                                   ??_vfpfcnvrt 003F                                        sprintf@f 00EE  
                                      sprintf@s 004F                                  _port_registers 00BD  
                                 _mcal_adc_Init 2780               ecu_lcd_4bits_send_command@command 0021  
                        ??_ecu_layer_initialize 0029                         ?_mcal_adc_SelectChannel 0014  
                    ??_mcal_adc_StartConversion 0013   lcd_4bits_send_enable_signal@_lcd_4bits_config 001B  
              __end_of_adc_select_result_format 311E                               ?_InterruptManager 0001  
                      ?_ecu_dc_motor_initialize 001F  
