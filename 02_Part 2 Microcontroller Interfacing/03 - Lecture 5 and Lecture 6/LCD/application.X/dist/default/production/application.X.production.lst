

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 20:23:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001ACE                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_registers
    75   001ACE  80                 	db	128
    76   001ACF  0F                 	db	15
    77   001AD0  81                 	db	129
    78   001AD1  0F                 	db	15
    79   001AD2  82                 	db	130
    80   001AD3  0F                 	db	15
    81   001AD4  83                 	db	131
    82   001AD5  0F                 	db	15
    83   001AD6  84                 	db	132
    84   001AD7  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   001AD8  89                 	db	137
    88   001AD9  0F                 	db	15
    89   001ADA  8A                 	db	138
    90   001ADB  0F                 	db	15
    91   001ADC  8B                 	db	139
    92   001ADD  0F                 	db	15
    93   001ADE  8C                 	db	140
    94   001ADF  0F                 	db	15
    95   001AE0  8D                 	db	141
    96   001AE1  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   001AE2  92                 	db	146
   100   001AE3  0F                 	db	15
   101   001AE4  93                 	db	147
   102   001AE5  0F                 	db	15
   103   001AE6  94                 	db	148
   104   001AE7  0F                 	db	15
   105   001AE8  95                 	db	149
   106   001AE9  0F                 	db	15
   107   001AEA  96                 	db	150
   108   001AEB  0F                 	db	15
   109                           
   110                           ;initializer for _lcd_2
   111   001AEC  32                 	db	50
   112   001AED  3A                 	db	58
   113   001AEE  03                 	db	3
   114   001AEF  0B                 	db	11
   115   001AF0  13                 	db	19
   116   001AF1  1B                 	db	27
   117   001AF2  23                 	db	35
   118   001AF3  2B                 	db	43
   119   001AF4  33                 	db	51
   120   001AF5  3B                 	db	59
   121                           
   122                           ;initializer for _lcd_1
   123   001AF6  02                 	db	2
   124   001AF7  0A                 	db	10
   125   001AF8  12                 	db	18
   126   001AF9  1A                 	db	26
   127   001AFA  22                 	db	34
   128   001AFB  2A                 	db	42
   129                           
   130                           	psect	smallconst
   131   001000                     __psmallconst:
   132                           	callstack 0
   133   001000  00                 	db	0
   134   001001                     _keypad_valus:
   135                           	callstack 0
   136   001001  37                 	db	55
   137   001002  38                 	db	56
   138   001003  39                 	db	57
   139   001004  2F                 	db	47
   140   001005  34                 	db	52
   141   001006  35                 	db	53
   142   001007  36                 	db	54
   143   001008  2A                 	db	42
   144   001009  31                 	db	49
   145   00100A  32                 	db	50
   146   00100B  33                 	db	51
   147   00100C  2D                 	db	45
   148   00100D  23                 	db	35
   149   00100E  30                 	db	48
   150   00100F  3D                 	db	61
   151   001010  2B                 	db	43
   152   001011                     __end_of_keypad_valus:
   153                           	callstack 0
   154   001011                     _customchar6:
   155                           	callstack 0
   156   001011  0E                 	db	14
   157   001012  0E                 	db	14
   158   001013  1F                 	db	31
   159   001014  1F                 	db	31
   160   001015  1F                 	db	31
   161   001016  1F                 	db	31
   162   001017  1F                 	db	31
   163   001018  00                 	db	0
   164   001019                     __end_of_customchar6:
   165                           	callstack 0
   166   001019                     _customchar5:
   167                           	callstack 0
   168   001019  0E                 	db	14
   169   00101A  0A                 	db	10
   170   00101B  1F                 	db	31
   171   00101C  1F                 	db	31
   172   00101D  1F                 	db	31
   173   00101E  1F                 	db	31
   174   00101F  1F                 	db	31
   175   001020  00                 	db	0
   176   001021                     __end_of_customchar5:
   177                           	callstack 0
   178   001021                     _customchar4:
   179                           	callstack 0
   180   001021  0E                 	db	14
   181   001022  0A                 	db	10
   182   001023  11                 	db	17
   183   001024  1F                 	db	31
   184   001025  1F                 	db	31
   185   001026  1F                 	db	31
   186   001027  1F                 	db	31
   187   001028  00                 	db	0
   188   001029                     __end_of_customchar4:
   189                           	callstack 0
   190   001029                     _customchar3:
   191                           	callstack 0
   192   001029  0E                 	db	14
   193   00102A  0A                 	db	10
   194   00102B  11                 	db	17
   195   00102C  11                 	db	17
   196   00102D  1F                 	db	31
   197   00102E  1F                 	db	31
   198   00102F  1F                 	db	31
   199   001030  00                 	db	0
   200   001031                     __end_of_customchar3:
   201                           	callstack 0
   202   001031                     _customchar2:
   203                           	callstack 0
   204   001031  0E                 	db	14
   205   001032  0A                 	db	10
   206   001033  11                 	db	17
   207   001034  11                 	db	17
   208   001035  11                 	db	17
   209   001036  1F                 	db	31
   210   001037  1F                 	db	31
   211   001038  00                 	db	0
   212   001039                     __end_of_customchar2:
   213                           	callstack 0
   214   001039                     _customchar1:
   215                           	callstack 0
   216   001039  0E                 	db	14
   217   00103A  0A                 	db	10
   218   00103B  11                 	db	17
   219   00103C  11                 	db	17
   220   00103D  11                 	db	17
   221   00103E  11                 	db	17
   222   00103F  1F                 	db	31
   223   001040  00                 	db	0
   224   001041                     __end_of_customchar1:
   225                           	callstack 0
   226   001041                     STR_1:
   227   001041  25                 	db	37
   228   001042  69                 	db	105	;'i'
   229   001043  00                 	db	0
   230   001044  00                 	db	0	; dummy byte at the end
   231   000000                     
   232                           	psect	nvCOMRAM
   233   00005F                     __pnvCOMRAM:
   234                           	callstack 0
   235   00005F                     _ret:
   236                           	callstack 0
   237   00005F                     	ds	1
   238   000000                     _PORTE	set	3972
   239   000000                     _PORTD	set	3971
   240   000000                     _PORTC	set	3970
   241   000000                     _PORTB	set	3969
   242   000000                     _PORTA	set	3968
   243   000000                     _LATA	set	3977
   244   000000                     _TRISA	set	3986
   245   000000                     _TRISE	set	3990
   246   000000                     _TRISD	set	3989
   247   000000                     _TRISC	set	3988
   248   000000                     _TRISB	set	3987
   249   000000                     _LATE	set	3981
   250   000000                     _LATD	set	3980
   251   000000                     _LATC	set	3979
   252   000000                     _LATB	set	3978
   253                           
   254                           ; #config settings
   255                           
   256                           	psect	cinit
   257   001AFC                     __pcinit:
   258                           	callstack 0
   259   001AFC                     start_initialization:
   260                           	callstack 0
   261   001AFC                     __initialization:
   262                           	callstack 0
   263                           
   264                           ; Initialize objects allocated to COMRAM (46 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266   001AFC  0ECE               	movlw	low __pidataCOMRAM
   267   001AFE  6EF6               	movwf	tblptrl,c
   268   001B00  0E1A               	movlw	high __pidataCOMRAM
   269   001B02  6EF7               	movwf	tblptrh,c
   270   001B04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271   001B06  6EF8               	movwf	tblptru,c
   272   001B08  EE00  F031         	lfsr	0,__pdataCOMRAM
   273   001B0C  EE10 F02E          	lfsr	1,46
   274   001B10                     copy_data0:
   275   001B10  0009               	tblrd		*+
   276   001B12  CFF5 FFEE          	movff	tablat,postinc0
   277   001B16  50E5               	movf	postdec1,w,c
   278   001B18  50E1               	movf	fsr1l,w,c
   279   001B1A  E1FA               	bnz	copy_data0
   280                           
   281                           ; Clear objects allocated to COMRAM (1 bytes)
   282   001B1C  6A60               	clrf	__pbssCOMRAM& (0+255),c
   283   001B1E                     end_of_initialization:
   284                           	callstack 0
   285   001B1E                     __end_of__initialization:
   286                           	callstack 0
   287   001B1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288   001B20  6EF8               	movwf	tblptru,c
   289   001B22  0100               	movlb	0
   290   001B24  EF23  F008         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMRAM
   293   000060                     __pbssCOMRAM:
   294                           	callstack 0
   295   000060                     _counter:
   296                           	callstack 0
   297   000060                     	ds	1
   298                           
   299                           	psect	dataCOMRAM
   300   000031                     __pdataCOMRAM:
   301                           	callstack 0
   302   000031                     _port_registers:
   303                           	callstack 0
   304   000031                     	ds	10
   305   00003B                     _lat_registers:
   306                           	callstack 0
   307   00003B                     	ds	10
   308   000045                     _tris_registers:
   309                           	callstack 0
   310   000045                     	ds	10
   311   00004F                     _lcd_2:
   312                           	callstack 0
   313   00004F                     	ds	10
   314   000059                     _lcd_1:
   315                           	callstack 0
   316   000059                     	ds	6
   317                           
   318                           	psect	cstackCOMRAM
   319   000001                     __pcstackCOMRAM:
   320                           	callstack 0
   321   000001                     gpio_pin_direction_initialize@_pin_config:
   322                           	callstack 0
   323   000001                     gpio_pin_write_logic@_pin_config:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   000001                     	ds	2
   328   000003                     ??_gpio_pin_direction_initialize:
   329   000003                     gpio_pin_write_logic@logic:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x2
   333   000003                     	ds	1
   334   000004                     ??_gpio_pin_write_logic:
   335                           
   336                           ; 1 bytes @ 0x3
   337   000004                     	ds	5
   338   000009                     gpio_pin_direction_initialize@ret:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x8
   342   000009                     	ds	1
   343   00000A                     gpio_pin_write_logic@ret:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x9
   347   00000A                     	ds	1
   348   00000B                     gpio_pin_initialize@_pin_config:
   349                           	callstack 0
   350   00000B                     lcd_send_4bits@_lcd_4bits_config:
   351                           	callstack 0
   352   00000B                     lcd_4bits_send_enable_signal@_lcd_4bits_config:
   353                           	callstack 0
   354   00000B                     lcd_8bits_send_enable_signal@_lcd_8bits_config:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0xA
   358   00000B                     	ds	2
   359   00000D                     ??_gpio_pin_initialize:
   360   00000D                     lcd_send_4bits@data_command:
   361                           	callstack 0
   362   00000D                     lcd_4bits_send_enable_signal@ret:
   363                           	callstack 0
   364   00000D                     lcd_8bits_send_enable_signal@ret:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0xC
   368   00000D                     	ds	1
   369   00000E                     gpio_pin_initialize@ret:
   370                           	callstack 0
   371   00000E                     lcd_send_4bits@ret:
   372                           	callstack 0
   373   00000E                     ecu_lcd_8bits_send_command@_lcd_8bits_config:
   374                           	callstack 0
   375   00000E                     ecu_lcd_8bits_send_char_data@_lcd_8bits_config:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xD
   379   00000E                     	ds	1
   380   00000F                     ecu_lcd_4bits_send_command@_lcd_4bits_config:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0xE
   384   00000F                     	ds	1
   385   000010                     ecu_lcd_8bits_send_command@command:
   386                           	callstack 0
   387   000010                     ecu_lcd_8bits_send_char_data@data:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xF
   391   000010                     	ds	1
   392   000011                     ??_ecu_lcd_8bits_send_command:
   393   000011                     ??_ecu_lcd_8bits_send_char_data:
   394   000011                     ecu_lcd_4bits_send_command@command:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x10
   398   000011                     	ds	1
   399   000012                     ecu_lcd_4bits_send_command@ret:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x11
   403   000012                     	ds	1
   404   000013                     ecu_lcd_4bits_initialize@_lcd_4bits_config:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x12
   408   000013                     	ds	2
   409   000015                     ??_ecu_lcd_4bits_initialize:
   410   000015                     ecu_lcd_8bits_send_command@ret:
   411                           	callstack 0
   412   000015                     ecu_lcd_8bits_send_char_data@ret:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x14
   416   000015                     	ds	1
   417   000016                     ecu_lcd_8bits_send_command@counter:
   418                           	callstack 0
   419   000016                     ecu_lcd_8bits_send_char_data@counter:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x15
   423   000016                     	ds	1
   424   000017                     ecu_lcd_4bits_initialize@counter:
   425                           	callstack 0
   426   000017                     ecu_lcd_8bits_initialize@_lcd_8bits_config:
   427                           	callstack 0
   428   000017                     lcd_8bits_set_cursor@_lcd_8bits_config:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x16
   432   000017                     	ds	1
   433   000018                     ecu_lcd_4bits_initialize@ret:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x17
   437   000018                     	ds	1
   438   000019                     ??_ecu_lcd_8bits_initialize:
   439   000019                     lcd_8bits_set_cursor@row:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x18
   443   000019                     	ds	1
   444   00001A                     lcd_8bits_set_cursor@col:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x19
   448   00001A                     	ds	1
   449   00001B                     ??_lcd_8bits_set_cursor:
   450   00001B                     ecu_lcd_8bits_initialize@counter:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x1A
   454   00001B                     	ds	1
   455   00001C                     ecu_lcd_8bits_initialize@ret:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x1B
   459   00001C                     	ds	1
   460   00001D                     lcd_8bits_set_cursor@ret:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x1C
   464   00001D                     	ds	1
   465   00001E                     ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1D
   469   00001E                     	ds	2
   470   000020                     ecu_lcd_8bits_send_char_data_pos@row:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x1F
   474   000020                     	ds	1
   475   000021                     ecu_lcd_8bits_send_char_data_pos@col:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x20
   479   000021                     	ds	1
   480   000022                     ecu_lcd_8bits_send_char_data_pos@data:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x21
   484   000022                     	ds	1
   485   000023                     ecu_lcd_8bits_send_char_data_pos@ret:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x22
   489   000023                     	ds	1
   490   000024                     ecu_lcd_8bits_send_custom_char@_lcd_8bits_config:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x23
   494   000024                     	ds	2
   495   000026                     ecu_lcd_8bits_send_custom_char@row:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x25
   499   000026                     	ds	1
   500   000027                     ecu_lcd_8bits_send_custom_char@col:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x26
   504   000027                     	ds	1
   505   000028                     ecu_lcd_8bits_send_custom_char@_char:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x27
   509   000028                     	ds	2
   510   00002A                     ecu_lcd_8bits_send_custom_char@mem_pos:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x29
   514   00002A                     	ds	1
   515   00002B                     ??_ecu_lcd_8bits_send_custom_char:
   516                           
   517                           ; 1 bytes @ 0x2A
   518   00002B                     	ds	2
   519   00002D                     ecu_lcd_8bits_send_custom_char@ret:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x2C
   523   00002D                     	ds	1
   524   00002E                     ecu_lcd_8bits_send_custom_char@counter:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x2D
   528   00002E                     	ds	1
   529   00002F                     ??_main:
   530                           
   531                           ; 1 bytes @ 0x2E
   532   00002F                     	ds	2
   533                           
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 22 in file "application.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  2  279[None  ] int 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels required when called: 6
   559 ;; This function calls:
   560 ;;		_application_initialize
   561 ;;		_ecu_lcd_8bits_send_custom_char
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text0
   568   001046                     __ptext0:
   569                           	callstack 0
   570   001046                     _main:
   571                           	callstack 25
   572   001046                     
   573                           ;application.c: 24:     application_initialize();
   574   001046  ECA1  F00D         	call	_application_initialize	;wreg free
   575   00104A                     l2557:
   576                           
   577                           ;application.c: 46:     {;application.c: 94:         ret = ecu_lcd_8bits_send_custom_cha
      +                          r(&lcd_2, 1, 20, customchar1, 0);
   578   00104A  0E4F               	movlw	low _lcd_2
   579   00104C  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   580   00104E  0E00               	movlw	high _lcd_2
   581   001050  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   582   001052  0E01               	movlw	1
   583   001054  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   584   001056  0E14               	movlw	20
   585   001058  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   586   00105A  0E39               	movlw	low _customchar1
   587   00105C  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   588   00105E  0E10               	movlw	high _customchar1
   589   001060  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   590   001062  0E00               	movlw	0
   591   001064  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   592   001066  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   593   00106A  6E5F               	movwf	_ret^0,c
   594   00106C                     
   595                           ;application.c: 95:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   596   00106C  0E02               	movlw	2
   597   00106E  6E30               	movwf	(??_main+1)^0,c
   598   001070  0E45               	movlw	69
   599   001072  6E2F               	movwf	??_main^0,c
   600   001074  0EAA               	movlw	170
   601   001076                     u1537:
   602   001076  2EE8               	decfsz	wreg,f,c
   603   001078  D7FE               	bra	u1537
   604   00107A  2E2F               	decfsz	??_main^0,f,c
   605   00107C  D7FC               	bra	u1537
   606   00107E  2E30               	decfsz	(??_main+1)^0,f,c
   607   001080  D7FA               	bra	u1537
   608   001082                     
   609                           ;application.c: 96:         ret = ecu_lcd_8bits_send_custom_char(&lcd_2, 1, 20, customch
      +                          ar2, 0);
   610   001082  0E4F               	movlw	low _lcd_2
   611   001084  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   612   001086  0E00               	movlw	high _lcd_2
   613   001088  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   614   00108A  0E01               	movlw	1
   615   00108C  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   616   00108E  0E14               	movlw	20
   617   001090  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   618   001092  0E31               	movlw	low _customchar2
   619   001094  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   620   001096  0E10               	movlw	high _customchar2
   621   001098  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   622   00109A  0E00               	movlw	0
   623   00109C  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   624   00109E  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   625   0010A2  6E5F               	movwf	_ret^0,c
   626   0010A4                     
   627                           ;application.c: 97:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   628   0010A4  0E02               	movlw	2
   629   0010A6  6E30               	movwf	(??_main+1)^0,c
   630   0010A8  0E45               	movlw	69
   631   0010AA  6E2F               	movwf	??_main^0,c
   632   0010AC  0EAA               	movlw	170
   633   0010AE                     u1547:
   634   0010AE  2EE8               	decfsz	wreg,f,c
   635   0010B0  D7FE               	bra	u1547
   636   0010B2  2E2F               	decfsz	??_main^0,f,c
   637   0010B4  D7FC               	bra	u1547
   638   0010B6  2E30               	decfsz	(??_main+1)^0,f,c
   639   0010B8  D7FA               	bra	u1547
   640   0010BA                     
   641                           ;application.c: 98:         ret = ecu_lcd_8bits_send_custom_char(&lcd_2, 1, 20, customch
      +                          ar3, 0);
   642   0010BA  0E4F               	movlw	low _lcd_2
   643   0010BC  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   644   0010BE  0E00               	movlw	high _lcd_2
   645   0010C0  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   646   0010C2  0E01               	movlw	1
   647   0010C4  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   648   0010C6  0E14               	movlw	20
   649   0010C8  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   650   0010CA  0E29               	movlw	low _customchar3
   651   0010CC  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   652   0010CE  0E10               	movlw	high _customchar3
   653   0010D0  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   654   0010D2  0E00               	movlw	0
   655   0010D4  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   656   0010D6  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   657   0010DA  6E5F               	movwf	_ret^0,c
   658   0010DC                     
   659                           ;application.c: 99:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   660   0010DC  0E02               	movlw	2
   661   0010DE  6E30               	movwf	(??_main+1)^0,c
   662   0010E0  0E45               	movlw	69
   663   0010E2  6E2F               	movwf	??_main^0,c
   664   0010E4  0EAA               	movlw	170
   665   0010E6                     u1557:
   666   0010E6  2EE8               	decfsz	wreg,f,c
   667   0010E8  D7FE               	bra	u1557
   668   0010EA  2E2F               	decfsz	??_main^0,f,c
   669   0010EC  D7FC               	bra	u1557
   670   0010EE  2E30               	decfsz	(??_main+1)^0,f,c
   671   0010F0  D7FA               	bra	u1557
   672   0010F2                     
   673                           ;application.c: 100:         ret = ecu_lcd_8bits_send_custom_char(&lcd_2, 1, 20, customc
      +                          har4, 0);
   674   0010F2  0E4F               	movlw	low _lcd_2
   675   0010F4  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   676   0010F6  0E00               	movlw	high _lcd_2
   677   0010F8  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   678   0010FA  0E01               	movlw	1
   679   0010FC  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   680   0010FE  0E14               	movlw	20
   681   001100  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   682   001102  0E21               	movlw	low _customchar4
   683   001104  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   684   001106  0E10               	movlw	high _customchar4
   685   001108  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   686   00110A  0E00               	movlw	0
   687   00110C  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   688   00110E  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   689   001112  6E5F               	movwf	_ret^0,c
   690   001114                     
   691                           ;application.c: 101:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   692   001114  0E02               	movlw	2
   693   001116  6E30               	movwf	(??_main+1)^0,c
   694   001118  0E45               	movlw	69
   695   00111A  6E2F               	movwf	??_main^0,c
   696   00111C  0EAA               	movlw	170
   697   00111E                     u1567:
   698   00111E  2EE8               	decfsz	wreg,f,c
   699   001120  D7FE               	bra	u1567
   700   001122  2E2F               	decfsz	??_main^0,f,c
   701   001124  D7FC               	bra	u1567
   702   001126  2E30               	decfsz	(??_main+1)^0,f,c
   703   001128  D7FA               	bra	u1567
   704   00112A                     
   705                           ;application.c: 102:         ret = ecu_lcd_8bits_send_custom_char(&lcd_2, 1, 20, customc
      +                          har5, 0);
   706   00112A  0E4F               	movlw	low _lcd_2
   707   00112C  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   708   00112E  0E00               	movlw	high _lcd_2
   709   001130  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   710   001132  0E01               	movlw	1
   711   001134  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   712   001136  0E14               	movlw	20
   713   001138  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   714   00113A  0E19               	movlw	low _customchar5
   715   00113C  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   716   00113E  0E10               	movlw	high _customchar5
   717   001140  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   718   001142  0E00               	movlw	0
   719   001144  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   720   001146  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   721   00114A  6E5F               	movwf	_ret^0,c
   722   00114C                     
   723                           ;application.c: 103:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   724   00114C  0E02               	movlw	2
   725   00114E  6E30               	movwf	(??_main+1)^0,c
   726   001150  0E45               	movlw	69
   727   001152  6E2F               	movwf	??_main^0,c
   728   001154  0EAA               	movlw	170
   729   001156                     u1577:
   730   001156  2EE8               	decfsz	wreg,f,c
   731   001158  D7FE               	bra	u1577
   732   00115A  2E2F               	decfsz	??_main^0,f,c
   733   00115C  D7FC               	bra	u1577
   734   00115E  2E30               	decfsz	(??_main+1)^0,f,c
   735   001160  D7FA               	bra	u1577
   736   001162                     
   737                           ;application.c: 104:         ret = ecu_lcd_8bits_send_custom_char(&lcd_2, 1, 20, customc
      +                          har6, 0);
   738   001162  0E4F               	movlw	low _lcd_2
   739   001164  6E24               	movwf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,c
   740   001166  0E00               	movlw	high _lcd_2
   741   001168  6E25               	movwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,c
   742   00116A  0E01               	movlw	1
   743   00116C  6E26               	movwf	ecu_lcd_8bits_send_custom_char@row^0,c
   744   00116E  0E14               	movlw	20
   745   001170  6E27               	movwf	ecu_lcd_8bits_send_custom_char@col^0,c
   746   001172  0E11               	movlw	low _customchar6
   747   001174  6E28               	movwf	ecu_lcd_8bits_send_custom_char@_char^0,c
   748   001176  0E10               	movlw	high _customchar6
   749   001178  6E29               	movwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,c
   750   00117A  0E00               	movlw	0
   751   00117C  6E2A               	movwf	ecu_lcd_8bits_send_custom_char@mem_pos^0,c
   752   00117E  EC8B  F00B         	call	_ecu_lcd_8bits_send_custom_char	;wreg free
   753   001182  6E5F               	movwf	_ret^0,c
   754   001184                     
   755                           ;application.c: 105:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   756   001184  0E02               	movlw	2
   757   001186  6E30               	movwf	(??_main+1)^0,c
   758   001188  0E45               	movlw	69
   759   00118A  6E2F               	movwf	??_main^0,c
   760   00118C  0EAA               	movlw	170
   761   00118E                     u1587:
   762   00118E  2EE8               	decfsz	wreg,f,c
   763   001190  D7FE               	bra	u1587
   764   001192  2E2F               	decfsz	??_main^0,f,c
   765   001194  D7FC               	bra	u1587
   766   001196  2E30               	decfsz	(??_main+1)^0,f,c
   767   001198  D7FA               	bra	u1587
   768   00119A  EF25  F008         	goto	l2557
   769   00119E  EF00  F000         	goto	start
   770   0011A2                     __end_of_main:
   771                           	callstack 0
   772                           
   773 ;; *************** function _ecu_lcd_8bits_send_custom_char *****************
   774 ;; Defined at:
   775 ;;		line 331 in file "ECU_Layer/LCD/ecu_lcd.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  _lcd_8bits_c    2   35[COMRAM] PTR const struct .
   778 ;;		 -> lcd_2(10), 
   779 ;;  row             1   37[COMRAM] unsigned char 
   780 ;;  col             1   38[COMRAM] unsigned char 
   781 ;;  _char           2   39[COMRAM] PTR const unsigned char 
   782 ;;		 -> customchar6(8), customchar5(8), customchar4(8), customchar3(8), 
   783 ;;		 -> customchar2(8), customchar1(8), 
   784 ;;  mem_pos         1   41[COMRAM] unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  counter         1   45[COMRAM] unsigned char 
   787 ;;  ret             1   44[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      unsigned char 
   790 ;; Registers used:
   791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   797 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;Total ram usage:       11 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 5
   804 ;; This function calls:
   805 ;;		_ecu_lcd_8bits_send_char_data
   806 ;;		_ecu_lcd_8bits_send_char_data_pos
   807 ;;		_ecu_lcd_8bits_send_command
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text1
   814   001716                     __ptext1:
   815                           	callstack 0
   816   001716                     _ecu_lcd_8bits_send_custom_char:
   817                           	callstack 25
   818   001716                     
   819                           ;ECU_Layer/LCD/ecu_lcd.c: 335:     uint8 counter = 0;
   820   001716  0E00               	movlw	0
   821   001718  6E2E               	movwf	ecu_lcd_8bits_send_custom_char@counter^0,c
   822   00171A                     
   823                           ;ECU_Layer/LCD/ecu_lcd.c: 337:     if(((void*)0) == _lcd_8bits_config || ((void*)0) == _
      +                          char)
   824   00171A  5024               	movf	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config^0,w,c
   825   00171C  1025               	iorwf	(ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1)^0,w,c
   826   00171E  B4D8               	btfsc	status,2,c
   827   001720  EF94  F00B         	goto	u1161
   828   001724  EF96  F00B         	goto	u1160
   829   001728                     u1161:
   830   001728  EF9F  F00B         	goto	l2305
   831   00172C                     u1160:
   832   00172C  5028               	movf	ecu_lcd_8bits_send_custom_char@_char^0,w,c
   833   00172E  1029               	iorwf	(ecu_lcd_8bits_send_custom_char@_char+1)^0,w,c
   834   001730  A4D8               	btfss	status,2,c
   835   001732  EF9D  F00B         	goto	u1171
   836   001736  EF9F  F00B         	goto	u1170
   837   00173A                     u1171:
   838   00173A  EFA3  F00B         	goto	l2307
   839   00173E                     u1170:
   840   00173E                     l2305:
   841                           
   842                           ;ECU_Layer/LCD/ecu_lcd.c: 338:     {;ECU_Layer/LCD/ecu_lcd.c: 339:         ret = (Std_Re
      +                          turnType)0x00;
   843   00173E  0E00               	movlw	0
   844   001740  6E2D               	movwf	ecu_lcd_8bits_send_custom_char@ret^0,c
   845                           
   846                           ;ECU_Layer/LCD/ecu_lcd.c: 340:     }
   847   001742  EFD9  F00B         	goto	l2323
   848   001746                     l2307:
   849   001746  C024  F00E         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_
      +                          8bits_config
   850   00174A  C025  F00F         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lc
      +                          d_8bits_config+1
   851   00174E  502A               	movf	ecu_lcd_8bits_send_custom_char@mem_pos^0,w,c
   852   001750  0D08               	mullw	8
   853   001752  50F3               	movf	243,w,c
   854   001754  0F40               	addlw	64
   855   001756  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
   856   001758  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
   857   00175C                     
   858                           ;ECU_Layer/LCD/ecu_lcd.c: 346:         for(counter = 0; counter < 8; counter++)
   859   00175C  0E00               	movlw	0
   860   00175E  6E2E               	movwf	ecu_lcd_8bits_send_custom_char@counter^0,c
   861   001760                     l2315:
   862   001760  C024  F00E         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config,ecu_lcd_8bits_send_char_data@_lc
      +                          d_8bits_config
   863   001764  C025  F00F         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1,ecu_lcd_8bits_send_char_data@_
      +                          lcd_8bits_config+1
   864   001768  502E               	movf	ecu_lcd_8bits_send_custom_char@counter^0,w,c
   865   00176A  2428               	addwf	ecu_lcd_8bits_send_custom_char@_char^0,w,c
   866   00176C  6E2B               	movwf	??_ecu_lcd_8bits_send_custom_char^0,c
   867   00176E  0E00               	movlw	0
   868   001770  2029               	addwfc	(ecu_lcd_8bits_send_custom_char@_char+1)^0,w,c
   869   001772  6E2C               	movwf	(??_ecu_lcd_8bits_send_custom_char+1)^0,c
   870   001774  C02B  FFF6         	movff	??_ecu_lcd_8bits_send_custom_char,tblptrl
   871   001778  C02C  FFF7         	movff	??_ecu_lcd_8bits_send_custom_char+1,tblptrh
   872   00177C                     	if	0	;tblptru may be non-zero
   873   00177C                     	endif
   874   00177C                     	if	0	;tblptru may be non-zero
   875   00177C                     	endif
   876   00177C  0008               	tblrd		*
   877   00177E  CFF5 F010          	movff	tablat,ecu_lcd_8bits_send_char_data@data
   878   001782  ECDB  F00B         	call	_ecu_lcd_8bits_send_char_data	;wreg free
   879   001786                     
   880                           ;ECU_Layer/LCD/ecu_lcd.c: 349:         }
   881   001786  2A2E               	incf	ecu_lcd_8bits_send_custom_char@counter^0,f,c
   882   001788  0E07               	movlw	7
   883   00178A  642E               	cpfsgt	ecu_lcd_8bits_send_custom_char@counter^0,c
   884   00178C  EFCA  F00B         	goto	u1181
   885   001790  EFCC  F00B         	goto	u1180
   886   001794                     u1181:
   887   001794  EFB0  F00B         	goto	l2315
   888   001798                     u1180:
   889   001798                     
   890                           ;ECU_Layer/LCD/ecu_lcd.c: 351:         ret = ecu_lcd_8bits_send_char_data_pos(_lcd_8bits
      +                          _config, row, col, mem_pos);
   891   001798  C024  F01E         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config,ecu_lcd_8bits_send_char_data_pos
      +                          @_lcd_8bits_config
   892   00179C  C025  F01F         	movff	ecu_lcd_8bits_send_custom_char@_lcd_8bits_config+1,ecu_lcd_8bits_send_char_data_p
      +                          os@_lcd_8bits_config+1
   893   0017A0  C026  F020         	movff	ecu_lcd_8bits_send_custom_char@row,ecu_lcd_8bits_send_char_data_pos@row
   894   0017A4  C027  F021         	movff	ecu_lcd_8bits_send_custom_char@col,ecu_lcd_8bits_send_char_data_pos@col
   895   0017A8  C02A  F022         	movff	ecu_lcd_8bits_send_custom_char@mem_pos,ecu_lcd_8bits_send_char_data_pos@data
   896   0017AC  EC10  F00D         	call	_ecu_lcd_8bits_send_char_data_pos	;wreg free
   897   0017B0  6E2D               	movwf	ecu_lcd_8bits_send_custom_char@ret^0,c
   898   0017B2                     l2323:
   899                           
   900                           ;ECU_Layer/LCD/ecu_lcd.c: 354:     return ret;
   901   0017B2  502D               	movf	ecu_lcd_8bits_send_custom_char@ret^0,w,c
   902   0017B4  0012               	return		;funcret
   903   0017B6                     __end_of_ecu_lcd_8bits_send_custom_char:
   904                           	callstack 0
   905                           
   906 ;; *************** function _ecu_lcd_8bits_send_char_data_pos *****************
   907 ;; Defined at:
   908 ;;		line 274 in file "ECU_Layer/LCD/ecu_lcd.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  _lcd_8bits_c    2   29[COMRAM] PTR const struct .
   911 ;;		 -> lcd_2(10), 
   912 ;;  row             1   31[COMRAM] unsigned char 
   913 ;;  col             1   32[COMRAM] unsigned char 
   914 ;;  data            1   33[COMRAM] unsigned char 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  ret             1   34[COMRAM] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      unsigned char 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        6 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 4
   933 ;; This function calls:
   934 ;;		_ecu_lcd_8bits_send_char_data
   935 ;;		_lcd_8bits_set_cursor
   936 ;; This function is called by:
   937 ;;		_ecu_lcd_8bits_send_custom_char
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text2
   942   001A20                     __ptext2:
   943                           	callstack 0
   944   001A20                     _ecu_lcd_8bits_send_char_data_pos:
   945                           	callstack 25
   946   001A20                     
   947                           ;ECU_Layer/LCD/ecu_lcd.c: 278:     if(((void*)0) == _lcd_8bits_config)
   948   001A20  501E               	movf	ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config^0,w,c
   949   001A22  101F               	iorwf	(ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config+1)^0,w,c
   950   001A24  A4D8               	btfss	status,2,c
   951   001A26  EF17  F00D         	goto	u1151
   952   001A2A  EF19  F00D         	goto	u1150
   953   001A2E                     u1151:
   954   001A2E  EF1D  F00D         	goto	l2291
   955   001A32                     u1150:
   956   001A32                     
   957                           ;ECU_Layer/LCD/ecu_lcd.c: 279:     {;ECU_Layer/LCD/ecu_lcd.c: 280:         ret = (Std_Re
      +                          turnType)0x00;
   958   001A32  0E00               	movlw	0
   959   001A34  6E23               	movwf	ecu_lcd_8bits_send_char_data_pos@ret^0,c
   960                           
   961                           ;ECU_Layer/LCD/ecu_lcd.c: 281:     }
   962   001A36  EF31  F00D         	goto	l2293
   963   001A3A                     l2291:
   964                           
   965                           ;ECU_Layer/LCD/ecu_lcd.c: 284:     {;ECU_Layer/LCD/ecu_lcd.c: 285:         ret = lcd_8bi
      +                          ts_set_cursor(_lcd_8bits_config, row, col);
   966   001A3A  C01E  F017         	movff	ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config,lcd_8bits_set_cursor@_lcd_8bit
      +                          s_config
   967   001A3E  C01F  F018         	movff	ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config+1,lcd_8bits_set_cursor@_lcd_8b
      +                          its_config+1
   968   001A42  C020  F019         	movff	ecu_lcd_8bits_send_char_data_pos@row,lcd_8bits_set_cursor@row
   969   001A46  C021  F01A         	movff	ecu_lcd_8bits_send_char_data_pos@col,lcd_8bits_set_cursor@col
   970   001A4A  EC35  F00B         	call	_lcd_8bits_set_cursor	;wreg free
   971   001A4E  6E23               	movwf	ecu_lcd_8bits_send_char_data_pos@ret^0,c
   972                           
   973                           ;ECU_Layer/LCD/ecu_lcd.c: 286:         ret = ecu_lcd_8bits_send_char_data(_lcd_8bits_con
      +                          fig, data);
   974   001A50  C01E  F00E         	movff	ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config,ecu_lcd_8bits_send_char_data@_
      +                          lcd_8bits_config
   975   001A54  C01F  F00F         	movff	ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config+1,ecu_lcd_8bits_send_char_data
      +                          @_lcd_8bits_config+1
   976   001A58  C022  F010         	movff	ecu_lcd_8bits_send_char_data_pos@data,ecu_lcd_8bits_send_char_data@data
   977   001A5C  ECDB  F00B         	call	_ecu_lcd_8bits_send_char_data	;wreg free
   978   001A60  6E23               	movwf	ecu_lcd_8bits_send_char_data_pos@ret^0,c
   979   001A62                     l2293:
   980                           
   981                           ;ECU_Layer/LCD/ecu_lcd.c: 289:     return ret;
   982   001A62  5023               	movf	ecu_lcd_8bits_send_char_data_pos@ret^0,w,c
   983   001A64  0012               	return		;funcret
   984   001A66                     __end_of_ecu_lcd_8bits_send_char_data_pos:
   985                           	callstack 0
   986                           
   987 ;; *************** function _lcd_8bits_set_cursor *****************
   988 ;; Defined at:
   989 ;;		line 475 in file "ECU_Layer/LCD/ecu_lcd.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  _lcd_8bits_c    2   22[COMRAM] PTR const struct .
   992 ;;		 -> lcd_2(10), 
   993 ;;  row             1   24[COMRAM] unsigned char 
   994 ;;  col             1   25[COMRAM] unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  ret             1   28[COMRAM] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        7 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 3
  1013 ;; This function calls:
  1014 ;;		_ecu_lcd_8bits_send_command
  1015 ;; This function is called by:
  1016 ;;		_ecu_lcd_8bits_send_char_data_pos
  1017 ;;		_ecu_lcd_8bits_send_string_pos
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text3
  1022   00166A                     __ptext3:
  1023                           	callstack 0
  1024   00166A                     _lcd_8bits_set_cursor:
  1025                           	callstack 25
  1026   00166A                     
  1027                           ;ECU_Layer/LCD/ecu_lcd.c: 478:     col--;
  1028   00166A  061A               	decf	lcd_8bits_set_cursor@col^0,f,c
  1029                           
  1030                           ;ECU_Layer/LCD/ecu_lcd.c: 480:     switch(row)
  1031   00166C  EF6C  F00B         	goto	l2257
  1032   001670                     l2247:
  1033                           
  1034                           ;ECU_Layer/LCD/ecu_lcd.c: 483:             ret = ecu_lcd_8bits_send_command(_lcd_8bits_c
      +                          onfig, (0x80 + col));
  1035   001670  C017  F00E         	movff	lcd_8bits_set_cursor@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_conf
      +                          ig
  1036   001674  C018  F00F         	movff	lcd_8bits_set_cursor@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bits_co
      +                          nfig+1
  1037   001678  501A               	movf	lcd_8bits_set_cursor@col^0,w,c
  1038   00167A  0F80               	addlw	128
  1039   00167C  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1040   00167E  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1041   001682  6E1D               	movwf	lcd_8bits_set_cursor@ret^0,c
  1042                           
  1043                           ;ECU_Layer/LCD/ecu_lcd.c: 484:             break;
  1044   001684  EF89  F00B         	goto	l2259
  1045   001688                     l2249:
  1046                           
  1047                           ;ECU_Layer/LCD/ecu_lcd.c: 487:             ret = ecu_lcd_8bits_send_command(_lcd_8bits_c
      +                          onfig, (0xC0 + col));
  1048   001688  C017  F00E         	movff	lcd_8bits_set_cursor@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_conf
      +                          ig
  1049   00168C  C018  F00F         	movff	lcd_8bits_set_cursor@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bits_co
      +                          nfig+1
  1050   001690  501A               	movf	lcd_8bits_set_cursor@col^0,w,c
  1051   001692  0FC0               	addlw	192
  1052   001694  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1053   001696  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1054   00169A  6E1D               	movwf	lcd_8bits_set_cursor@ret^0,c
  1055                           
  1056                           ;ECU_Layer/LCD/ecu_lcd.c: 488:             break;
  1057   00169C  EF89  F00B         	goto	l2259
  1058   0016A0                     l2251:
  1059                           
  1060                           ;ECU_Layer/LCD/ecu_lcd.c: 491:             ret = ecu_lcd_8bits_send_command(_lcd_8bits_c
      +                          onfig, (0x94 + col));
  1061   0016A0  C017  F00E         	movff	lcd_8bits_set_cursor@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_conf
      +                          ig
  1062   0016A4  C018  F00F         	movff	lcd_8bits_set_cursor@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bits_co
      +                          nfig+1
  1063   0016A8  501A               	movf	lcd_8bits_set_cursor@col^0,w,c
  1064   0016AA  0F94               	addlw	148
  1065   0016AC  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1066   0016AE  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1067   0016B2  6E1D               	movwf	lcd_8bits_set_cursor@ret^0,c
  1068                           
  1069                           ;ECU_Layer/LCD/ecu_lcd.c: 492:             break;
  1070   0016B4  EF89  F00B         	goto	l2259
  1071   0016B8                     l2253:
  1072                           
  1073                           ;ECU_Layer/LCD/ecu_lcd.c: 495:             ret = ecu_lcd_8bits_send_command(_lcd_8bits_c
      +                          onfig, (0xD4 + col));
  1074   0016B8  C017  F00E         	movff	lcd_8bits_set_cursor@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_conf
      +                          ig
  1075   0016BC  C018  F00F         	movff	lcd_8bits_set_cursor@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bits_co
      +                          nfig+1
  1076   0016C0  501A               	movf	lcd_8bits_set_cursor@col^0,w,c
  1077   0016C2  0FD4               	addlw	212
  1078   0016C4  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1079   0016C6  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1080   0016CA  6E1D               	movwf	lcd_8bits_set_cursor@ret^0,c
  1081                           
  1082                           ;ECU_Layer/LCD/ecu_lcd.c: 496:             break;
  1083   0016CC  EF89  F00B         	goto	l2259
  1084   0016D0                     l2255:
  1085                           
  1086                           ;ECU_Layer/LCD/ecu_lcd.c: 499:             ret = (Std_ReturnType)0x00;
  1087   0016D0  0E00               	movlw	0
  1088   0016D2  6E1D               	movwf	lcd_8bits_set_cursor@ret^0,c
  1089                           
  1090                           ;ECU_Layer/LCD/ecu_lcd.c: 500:     }
  1091   0016D4  EF89  F00B         	goto	l2259
  1092   0016D8                     l2257:
  1093   0016D8  5019               	movf	lcd_8bits_set_cursor@row^0,w,c
  1094   0016DA  6E1B               	movwf	??_lcd_8bits_set_cursor^0,c
  1095   0016DC  6A1C               	clrf	(??_lcd_8bits_set_cursor+1)^0,c
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104   0016DE  501C               	movf	(??_lcd_8bits_set_cursor+1)^0,w,c
  1105   0016E0  0A00               	xorlw	0	; case 0
  1106   0016E2  B4D8               	btfsc	status,2,c
  1107   0016E4  EF76  F00B         	goto	l2667
  1108   0016E8  EF68  F00B         	goto	l2255
  1109   0016EC                     l2667:
  1110                           
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 4, Range of values is 1 to 4
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte           13     7 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117   0016EC  501B               	movf	??_lcd_8bits_set_cursor^0,w,c
  1118   0016EE  0A01               	xorlw	1	; case 1
  1119   0016F0  B4D8               	btfsc	status,2,c
  1120   0016F2  EF38  F00B         	goto	l2247
  1121   0016F6  0A03               	xorlw	3	; case 2
  1122   0016F8  B4D8               	btfsc	status,2,c
  1123   0016FA  EF44  F00B         	goto	l2249
  1124   0016FE  0A01               	xorlw	1	; case 3
  1125   001700  B4D8               	btfsc	status,2,c
  1126   001702  EF50  F00B         	goto	l2251
  1127   001706  0A07               	xorlw	7	; case 4
  1128   001708  B4D8               	btfsc	status,2,c
  1129   00170A  EF5C  F00B         	goto	l2253
  1130   00170E  EF68  F00B         	goto	l2255
  1131   001712                     l2259:
  1132                           
  1133                           ;ECU_Layer/LCD/ecu_lcd.c: 502:     return ret;
  1134   001712  501D               	movf	lcd_8bits_set_cursor@ret^0,w,c
  1135   001714  0012               	return		;funcret
  1136   001716                     __end_of_lcd_8bits_set_cursor:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _ecu_lcd_8bits_send_char_data *****************
  1140 ;; Defined at:
  1141 ;;		line 249 in file "ECU_Layer/LCD/ecu_lcd.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  _lcd_8bits_c    2   13[COMRAM] PTR const struct .
  1144 ;;		 -> lcd_2(10), 
  1145 ;;  data            1   15[COMRAM] unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  counter         1   21[COMRAM] unsigned char 
  1148 ;;  ret             1   20[COMRAM] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      unsigned char 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        9 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 2
  1165 ;; This function calls:
  1166 ;;		_gpio_pin_write_logic
  1167 ;;		_lcd_8bits_send_enable_signal
  1168 ;; This function is called by:
  1169 ;;		_ecu_lcd_8bits_send_char_data_pos
  1170 ;;		_ecu_lcd_8bits_send_custom_char
  1171 ;;		_ecu_lcd_8bits_send_string
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text4
  1176   0017B6                     __ptext4:
  1177                           	callstack 0
  1178   0017B6                     _ecu_lcd_8bits_send_char_data:
  1179                           	callstack 26
  1180   0017B6                     
  1181                           ;ECU_Layer/LCD/ecu_lcd.c: 252:     uint8 counter = 0;
  1182   0017B6  0E00               	movlw	0
  1183   0017B8  6E16               	movwf	ecu_lcd_8bits_send_char_data@counter^0,c
  1184   0017BA                     
  1185                           ;ECU_Layer/LCD/ecu_lcd.c: 254:     if(((void*)0) == _lcd_8bits_config)
  1186   0017BA  500E               	movf	ecu_lcd_8bits_send_char_data@_lcd_8bits_config^0,w,c
  1187   0017BC  100F               	iorwf	(ecu_lcd_8bits_send_char_data@_lcd_8bits_config+1)^0,w,c
  1188   0017BE  A4D8               	btfss	status,2,c
  1189   0017C0  EFE4  F00B         	goto	u1111
  1190   0017C4  EFE6  F00B         	goto	u1110
  1191   0017C8                     u1111:
  1192   0017C8  EFEA  F00B         	goto	l2223
  1193   0017CC                     u1110:
  1194   0017CC                     
  1195                           ;ECU_Layer/LCD/ecu_lcd.c: 255:     {;ECU_Layer/LCD/ecu_lcd.c: 256:         ret = (Std_Re
      +                          turnType)0x00;
  1196   0017CC  0E00               	movlw	0
  1197   0017CE  6E15               	movwf	ecu_lcd_8bits_send_char_data@ret^0,c
  1198                           
  1199                           ;ECU_Layer/LCD/ecu_lcd.c: 257:     }
  1200   0017D0  EF21  F00C         	goto	l2239
  1201   0017D4                     l2223:
  1202   0017D4  C00E  F001         	movff	ecu_lcd_8bits_send_char_data@_lcd_8bits_config,gpio_pin_write_logic@_pin_config
  1203   0017D8  C00F  F002         	movff	ecu_lcd_8bits_send_char_data@_lcd_8bits_config+1,gpio_pin_write_logic@_pin_config
      +                          +1
  1204   0017DC  0E01               	movlw	1
  1205   0017DE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1206   0017E0  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1207   0017E4                     
  1208                           ;ECU_Layer/LCD/ecu_lcd.c: 263:         for(counter = 0; counter < 8; counter++)
  1209   0017E4  0E00               	movlw	0
  1210   0017E6  6E16               	movwf	ecu_lcd_8bits_send_char_data@counter^0,c
  1211   0017E8                     l2231:
  1212   0017E8  5016               	movf	ecu_lcd_8bits_send_char_data@counter^0,w,c
  1213   0017EA  240E               	addwf	ecu_lcd_8bits_send_char_data@_lcd_8bits_config^0,w,c
  1214   0017EC  6E11               	movwf	??_ecu_lcd_8bits_send_char_data^0,c
  1215   0017EE  0E00               	movlw	0
  1216   0017F0  200F               	addwfc	(ecu_lcd_8bits_send_char_data@_lcd_8bits_config+1)^0,w,c
  1217   0017F2  6E12               	movwf	(??_ecu_lcd_8bits_send_char_data+1)^0,c
  1218   0017F4  0E02               	movlw	2
  1219   0017F6  2411               	addwf	??_ecu_lcd_8bits_send_char_data^0,w,c
  1220   0017F8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1221   0017FA  0E00               	movlw	0
  1222   0017FC  2012               	addwfc	(??_ecu_lcd_8bits_send_char_data+1)^0,w,c
  1223   0017FE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1224   001800  C016  F013         	movff	ecu_lcd_8bits_send_char_data@counter,??_ecu_lcd_8bits_send_char_data+2
  1225   001804  C010  F014         	movff	ecu_lcd_8bits_send_char_data@data,??_ecu_lcd_8bits_send_char_data+3
  1226   001808  2A13               	incf	(??_ecu_lcd_8bits_send_char_data+2)^0,f,c
  1227   00180A  EF09  F00C         	goto	u1124
  1228   00180E                     u1125:
  1229   00180E  90D8               	bcf	status,0,c
  1230   001810  3214               	rrcf	(??_ecu_lcd_8bits_send_char_data+3)^0,f,c
  1231   001812                     u1124:
  1232   001812  2E13               	decfsz	(??_ecu_lcd_8bits_send_char_data+2)^0,f,c
  1233   001814  EF07  F00C         	goto	u1125
  1234   001818  5014               	movf	(??_ecu_lcd_8bits_send_char_data+3)^0,w,c
  1235   00181A  0B01               	andlw	1
  1236   00181C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1237   00181E  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1238   001822                     
  1239                           ;ECU_Layer/LCD/ecu_lcd.c: 266:         }
  1240   001822  2A16               	incf	ecu_lcd_8bits_send_char_data@counter^0,f,c
  1241   001824  0E07               	movlw	7
  1242   001826  6416               	cpfsgt	ecu_lcd_8bits_send_char_data@counter^0,c
  1243   001828  EF18  F00C         	goto	u1131
  1244   00182C  EF1A  F00C         	goto	u1130
  1245   001830                     u1131:
  1246   001830  EFF4  F00B         	goto	l2231
  1247   001834                     u1130:
  1248   001834                     
  1249                           ;ECU_Layer/LCD/ecu_lcd.c: 268:         ret = lcd_8bits_send_enable_signal(_lcd_8bits_con
      +                          fig);
  1250   001834  C00E  F00B         	movff	ecu_lcd_8bits_send_char_data@_lcd_8bits_config,lcd_8bits_send_enable_signal@_lcd_
      +                          8bits_config
  1251   001838  C00F  F00C         	movff	ecu_lcd_8bits_send_char_data@_lcd_8bits_config+1,lcd_8bits_send_enable_signal@_lc
      +                          d_8bits_config+1
  1252   00183C  EC33  F00D         	call	_lcd_8bits_send_enable_signal	;wreg free
  1253   001840  6E15               	movwf	ecu_lcd_8bits_send_char_data@ret^0,c
  1254   001842                     l2239:
  1255                           
  1256                           ;ECU_Layer/LCD/ecu_lcd.c: 271:     return ret;
  1257   001842  5015               	movf	ecu_lcd_8bits_send_char_data@ret^0,w,c
  1258   001844  0012               	return		;funcret
  1259   001846                     __end_of_ecu_lcd_8bits_send_char_data:
  1260                           	callstack 0
  1261                           
  1262 ;; *************** function _application_initialize *****************
  1263 ;; Defined at:
  1264 ;;		line 111 in file "application.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 5
  1285 ;; This function calls:
  1286 ;;		_ecu_layer_initialize
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text5
  1293   001B42                     __ptext5:
  1294                           	callstack 0
  1295   001B42                     _application_initialize:
  1296                           	callstack 25
  1297   001B42                     
  1298                           ;application.c: 113:     ecu_layer_initialize();
  1299   001B42  EC94  F00D         	call	_ecu_layer_initialize	;wreg free
  1300   001B46  0012               	return		;funcret
  1301   001B48                     __end_of_application_initialize:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _ecu_layer_initialize *****************
  1305 ;; Defined at:
  1306 ;;		line 94 in file "ECU_Layer/ecu_layer_init.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  ret             1    0        unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 4
  1327 ;; This function calls:
  1328 ;;		_ecu_lcd_4bits_initialize
  1329 ;;		_ecu_lcd_8bits_initialize
  1330 ;; This function is called by:
  1331 ;;		_application_initialize
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text6
  1336   001B28                     __ptext6:
  1337                           	callstack 0
  1338   001B28                     _ecu_layer_initialize:
  1339                           	callstack 25
  1340   001B28  0E59               	movlw	low _lcd_1
  1341   001B2A  6E13               	movwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,c
  1342   001B2C  0E00               	movlw	high _lcd_1
  1343   001B2E  6E14               	movwf	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,c
  1344   001B30  EC09  F00A         	call	_ecu_lcd_4bits_initialize	;wreg free
  1345   001B34  0E4F               	movlw	low _lcd_2
  1346   001B36  6E17               	movwf	ecu_lcd_8bits_initialize@_lcd_8bits_config^0,c
  1347   001B38  0E00               	movlw	high _lcd_2
  1348   001B3A  6E18               	movwf	(ecu_lcd_8bits_initialize@_lcd_8bits_config+1)^0,c
  1349   001B3C  EC73  F009         	call	_ecu_lcd_8bits_initialize	;wreg free
  1350   001B40  0012               	return		;funcret
  1351   001B42                     __end_of_ecu_layer_initialize:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _ecu_lcd_8bits_initialize *****************
  1355 ;; Defined at:
  1356 ;;		line 186 in file "ECU_Layer/LCD/ecu_lcd.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  _lcd_8bits_c    2   22[COMRAM] PTR const struct .
  1359 ;;		 -> lcd_2(10), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  ret             1   27[COMRAM] unsigned char 
  1362 ;;  counter         1   26[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      unsigned char 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 3
  1379 ;; This function calls:
  1380 ;;		_ecu_lcd_8bits_send_command
  1381 ;;		_gpio_pin_initialize
  1382 ;; This function is called by:
  1383 ;;		_ecu_layer_initialize
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text7
  1388   0012E6                     __ptext7:
  1389                           	callstack 0
  1390   0012E6                     _ecu_lcd_8bits_initialize:
  1391                           	callstack 25
  1392   0012E6                     
  1393                           ;ECU_Layer/LCD/ecu_lcd.c: 189:     uint8 counter = 0;
  1394   0012E6  0E00               	movlw	0
  1395   0012E8  6E1B               	movwf	ecu_lcd_8bits_initialize@counter^0,c
  1396   0012EA                     
  1397                           ;ECU_Layer/LCD/ecu_lcd.c: 191:     if(((void*)0) == _lcd_8bits_config)
  1398   0012EA  5017               	movf	ecu_lcd_8bits_initialize@_lcd_8bits_config^0,w,c
  1399   0012EC  1018               	iorwf	(ecu_lcd_8bits_initialize@_lcd_8bits_config+1)^0,w,c
  1400   0012EE  A4D8               	btfss	status,2,c
  1401   0012F0  EF7C  F009         	goto	u1091
  1402   0012F4  EF7E  F009         	goto	u1090
  1403   0012F8                     u1091:
  1404   0012F8  EF82  F009         	goto	l2177
  1405   0012FC                     u1090:
  1406   0012FC                     
  1407                           ;ECU_Layer/LCD/ecu_lcd.c: 192:     {;ECU_Layer/LCD/ecu_lcd.c: 193:         ret = (Std_Re
      +                          turnType)0x00;
  1408   0012FC  0E00               	movlw	0
  1409   0012FE  6E1C               	movwf	ecu_lcd_8bits_initialize@ret^0,c
  1410                           
  1411                           ;ECU_Layer/LCD/ecu_lcd.c: 194:     }
  1412   001300  EF07  F00A         	goto	l2213
  1413   001304                     l2177:
  1414                           
  1415                           ;ECU_Layer/LCD/ecu_lcd.c: 197:     {;ECU_Layer/LCD/ecu_lcd.c: 198:         ret = gpio_pi
      +                          n_initialize(&_lcd_8bits_config->lcd_rs);
  1416   001304  C017  F00B         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,gpio_pin_initialize@_pin_config
  1417   001308  C018  F00C         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,gpio_pin_initialize@_pin_config+1
  1418   00130C  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1419   001310  6E1C               	movwf	ecu_lcd_8bits_initialize@ret^0,c
  1420                           
  1421                           ;ECU_Layer/LCD/ecu_lcd.c: 199:         ret = gpio_pin_initialize(&_lcd_8bits_config->lcd
      +                          _en);
  1422   001312  0E01               	movlw	1
  1423   001314  2417               	addwf	ecu_lcd_8bits_initialize@_lcd_8bits_config^0,w,c
  1424   001316  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1425   001318  0E00               	movlw	0
  1426   00131A  2018               	addwfc	(ecu_lcd_8bits_initialize@_lcd_8bits_config+1)^0,w,c
  1427   00131C  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1428   00131E  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1429   001322  6E1C               	movwf	ecu_lcd_8bits_initialize@ret^0,c
  1430   001324                     
  1431                           ;ECU_Layer/LCD/ecu_lcd.c: 201:         for(counter = 0; counter < 8; counter++)
  1432   001324  0E00               	movlw	0
  1433   001326  6E1B               	movwf	ecu_lcd_8bits_initialize@counter^0,c
  1434   001328                     l2185:
  1435   001328  501B               	movf	ecu_lcd_8bits_initialize@counter^0,w,c
  1436   00132A  2417               	addwf	ecu_lcd_8bits_initialize@_lcd_8bits_config^0,w,c
  1437   00132C  6E19               	movwf	??_ecu_lcd_8bits_initialize^0,c
  1438   00132E  0E00               	movlw	0
  1439   001330  2018               	addwfc	(ecu_lcd_8bits_initialize@_lcd_8bits_config+1)^0,w,c
  1440   001332  6E1A               	movwf	(??_ecu_lcd_8bits_initialize+1)^0,c
  1441   001334  0E02               	movlw	2
  1442   001336  2419               	addwf	??_ecu_lcd_8bits_initialize^0,w,c
  1443   001338  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1444   00133A  0E00               	movlw	0
  1445   00133C  201A               	addwfc	(??_ecu_lcd_8bits_initialize+1)^0,w,c
  1446   00133E  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1447   001340  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1448   001344                     
  1449                           ;ECU_Layer/LCD/ecu_lcd.c: 204:         }
  1450   001344  2A1B               	incf	ecu_lcd_8bits_initialize@counter^0,f,c
  1451   001346  0E07               	movlw	7
  1452   001348  641B               	cpfsgt	ecu_lcd_8bits_initialize@counter^0,c
  1453   00134A  EFA9  F009         	goto	u1101
  1454   00134E  EFAB  F009         	goto	u1100
  1455   001352                     u1101:
  1456   001352  EF94  F009         	goto	l2185
  1457   001356                     u1100:
  1458   001356                     
  1459                           ;ECU_Layer/LCD/ecu_lcd.c: 206:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1460   001356  0E1A               	movlw	26
  1461   001358  6E19               	movwf	??_ecu_lcd_8bits_initialize^0,c
  1462   00135A  0EF8               	movlw	248
  1463   00135C                     u1597:
  1464   00135C  2EE8               	decfsz	wreg,f,c
  1465   00135E  D7FE               	bra	u1597
  1466   001360  2E19               	decfsz	??_ecu_lcd_8bits_initialize^0,f,c
  1467   001362  D7FC               	bra	u1597
  1468   001364  D000               	nop2	
  1469   001366  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1470   00136A  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1471   00136E  0E38               	movlw	56
  1472   001370  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1473   001372  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1474   001376                     
  1475                           ;ECU_Layer/LCD/ecu_lcd.c: 208:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1476   001376  0E07               	movlw	7
  1477   001378  6E19               	movwf	??_ecu_lcd_8bits_initialize^0,c
  1478   00137A  0E7D               	movlw	125
  1479   00137C                     u1607:
  1480   00137C  2EE8               	decfsz	wreg,f,c
  1481   00137E  D7FE               	bra	u1607
  1482   001380  2E19               	decfsz	??_ecu_lcd_8bits_initialize^0,f,c
  1483   001382  D7FC               	bra	u1607
  1484   001384  F000               	nop	
  1485   001386  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1486   00138A  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1487   00138E  0E38               	movlw	56
  1488   001390  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1489   001392  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1490   001396                     
  1491                           ;ECU_Layer/LCD/ecu_lcd.c: 210:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
  1492   001396  0E32               	movlw	50
  1493   001398                     u1617:
  1494   001398  2EE8               	decfsz	wreg,f,c
  1495   00139A  D7FE               	bra	u1617
  1496   00139C  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1497   0013A0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1498   0013A4  0E38               	movlw	56
  1499   0013A6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1500   0013A8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1501   0013AC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1502   0013B0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1503   0013B4  0E01               	movlw	1
  1504   0013B6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1505   0013B8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1506   0013BC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1507   0013C0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1508   0013C4  0E02               	movlw	2
  1509   0013C6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1510   0013C8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1511   0013CC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1512   0013D0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1513   0013D4  0E06               	movlw	6
  1514   0013D6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1515   0013D8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1516   0013DC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1517   0013E0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1518   0013E4  0E0C               	movlw	12
  1519   0013E6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1520   0013E8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1521   0013EC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1522   0013F0  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1523   0013F4  0E38               	movlw	56
  1524   0013F6  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1525   0013F8  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1526   0013FC                     
  1527                           ;ECU_Layer/LCD/ecu_lcd.c: 218:         ret = ecu_lcd_8bits_send_command(_lcd_8bits_confi
      +                          g, 0x80);
  1528   0013FC  C017  F00E         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config,ecu_lcd_8bits_send_command@_lcd_8bits_
      +                          config
  1529   001400  C018  F00F         	movff	ecu_lcd_8bits_initialize@_lcd_8bits_config+1,ecu_lcd_8bits_send_command@_lcd_8bit
      +                          s_config+1
  1530   001404  0E80               	movlw	128
  1531   001406  6E10               	movwf	ecu_lcd_8bits_send_command@command^0,c
  1532   001408  EC23  F00C         	call	_ecu_lcd_8bits_send_command	;wreg free
  1533   00140C  6E1C               	movwf	ecu_lcd_8bits_initialize@ret^0,c
  1534   00140E                     l2213:
  1535                           
  1536                           ;ECU_Layer/LCD/ecu_lcd.c: 221:     return ret;
  1537   00140E  501C               	movf	ecu_lcd_8bits_initialize@ret^0,w,c
  1538   001410  0012               	return		;funcret
  1539   001412                     __end_of_ecu_lcd_8bits_initialize:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _ecu_lcd_8bits_send_command *****************
  1543 ;; Defined at:
  1544 ;;		line 224 in file "ECU_Layer/LCD/ecu_lcd.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  _lcd_8bits_c    2   13[COMRAM] PTR const struct .
  1547 ;;		 -> lcd_2(10), 
  1548 ;;  command         1   15[COMRAM] unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  counter         1   21[COMRAM] unsigned char 
  1551 ;;  ret             1   20[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      unsigned char 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        9 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 2
  1568 ;; This function calls:
  1569 ;;		_gpio_pin_write_logic
  1570 ;;		_lcd_8bits_send_enable_signal
  1571 ;; This function is called by:
  1572 ;;		_ecu_lcd_8bits_initialize
  1573 ;;		_ecu_lcd_8bits_send_custom_char
  1574 ;;		_lcd_8bits_set_cursor
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text8
  1579   001846                     __ptext8:
  1580                           	callstack 0
  1581   001846                     _ecu_lcd_8bits_send_command:
  1582                           	callstack 27
  1583   001846                     
  1584                           ;ECU_Layer/LCD/ecu_lcd.c: 227:     uint8 counter = 0;
  1585   001846  0E00               	movlw	0
  1586   001848  6E16               	movwf	ecu_lcd_8bits_send_command@counter^0,c
  1587   00184A                     
  1588                           ;ECU_Layer/LCD/ecu_lcd.c: 229:     if(((void*)0) == _lcd_8bits_config)
  1589   00184A  500E               	movf	ecu_lcd_8bits_send_command@_lcd_8bits_config^0,w,c
  1590   00184C  100F               	iorwf	(ecu_lcd_8bits_send_command@_lcd_8bits_config+1)^0,w,c
  1591   00184E  A4D8               	btfss	status,2,c
  1592   001850  EF2C  F00C         	goto	u1041
  1593   001854  EF2E  F00C         	goto	u1040
  1594   001858                     u1041:
  1595   001858  EF32  F00C         	goto	l2105
  1596   00185C                     u1040:
  1597   00185C                     
  1598                           ;ECU_Layer/LCD/ecu_lcd.c: 230:     {;ECU_Layer/LCD/ecu_lcd.c: 231:         ret = (Std_Re
      +                          turnType)0x00;
  1599   00185C  0E00               	movlw	0
  1600   00185E  6E15               	movwf	ecu_lcd_8bits_send_command@ret^0,c
  1601                           
  1602                           ;ECU_Layer/LCD/ecu_lcd.c: 232:     }
  1603   001860  EF69  F00C         	goto	l2121
  1604   001864                     l2105:
  1605   001864  C00E  F001         	movff	ecu_lcd_8bits_send_command@_lcd_8bits_config,gpio_pin_write_logic@_pin_config
  1606   001868  C00F  F002         	movff	ecu_lcd_8bits_send_command@_lcd_8bits_config+1,gpio_pin_write_logic@_pin_config+1
  1607   00186C  0E00               	movlw	0
  1608   00186E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1609   001870  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1610   001874                     
  1611                           ;ECU_Layer/LCD/ecu_lcd.c: 238:         for(counter = 0; counter < 8; counter++)
  1612   001874  0E00               	movlw	0
  1613   001876  6E16               	movwf	ecu_lcd_8bits_send_command@counter^0,c
  1614   001878                     l2113:
  1615   001878  5016               	movf	ecu_lcd_8bits_send_command@counter^0,w,c
  1616   00187A  240E               	addwf	ecu_lcd_8bits_send_command@_lcd_8bits_config^0,w,c
  1617   00187C  6E11               	movwf	??_ecu_lcd_8bits_send_command^0,c
  1618   00187E  0E00               	movlw	0
  1619   001880  200F               	addwfc	(ecu_lcd_8bits_send_command@_lcd_8bits_config+1)^0,w,c
  1620   001882  6E12               	movwf	(??_ecu_lcd_8bits_send_command+1)^0,c
  1621   001884  0E02               	movlw	2
  1622   001886  2411               	addwf	??_ecu_lcd_8bits_send_command^0,w,c
  1623   001888  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1624   00188A  0E00               	movlw	0
  1625   00188C  2012               	addwfc	(??_ecu_lcd_8bits_send_command+1)^0,w,c
  1626   00188E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1627   001890  C016  F013         	movff	ecu_lcd_8bits_send_command@counter,??_ecu_lcd_8bits_send_command+2
  1628   001894  C010  F014         	movff	ecu_lcd_8bits_send_command@command,??_ecu_lcd_8bits_send_command+3
  1629   001898  2A13               	incf	(??_ecu_lcd_8bits_send_command+2)^0,f,c
  1630   00189A  EF51  F00C         	goto	u1054
  1631   00189E                     u1055:
  1632   00189E  90D8               	bcf	status,0,c
  1633   0018A0  3214               	rrcf	(??_ecu_lcd_8bits_send_command+3)^0,f,c
  1634   0018A2                     u1054:
  1635   0018A2  2E13               	decfsz	(??_ecu_lcd_8bits_send_command+2)^0,f,c
  1636   0018A4  EF4F  F00C         	goto	u1055
  1637   0018A8  5014               	movf	(??_ecu_lcd_8bits_send_command+3)^0,w,c
  1638   0018AA  0B01               	andlw	1
  1639   0018AC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1640   0018AE  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1641   0018B2                     
  1642                           ;ECU_Layer/LCD/ecu_lcd.c: 241:         }
  1643   0018B2  2A16               	incf	ecu_lcd_8bits_send_command@counter^0,f,c
  1644   0018B4  0E07               	movlw	7
  1645   0018B6  6416               	cpfsgt	ecu_lcd_8bits_send_command@counter^0,c
  1646   0018B8  EF60  F00C         	goto	u1061
  1647   0018BC  EF62  F00C         	goto	u1060
  1648   0018C0                     u1061:
  1649   0018C0  EF3C  F00C         	goto	l2113
  1650   0018C4                     u1060:
  1651   0018C4                     
  1652                           ;ECU_Layer/LCD/ecu_lcd.c: 243:         ret = lcd_8bits_send_enable_signal(_lcd_8bits_con
      +                          fig);
  1653   0018C4  C00E  F00B         	movff	ecu_lcd_8bits_send_command@_lcd_8bits_config,lcd_8bits_send_enable_signal@_lcd_8b
      +                          its_config
  1654   0018C8  C00F  F00C         	movff	ecu_lcd_8bits_send_command@_lcd_8bits_config+1,lcd_8bits_send_enable_signal@_lcd_
      +                          8bits_config+1
  1655   0018CC  EC33  F00D         	call	_lcd_8bits_send_enable_signal	;wreg free
  1656   0018D0  6E15               	movwf	ecu_lcd_8bits_send_command@ret^0,c
  1657   0018D2                     l2121:
  1658                           
  1659                           ;ECU_Layer/LCD/ecu_lcd.c: 246:     return ret;
  1660   0018D2  5015               	movf	ecu_lcd_8bits_send_command@ret^0,w,c
  1661   0018D4  0012               	return		;funcret
  1662   0018D6                     __end_of_ecu_lcd_8bits_send_command:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _lcd_8bits_send_enable_signal *****************
  1666 ;; Defined at:
  1667 ;;		line 464 in file "ECU_Layer/LCD/ecu_lcd.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  _lcd_8bits_c    2   10[COMRAM] PTR const struct .
  1670 ;;		 -> lcd_2(10), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  ret             1   12[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      unsigned char 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        3 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 1
  1689 ;; This function calls:
  1690 ;;		_gpio_pin_write_logic
  1691 ;; This function is called by:
  1692 ;;		_ecu_lcd_8bits_send_command
  1693 ;;		_ecu_lcd_8bits_send_char_data
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text9
  1698   001A66                     __ptext9:
  1699                           	callstack 0
  1700   001A66                     _lcd_8bits_send_enable_signal:
  1701                           	callstack 27
  1702   001A66  0E01               	movlw	1
  1703   001A68  240B               	addwf	lcd_8bits_send_enable_signal@_lcd_8bits_config^0,w,c
  1704   001A6A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1705   001A6C  0E00               	movlw	0
  1706   001A6E  200C               	addwfc	(lcd_8bits_send_enable_signal@_lcd_8bits_config+1)^0,w,c
  1707   001A70  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1708   001A72  0E01               	movlw	1
  1709   001A74  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1710   001A76  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1711   001A7A                     
  1712                           ;ECU_Layer/LCD/ecu_lcd.c: 469:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1713   001A7A  D000               	nop2		;2 cycle nop
  1714   001A7C  D000               	nop2		;2 cycle nop
  1715   001A7E  F000               	nop	
  1716   001A80                     
  1717                           ;ECU_Layer/LCD/ecu_lcd.c: 470:     ret = gpio_pin_write_logic(&_lcd_8bits_config->lcd_en
      +                          , GPIO_LOW);
  1718   001A80  0E01               	movlw	1
  1719   001A82  240B               	addwf	lcd_8bits_send_enable_signal@_lcd_8bits_config^0,w,c
  1720   001A84  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1721   001A86  0E00               	movlw	0
  1722   001A88  200C               	addwfc	(lcd_8bits_send_enable_signal@_lcd_8bits_config+1)^0,w,c
  1723   001A8A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1724   001A8C  0E00               	movlw	0
  1725   001A8E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1726   001A90  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1727   001A94  6E0D               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1728                           
  1729                           ;ECU_Layer/LCD/ecu_lcd.c: 472:     return ret;
  1730   001A96  500D               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  1731   001A98  0012               	return		;funcret
  1732   001A9A                     __end_of_lcd_8bits_send_enable_signal:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _ecu_lcd_4bits_initialize *****************
  1736 ;; Defined at:
  1737 ;;		line 18 in file "ECU_Layer/LCD/ecu_lcd.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  _lcd_4bits_c    2   18[COMRAM] PTR const struct .
  1740 ;;		 -> lcd_1(6), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  ret             1   23[COMRAM] unsigned char 
  1743 ;;  counter         1   22[COMRAM] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      unsigned char 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:        6 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 3
  1760 ;; This function calls:
  1761 ;;		_ecu_lcd_4bits_send_command
  1762 ;;		_gpio_pin_initialize
  1763 ;; This function is called by:
  1764 ;;		_ecu_layer_initialize
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text10
  1769   001412                     __ptext10:
  1770                           	callstack 0
  1771   001412                     _ecu_lcd_4bits_initialize:
  1772                           	callstack 25
  1773   001412                     
  1774                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     uint8 counter = 0;
  1775   001412  0E00               	movlw	0
  1776   001414  6E17               	movwf	ecu_lcd_4bits_initialize@counter^0,c
  1777   001416                     
  1778                           ;ECU_Layer/LCD/ecu_lcd.c: 23:     if(((void*)0) == _lcd_4bits_config)
  1779   001416  5013               	movf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  1780   001418  1014               	iorwf	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  1781   00141A  A4D8               	btfss	status,2,c
  1782   00141C  EF12  F00A         	goto	u1071
  1783   001420  EF14  F00A         	goto	u1070
  1784   001424                     u1071:
  1785   001424  EF18  F00A         	goto	l2131
  1786   001428                     u1070:
  1787   001428                     
  1788                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     {;ECU_Layer/LCD/ecu_lcd.c: 25:         ret = (Std_Retu
      +                          rnType)0x00;
  1789   001428  0E00               	movlw	0
  1790   00142A  6E18               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  1791                           
  1792                           ;ECU_Layer/LCD/ecu_lcd.c: 26:     }
  1793   00142C  EF9D  F00A         	goto	l2167
  1794   001430                     l2131:
  1795                           
  1796                           ;ECU_Layer/LCD/ecu_lcd.c: 29:     {;ECU_Layer/LCD/ecu_lcd.c: 30:         ret = gpio_pin_
      +                          initialize(&_lcd_4bits_config->lcd_rs);
  1797   001430  C013  F00B         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,gpio_pin_initialize@_pin_config
  1798   001434  C014  F00C         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,gpio_pin_initialize@_pin_config+1
  1799   001438  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1800   00143C  6E18               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  1801                           
  1802                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         ret = gpio_pin_initialize(&_lcd_4bits_config->lcd_
      +                          en);
  1803   00143E  0E01               	movlw	1
  1804   001440  2413               	addwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  1805   001442  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1806   001444  0E00               	movlw	0
  1807   001446  2014               	addwfc	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  1808   001448  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1809   00144A  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1810   00144E  6E18               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  1811   001450                     
  1812                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         for(counter = 0; counter < 4; counter++)
  1813   001450  0E00               	movlw	0
  1814   001452  6E17               	movwf	ecu_lcd_4bits_initialize@counter^0,c
  1815   001454                     l2139:
  1816   001454  5017               	movf	ecu_lcd_4bits_initialize@counter^0,w,c
  1817   001456  2413               	addwf	ecu_lcd_4bits_initialize@_lcd_4bits_config^0,w,c
  1818   001458  6E15               	movwf	??_ecu_lcd_4bits_initialize^0,c
  1819   00145A  0E00               	movlw	0
  1820   00145C  2014               	addwfc	(ecu_lcd_4bits_initialize@_lcd_4bits_config+1)^0,w,c
  1821   00145E  6E16               	movwf	(??_ecu_lcd_4bits_initialize+1)^0,c
  1822   001460  0E02               	movlw	2
  1823   001462  2415               	addwf	??_ecu_lcd_4bits_initialize^0,w,c
  1824   001464  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  1825   001466  0E00               	movlw	0
  1826   001468  2016               	addwfc	(??_ecu_lcd_4bits_initialize+1)^0,w,c
  1827   00146A  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1828   00146C  ECA6  F00C         	call	_gpio_pin_initialize	;wreg free
  1829   001470                     
  1830                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         }
  1831   001470  2A17               	incf	ecu_lcd_4bits_initialize@counter^0,f,c
  1832   001472  0E03               	movlw	3
  1833   001474  6417               	cpfsgt	ecu_lcd_4bits_initialize@counter^0,c
  1834   001476  EF3F  F00A         	goto	u1081
  1835   00147A  EF41  F00A         	goto	u1080
  1836   00147E                     u1081:
  1837   00147E  EF2A  F00A         	goto	l2139
  1838   001482                     u1080:
  1839   001482                     
  1840                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1841   001482  0E1A               	movlw	26
  1842   001484  6E15               	movwf	??_ecu_lcd_4bits_initialize^0,c
  1843   001486  0EF8               	movlw	248
  1844   001488                     u1627:
  1845   001488  2EE8               	decfsz	wreg,f,c
  1846   00148A  D7FE               	bra	u1627
  1847   00148C  2E15               	decfsz	??_ecu_lcd_4bits_initialize^0,f,c
  1848   00148E  D7FC               	bra	u1627
  1849   001490  D000               	nop2	
  1850   001492  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1851   001496  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1852   00149A  0E38               	movlw	56
  1853   00149C  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1854   00149E  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1855   0014A2                     
  1856                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1857   0014A2  0E07               	movlw	7
  1858   0014A4  6E15               	movwf	??_ecu_lcd_4bits_initialize^0,c
  1859   0014A6  0E7D               	movlw	125
  1860   0014A8                     u1637:
  1861   0014A8  2EE8               	decfsz	wreg,f,c
  1862   0014AA  D7FE               	bra	u1637
  1863   0014AC  2E15               	decfsz	??_ecu_lcd_4bits_initialize^0,f,c
  1864   0014AE  D7FC               	bra	u1637
  1865   0014B0  F000               	nop	
  1866   0014B2  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1867   0014B6  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1868   0014BA  0E38               	movlw	56
  1869   0014BC  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1870   0014BE  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1871   0014C2                     
  1872                           ;ECU_Layer/LCD/ecu_lcd.c: 42:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1873   0014C2  0E32               	movlw	50
  1874   0014C4                     u1647:
  1875   0014C4  2EE8               	decfsz	wreg,f,c
  1876   0014C6  D7FE               	bra	u1647
  1877   0014C8  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1878   0014CC  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1879   0014D0  0E38               	movlw	56
  1880   0014D2  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1881   0014D4  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1882   0014D8  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1883   0014DC  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1884   0014E0  0E01               	movlw	1
  1885   0014E2  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1886   0014E4  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1887   0014E8  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1888   0014EC  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1889   0014F0  0E02               	movlw	2
  1890   0014F2  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1891   0014F4  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1892   0014F8  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1893   0014FC  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1894   001500  0E06               	movlw	6
  1895   001502  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1896   001504  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1897   001508  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1898   00150C  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1899   001510  0E0C               	movlw	12
  1900   001512  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1901   001514  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1902   001518  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1903   00151C  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1904   001520  0E28               	movlw	40
  1905   001522  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1906   001524  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1907   001528                     
  1908                           ;ECU_Layer/LCD/ecu_lcd.c: 50:         ret = ecu_lcd_4bits_send_command(_lcd_4bits_config
      +                          , 0x80);
  1909   001528  C013  F00F         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config,ecu_lcd_4bits_send_command@_lcd_4bits_
      +                          config
  1910   00152C  C014  F010         	movff	ecu_lcd_4bits_initialize@_lcd_4bits_config+1,ecu_lcd_4bits_send_command@_lcd_4bit
      +                          s_config+1
  1911   001530  0E80               	movlw	128
  1912   001532  6E11               	movwf	ecu_lcd_4bits_send_command@command^0,c
  1913   001534  EC6B  F00C         	call	_ecu_lcd_4bits_send_command	;wreg free
  1914   001538  6E18               	movwf	ecu_lcd_4bits_initialize@ret^0,c
  1915   00153A                     l2167:
  1916                           
  1917                           ;ECU_Layer/LCD/ecu_lcd.c: 53:     return ret;
  1918   00153A  5018               	movf	ecu_lcd_4bits_initialize@ret^0,w,c
  1919   00153C  0012               	return		;funcret
  1920   00153E                     __end_of_ecu_lcd_4bits_initialize:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _gpio_pin_initialize *****************
  1924 ;; Defined at:
  1925 ;;		line 161 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  1928 ;;		 -> lcd_2.lcd_data_pins(8), lcd_2(10), lcd_1.lcd_data_pins(4), lcd_1(6), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  ret             1   13[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 1
  1947 ;; This function calls:
  1948 ;;		_gpio_pin_direction_initialize
  1949 ;;		_gpio_pin_write_logic
  1950 ;; This function is called by:
  1951 ;;		_ecu_lcd_4bits_initialize
  1952 ;;		_ecu_lcd_8bits_initialize
  1953 ;;		_ecu_7_segment_initialize
  1954 ;;		_ecu_dc_motor_initialize
  1955 ;;		_ecu_dc_motor_stop
  1956 ;;		_ecu_keypad_initialize
  1957 ;;		_ecu_led_initialize
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text11
  1962   00194C                     __ptext11:
  1963                           	callstack 0
  1964   00194C                     _gpio_pin_initialize:
  1965                           	callstack 26
  1966   00194C                     
  1967                           ;MCAL_Layer/GPIO/mcal_gpio.c: 165:     if(((void*)0) == _pin_config || _pin_config->pin 
      +                          > 7)
  1968   00194C  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1969   00194E  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  1970   001950  B4D8               	btfsc	status,2,c
  1971   001952  EFAD  F00C         	goto	u1011
  1972   001956  EFAF  F00C         	goto	u1010
  1973   00195A                     u1011:
  1974   00195A  EFC0  F00C         	goto	l2079
  1975   00195E                     u1010:
  1976   00195E  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1977   001962  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1978   001966  30DF               	rrcf	223,w,c
  1979   001968  32E8               	rrcf	wreg,f,c
  1980   00196A  32E8               	rrcf	wreg,f,c
  1981   00196C  0B07               	andlw	7
  1982   00196E  6E0D               	movwf	??_gpio_pin_initialize^0,c
  1983   001970  0E07               	movlw	7
  1984   001972  640D               	cpfsgt	??_gpio_pin_initialize^0,c
  1985   001974  EFBE  F00C         	goto	u1021
  1986   001978  EFC0  F00C         	goto	u1020
  1987   00197C                     u1021:
  1988   00197C  EFC4  F00C         	goto	l2081
  1989   001980                     u1020:
  1990   001980                     l2079:
  1991                           
  1992                           ;MCAL_Layer/GPIO/mcal_gpio.c: 166:     {;MCAL_Layer/GPIO/mcal_gpio.c: 167:         ret =
      +                           (Std_ReturnType)0x00;
  1993   001980  0E00               	movlw	0
  1994   001982  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  1995                           
  1996                           ;MCAL_Layer/GPIO/mcal_gpio.c: 168:     }
  1997   001984  EFDA  F00C         	goto	l2083
  1998   001988                     l2081:
  1999                           
  2000                           ;MCAL_Layer/GPIO/mcal_gpio.c: 171:     {;MCAL_Layer/GPIO/mcal_gpio.c: 172:         ret =
      +                           gpio_pin_direction_initialize(_pin_config);
  2001   001988  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  2002   00198C  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  2003   001990  ECD1  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2004   001994  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  2005                           
  2006                           ;MCAL_Layer/GPIO/mcal_gpio.c: 173:         ret = gpio_pin_write_logic(_pin_config, _pin_
      +                          config->logic);
  2007   001996  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2008   00199A  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  2009   00199E  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  2010   0019A2  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  2011   0019A6  0E00               	movlw	0
  2012   0019A8  BEDF               	btfsc	indf2,7,c
  2013   0019AA  0E01               	movlw	1
  2014   0019AC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2015   0019AE  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2016   0019B2  6E0E               	movwf	gpio_pin_initialize@ret^0,c
  2017   0019B4                     l2083:
  2018                           
  2019                           ;MCAL_Layer/GPIO/mcal_gpio.c: 176:     return ret;
  2020   0019B4  500E               	movf	gpio_pin_initialize@ret^0,w,c
  2021   0019B6  0012               	return		;funcret
  2022   0019B8                     __end_of_gpio_pin_initialize:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _gpio_pin_direction_initialize *****************
  2026 ;; Defined at:
  2027 ;;		line 25 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2030 ;;		 -> lcd_2.lcd_data_pins(8), lcd_2(10), lcd_1.lcd_data_pins(4), lcd_1(6), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  ret             1    8[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      unsigned char 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;Total ram usage:        9 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_gpio_pin_initialize
  2052 ;;		_ecu_button_initialize
  2053 ;;		_ecu_keypad_initialize
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text12
  2058   0011A2                     __ptext12:
  2059                           	callstack 0
  2060   0011A2                     _gpio_pin_direction_initialize:
  2061                           	callstack 26
  2062   0011A2                     
  2063                           ;MCAL_Layer/GPIO/mcal_gpio.c: 25: Std_ReturnType gpio_pin_direction_initialize(const pin
      +                          _config_t* _pin_config);MCAL_Layer/GPIO/mcal_gpio.c: 26: {;MCAL_Layer/GPIO/mcal_gpio.c: 
      +                          27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2064   0011A2  0E01               	movlw	1
  2065   0011A4  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  2066   0011A6                     
  2067                           ;MCAL_Layer/GPIO/mcal_gpio.c: 29:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  2068   0011A6  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2069   0011A8  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  2070   0011AA  B4D8               	btfsc	status,2,c
  2071   0011AC  EFDA  F008         	goto	u951
  2072   0011B0  EFDC  F008         	goto	u950
  2073   0011B4                     u951:
  2074   0011B4  EFED  F008         	goto	l2023
  2075   0011B8                     u950:
  2076   0011B8  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2077   0011BC  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2078   0011C0  30DF               	rrcf	223,w,c
  2079   0011C2  32E8               	rrcf	wreg,f,c
  2080   0011C4  32E8               	rrcf	wreg,f,c
  2081   0011C6  0B07               	andlw	7
  2082   0011C8  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  2083   0011CA  0E07               	movlw	7
  2084   0011CC  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2085   0011CE  EFEB  F008         	goto	u961
  2086   0011D2  EFED  F008         	goto	u960
  2087   0011D6                     u961:
  2088   0011D6  EF50  F009         	goto	l2031
  2089   0011DA                     u960:
  2090   0011DA                     l2023:
  2091                           
  2092                           ;MCAL_Layer/GPIO/mcal_gpio.c: 30:     {;MCAL_Layer/GPIO/mcal_gpio.c: 31:         ret = (
      +                          Std_ReturnType)0x00;
  2093   0011DA  0E00               	movlw	0
  2094   0011DC  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  2095                           
  2096                           ;MCAL_Layer/GPIO/mcal_gpio.c: 32:     }
  2097   0011DE  EF71  F009         	goto	l2033
  2098   0011E2                     l2025:
  2099                           
  2100                           ;MCAL_Layer/GPIO/mcal_gpio.c: 39:                 (*tris_registers[_pin_config->port] &=
      +                           ~((Std_ReturnType)1 << _pin_config->pin));
  2101   0011E2  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2102   0011E6  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2103   0011EA  30DF               	rrcf	223,w,c
  2104   0011EC  32E8               	rrcf	wreg,f,c
  2105   0011EE  32E8               	rrcf	wreg,f,c
  2106   0011F0  0B07               	andlw	7
  2107   0011F2  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  2108   0011F4  0E01               	movlw	1
  2109   0011F6  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2110   0011F8  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  2111   0011FA  EF01  F009         	goto	u974
  2112   0011FE                     u975:
  2113   0011FE  90D8               	bcf	status,0,c
  2114   001200  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2115   001202                     u974:
  2116   001202  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2117   001204  EFFF  F008         	goto	u975
  2118   001208  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2119   00120A  0AFF               	xorlw	255
  2120   00120C  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2121   00120E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2122   001212  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2123   001216  50DF               	movf	223,w,c
  2124   001218  0B07               	andlw	7
  2125   00121A  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  2126   00121C  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  2127   00121E  0D02               	mullw	2
  2128   001220  0E45               	movlw	low _tris_registers
  2129   001222  24F3               	addwf	243,w,c
  2130   001224  6ED9               	movwf	fsr2l,c
  2131   001226  0E00               	movlw	high _tris_registers
  2132   001228  20F4               	addwfc	prodh,w,c
  2133   00122A  6EDA               	movwf	fsr2h,c
  2134   00122C  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  2135   001230  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  2136   001234  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  2137   001238  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  2138   00123C  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2139   00123E  16DF               	andwf	indf2,f,c
  2140                           
  2141                           ;MCAL_Layer/GPIO/mcal_gpio.c: 40:                 break;
  2142   001240  EF71  F009         	goto	l2033
  2143   001244                     l2027:
  2144                           
  2145                           ;MCAL_Layer/GPIO/mcal_gpio.c: 43:                 (*tris_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  2146   001244  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2147   001248  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2148   00124C  30DF               	rrcf	223,w,c
  2149   00124E  32E8               	rrcf	wreg,f,c
  2150   001250  32E8               	rrcf	wreg,f,c
  2151   001252  0B07               	andlw	7
  2152   001254  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  2153   001256  0E01               	movlw	1
  2154   001258  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2155   00125A  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  2156   00125C  EF32  F009         	goto	u984
  2157   001260                     u985:
  2158   001260  90D8               	bcf	status,0,c
  2159   001262  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2160   001264                     u984:
  2161   001264  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2162   001266  EF30  F009         	goto	u985
  2163   00126A  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2164   00126E  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2165   001272  50DF               	movf	223,w,c
  2166   001274  0B07               	andlw	7
  2167   001276  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2168   001278  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2169   00127A  0D02               	mullw	2
  2170   00127C  0E45               	movlw	low _tris_registers
  2171   00127E  24F3               	addwf	243,w,c
  2172   001280  6ED9               	movwf	fsr2l,c
  2173   001282  0E00               	movlw	high _tris_registers
  2174   001284  20F4               	addwfc	prodh,w,c
  2175   001286  6EDA               	movwf	fsr2h,c
  2176   001288  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2177   00128C  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2178   001290  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2179   001294  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2180   001298  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2181   00129A  12DF               	iorwf	indf2,f,c
  2182                           
  2183                           ;MCAL_Layer/GPIO/mcal_gpio.c: 44:                 break;
  2184   00129C  EF71  F009         	goto	l2033
  2185   0012A0                     l2031:
  2186   0012A0  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  2187   0012A4  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  2188   0012A8  BCDF               	btfsc	indf2,6,c
  2189   0012AA  EF59  F009         	goto	u991
  2190   0012AE  EF5C  F009         	goto	u990
  2191   0012B2                     u991:
  2192   0012B2  0E01               	movlw	1
  2193   0012B4  EF5D  F009         	goto	u1000
  2194   0012B8                     u990:
  2195   0012B8  0E00               	movlw	0
  2196   0012BA                     u1000:
  2197   0012BA  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  2198   0012BC  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2199                           
  2200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 1, Range of values is 0 to 0
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte            4     3 (average)
  2206                           ;	Chosen strategy is simple_byte
  2207   0012BE  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2208   0012C0  0A00               	xorlw	0	; case 0
  2209   0012C2  B4D8               	btfsc	status,2,c
  2210   0012C4  EF66  F009         	goto	l2669
  2211   0012C8  EFED  F008         	goto	l2023
  2212   0012CC                     l2669:
  2213                           
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 2, Range of values is 0 to 1
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            7     4 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220   0012CC  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  2221   0012CE  0A00               	xorlw	0	; case 0
  2222   0012D0  B4D8               	btfsc	status,2,c
  2223   0012D2  EFF1  F008         	goto	l2025
  2224   0012D6  0A01               	xorlw	1	; case 1
  2225   0012D8  B4D8               	btfsc	status,2,c
  2226   0012DA  EF22  F009         	goto	l2027
  2227   0012DE  EFED  F008         	goto	l2023
  2228   0012E2                     l2033:
  2229                           
  2230                           ;MCAL_Layer/GPIO/mcal_gpio.c: 51:     return ret;
  2231   0012E2  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2232   0012E4  0012               	return		;funcret
  2233   0012E6                     __end_of_gpio_pin_direction_initialize:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _ecu_lcd_4bits_send_command *****************
  2237 ;; Defined at:
  2238 ;;		line 56 in file "ECU_Layer/LCD/ecu_lcd.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  _lcd_4bits_c    2   14[COMRAM] PTR const struct .
  2241 ;;		 -> lcd_1(6), 
  2242 ;;  command         1   16[COMRAM] unsigned char 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  ret             1   17[COMRAM] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      unsigned char 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:        4 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 2
  2261 ;; This function calls:
  2262 ;;		_gpio_pin_write_logic
  2263 ;;		_lcd_4bits_send_enable_signal
  2264 ;;		_lcd_send_4bits
  2265 ;; This function is called by:
  2266 ;;		_ecu_lcd_4bits_initialize
  2267 ;;		_ecu_lcd_4bits_send_custom_char
  2268 ;;		_lcd_4bits_set_cursor
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text13
  2273   0018D6                     __ptext13:
  2274                           	callstack 0
  2275   0018D6                     _ecu_lcd_4bits_send_command:
  2276                           	callstack 25
  2277   0018D6                     
  2278                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     if(((void*)0) == _lcd_4bits_config)
  2279   0018D6  500F               	movf	ecu_lcd_4bits_send_command@_lcd_4bits_config^0,w,c
  2280   0018D8  1010               	iorwf	(ecu_lcd_4bits_send_command@_lcd_4bits_config+1)^0,w,c
  2281   0018DA  A4D8               	btfss	status,2,c
  2282   0018DC  EF72  F00C         	goto	u1031
  2283   0018E0  EF74  F00C         	goto	u1030
  2284   0018E4                     u1031:
  2285   0018E4  EF78  F00C         	goto	l2093
  2286   0018E8                     u1030:
  2287   0018E8                     
  2288                           ;ECU_Layer/LCD/ecu_lcd.c: 61:     {;ECU_Layer/LCD/ecu_lcd.c: 62:         ret = (Std_Retu
      +                          rnType)0x00;
  2289   0018E8  0E00               	movlw	0
  2290   0018EA  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2291                           
  2292                           ;ECU_Layer/LCD/ecu_lcd.c: 63:     }
  2293   0018EC  EFA4  F00C         	goto	l2095
  2294   0018F0                     l2093:
  2295                           
  2296                           ;ECU_Layer/LCD/ecu_lcd.c: 66:     {;ECU_Layer/LCD/ecu_lcd.c: 67:         ret = gpio_pin_
      +                          write_logic(&_lcd_4bits_config->lcd_rs, GPIO_LOW);
  2297   0018F0  C00F  F001         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,gpio_pin_write_logic@_pin_config
  2298   0018F4  C010  F002         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,gpio_pin_write_logic@_pin_config+1
  2299   0018F8  0E00               	movlw	0
  2300   0018FA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2301   0018FC  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2302   001900  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2303                           
  2304                           ;ECU_Layer/LCD/ecu_lcd.c: 69:         ret = lcd_send_4bits(_lcd_4bits_config, (command >
      +                          > 4) & 0x0F);
  2305   001902  C00F  F00B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  2306   001906  C010  F00C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config+1
  2307   00190A  3811               	swapf	ecu_lcd_4bits_send_command@command^0,w,c
  2308   00190C  0B0F               	andlw	15
  2309   00190E  0B0F               	andlw	15
  2310   001910  6E0D               	movwf	lcd_send_4bits@data_command^0,c
  2311   001912  ECDC  F00C         	call	_lcd_send_4bits	;wreg free
  2312   001916  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2313                           
  2314                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  2315   001918  C00F  F00B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_4b
      +                          its_config
  2316   00191C  C010  F00C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config+1
  2317   001920  EC4D  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  2318   001924  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2319                           
  2320                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = lcd_send_4bits(_lcd_4bits_config, command & 
      +                          0x0F);
  2321   001926  C00F  F00B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_send_4bits@_lcd_4bits_config
  2322   00192A  C010  F00C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_send_4bits@_lcd_4bits_config+1
  2323   00192E  5011               	movf	ecu_lcd_4bits_send_command@command^0,w,c
  2324   001930  0B0F               	andlw	15
  2325   001932  6E0D               	movwf	lcd_send_4bits@data_command^0,c
  2326   001934  ECDC  F00C         	call	_lcd_send_4bits	;wreg free
  2327   001938  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2328                           
  2329                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         ret = lcd_4bits_send_enable_signal(_lcd_4bits_conf
      +                          ig);
  2330   00193A  C00F  F00B         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config,lcd_4bits_send_enable_signal@_lcd_4b
      +                          its_config
  2331   00193E  C010  F00C         	movff	ecu_lcd_4bits_send_command@_lcd_4bits_config+1,lcd_4bits_send_enable_signal@_lcd_
      +                          4bits_config+1
  2332   001942  EC4D  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  2333   001946  6E12               	movwf	ecu_lcd_4bits_send_command@ret^0,c
  2334   001948                     l2095:
  2335                           
  2336                           ;ECU_Layer/LCD/ecu_lcd.c: 76:     return ret;
  2337   001948  5012               	movf	ecu_lcd_4bits_send_command@ret^0,w,c
  2338   00194A  0012               	return		;funcret
  2339   00194C                     __end_of_ecu_lcd_4bits_send_command:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _lcd_send_4bits *****************
  2343 ;; Defined at:
  2344 ;;		line 411 in file "ECU_Layer/LCD/ecu_lcd.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  _lcd_4bits_c    2   10[COMRAM] PTR const struct .
  2347 ;;		 -> lcd_1(6), 
  2348 ;;  data_command    1   12[COMRAM] unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  ret             1   13[COMRAM] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        4 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 1
  2367 ;; This function calls:
  2368 ;;		_gpio_pin_write_logic
  2369 ;; This function is called by:
  2370 ;;		_ecu_lcd_4bits_send_command
  2371 ;;		_ecu_lcd_4bits_send_char_data
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text14
  2376   0019B8                     __ptext14:
  2377                           	callstack 0
  2378   0019B8                     _lcd_send_4bits:
  2379                           	callstack 25
  2380   0019B8  0E02               	movlw	2
  2381   0019BA  240B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  2382   0019BC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2383   0019BE  0E00               	movlw	0
  2384   0019C0  200C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  2385   0019C2  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2386   0019C4  500D               	movf	lcd_send_4bits@data_command^0,w,c
  2387   0019C6  0B01               	andlw	1
  2388   0019C8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2389   0019CA  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2390   0019CE  0E03               	movlw	3
  2391   0019D0  240B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  2392   0019D2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2393   0019D4  0E00               	movlw	0
  2394   0019D6  200C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  2395   0019D8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2396   0019DA  90D8               	bcf	status,0,c
  2397   0019DC  300D               	rrcf	lcd_send_4bits@data_command^0,w,c
  2398   0019DE  0B01               	andlw	1
  2399   0019E0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2400   0019E2  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2401   0019E6  0E04               	movlw	4
  2402   0019E8  240B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  2403   0019EA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2404   0019EC  0E00               	movlw	0
  2405   0019EE  200C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  2406   0019F0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2407   0019F2  400D               	rrncf	lcd_send_4bits@data_command^0,w,c
  2408   0019F4  42E8               	rrncf	wreg,f,c
  2409   0019F6  0B3F               	andlw	63
  2410   0019F8  0B01               	andlw	1
  2411   0019FA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2412   0019FC  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2413   001A00                     
  2414                           ;ECU_Layer/LCD/ecu_lcd.c: 418:     ret = gpio_pin_write_logic(&_lcd_4bits_config->lcd_da
      +                          ta_pins[3], (data_command >> 3) & 0x01);
  2415   001A00  0E05               	movlw	5
  2416   001A02  240B               	addwf	lcd_send_4bits@_lcd_4bits_config^0,w,c
  2417   001A04  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2418   001A06  0E00               	movlw	0
  2419   001A08  200C               	addwfc	(lcd_send_4bits@_lcd_4bits_config+1)^0,w,c
  2420   001A0A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2421   001A0C  380D               	swapf	lcd_send_4bits@data_command^0,w,c
  2422   001A0E  46E8               	rlncf	wreg,f,c
  2423   001A10  0B1F               	andlw	31
  2424   001A12  0B01               	andlw	1
  2425   001A14  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2426   001A16  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2427   001A1A  6E0E               	movwf	lcd_send_4bits@ret^0,c
  2428                           
  2429                           ;ECU_Layer/LCD/ecu_lcd.c: 420:     return ret;
  2430   001A1C  500E               	movf	lcd_send_4bits@ret^0,w,c
  2431   001A1E  0012               	return		;funcret
  2432   001A20                     __end_of_lcd_send_4bits:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2436 ;; Defined at:
  2437 ;;		line 423 in file "ECU_Layer/LCD/ecu_lcd.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  _lcd_4bits_c    2   10[COMRAM] PTR const struct .
  2440 ;;		 -> lcd_1(6), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  ret             1   12[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      unsigned char 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        3 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 1
  2459 ;; This function calls:
  2460 ;;		_gpio_pin_write_logic
  2461 ;; This function is called by:
  2462 ;;		_ecu_lcd_4bits_send_command
  2463 ;;		_ecu_lcd_4bits_send_char_data
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text15
  2468   001A9A                     __ptext15:
  2469                           	callstack 0
  2470   001A9A                     _lcd_4bits_send_enable_signal:
  2471                           	callstack 25
  2472   001A9A  0E01               	movlw	1
  2473   001A9C  240B               	addwf	lcd_4bits_send_enable_signal@_lcd_4bits_config^0,w,c
  2474   001A9E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2475   001AA0  0E00               	movlw	0
  2476   001AA2  200C               	addwfc	(lcd_4bits_send_enable_signal@_lcd_4bits_config+1)^0,w,c
  2477   001AA4  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2478   001AA6  0E01               	movlw	1
  2479   001AA8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2480   001AAA  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2481   001AAE                     
  2482                           ;ECU_Layer/LCD/ecu_lcd.c: 428:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  2483   001AAE  D000               	nop2		;2 cycle nop
  2484   001AB0  D000               	nop2		;2 cycle nop
  2485   001AB2  F000               	nop	
  2486   001AB4                     
  2487                           ;ECU_Layer/LCD/ecu_lcd.c: 429:     ret = gpio_pin_write_logic(&_lcd_4bits_config->lcd_en
      +                          , GPIO_LOW);
  2488   001AB4  0E01               	movlw	1
  2489   001AB6  240B               	addwf	lcd_4bits_send_enable_signal@_lcd_4bits_config^0,w,c
  2490   001AB8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2491   001ABA  0E00               	movlw	0
  2492   001ABC  200C               	addwfc	(lcd_4bits_send_enable_signal@_lcd_4bits_config+1)^0,w,c
  2493   001ABE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2494   001AC0  0E00               	movlw	0
  2495   001AC2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2496   001AC4  EC9F  F00A         	call	_gpio_pin_write_logic	;wreg free
  2497   001AC8  6E0D               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2498                           
  2499                           ;ECU_Layer/LCD/ecu_lcd.c: 431:     return ret;
  2500   001ACA  500D               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2501   001ACC  0012               	return		;funcret
  2502   001ACE                     __end_of_lcd_4bits_send_enable_signal:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _gpio_pin_write_logic *****************
  2506 ;; Defined at:
  2507 ;;		line 83 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2510 ;;		 -> lcd_2.lcd_data_pins(8), lcd_2(10), lcd_1.lcd_data_pins(4), lcd_1(6), 
  2511 ;;  logic           1    2[COMRAM] enum E2801
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  ret             1    9[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2523 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;Total ram usage:       10 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_gpio_pin_initialize
  2533 ;;		_ecu_lcd_4bits_send_command
  2534 ;;		_ecu_lcd_8bits_send_command
  2535 ;;		_ecu_lcd_8bits_send_char_data
  2536 ;;		_lcd_send_4bits
  2537 ;;		_lcd_4bits_send_enable_signal
  2538 ;;		_lcd_8bits_send_enable_signal
  2539 ;;		_ecu_7_segment_write_number
  2540 ;;		_ecu_dc_motor_move_right
  2541 ;;		_ecu_dc_motor_move_left
  2542 ;;		_ecu_keypad_get_value
  2543 ;;		_ecu_led_turn_off
  2544 ;;		_ecu_led_turn_on
  2545 ;;		_ecu_lcd_4bits_send_char_data
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text16
  2550   00153E                     __ptext16:
  2551                           	callstack 0
  2552   00153E                     _gpio_pin_write_logic:
  2553                           	callstack 27
  2554   00153E                     
  2555                           ;MCAL_Layer/GPIO/mcal_gpio.c: 83: Std_ReturnType gpio_pin_write_logic(const pin_config_t
      +                          * _pin_config, logic_t logic);MCAL_Layer/GPIO/mcal_gpio.c: 84: {;MCAL_Layer/GPIO/mcal_gp
      +                          io.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2556   00153E  0E01               	movlw	1
  2557   001540  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  2558   001542                     
  2559                           ;MCAL_Layer/GPIO/mcal_gpio.c: 87:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  2560   001542  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2561   001544  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  2562   001546  B4D8               	btfsc	status,2,c
  2563   001548  EFA8  F00A         	goto	u911
  2564   00154C  EFAA  F00A         	goto	u910
  2565   001550                     u911:
  2566   001550  EFBB  F00A         	goto	l1999
  2567   001554                     u910:
  2568   001554  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2569   001558  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2570   00155C  30DF               	rrcf	223,w,c
  2571   00155E  32E8               	rrcf	wreg,f,c
  2572   001560  32E8               	rrcf	wreg,f,c
  2573   001562  0B07               	andlw	7
  2574   001564  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2575   001566  0E07               	movlw	7
  2576   001568  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  2577   00156A  EFB9  F00A         	goto	u921
  2578   00156E  EFBB  F00A         	goto	u920
  2579   001572                     u921:
  2580   001572  EF1E  F00B         	goto	l2007
  2581   001576                     u920:
  2582   001576                     l1999:
  2583                           
  2584                           ;MCAL_Layer/GPIO/mcal_gpio.c: 88:     {;MCAL_Layer/GPIO/mcal_gpio.c: 89:         ret = (
      +                          Std_ReturnType)0x00;
  2585   001576  0E00               	movlw	0
  2586   001578  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  2587                           
  2588                           ;MCAL_Layer/GPIO/mcal_gpio.c: 90:     }
  2589   00157A  EF33  F00B         	goto	l2009
  2590   00157E                     l2001:
  2591                           
  2592                           ;MCAL_Layer/GPIO/mcal_gpio.c: 97:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((Std_ReturnType)1 << _pin_config->pin));
  2593   00157E  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2594   001582  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2595   001586  30DF               	rrcf	223,w,c
  2596   001588  32E8               	rrcf	wreg,f,c
  2597   00158A  32E8               	rrcf	wreg,f,c
  2598   00158C  0B07               	andlw	7
  2599   00158E  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2600   001590  0E01               	movlw	1
  2601   001592  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2602   001594  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  2603   001596  EFCF  F00A         	goto	u934
  2604   00159A                     u935:
  2605   00159A  90D8               	bcf	status,0,c
  2606   00159C  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2607   00159E                     u934:
  2608   00159E  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  2609   0015A0  EFCD  F00A         	goto	u935
  2610   0015A4  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2611   0015A6  0AFF               	xorlw	255
  2612   0015A8  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2613   0015AA  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2614   0015AE  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2615   0015B2  50DF               	movf	223,w,c
  2616   0015B4  0B07               	andlw	7
  2617   0015B6  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  2618   0015B8  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2619   0015BA  0D02               	mullw	2
  2620   0015BC  0E3B               	movlw	low _lat_registers
  2621   0015BE  24F3               	addwf	243,w,c
  2622   0015C0  6ED9               	movwf	fsr2l,c
  2623   0015C2  0E00               	movlw	high _lat_registers
  2624   0015C4  20F4               	addwfc	prodh,w,c
  2625   0015C6  6EDA               	movwf	fsr2h,c
  2626   0015C8  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  2627   0015CC  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  2628   0015D0  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2629   0015D4  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2630   0015D8  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2631   0015DA  16DF               	andwf	indf2,f,c
  2632                           
  2633                           ;MCAL_Layer/GPIO/mcal_gpio.c: 98:                 break;
  2634   0015DC  EF33  F00B         	goto	l2009
  2635   0015E0                     l2003:
  2636                           
  2637                           ;MCAL_Layer/GPIO/mcal_gpio.c: 101:                 (*lat_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  2638   0015E0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2639   0015E4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2640   0015E8  30DF               	rrcf	223,w,c
  2641   0015EA  32E8               	rrcf	wreg,f,c
  2642   0015EC  32E8               	rrcf	wreg,f,c
  2643   0015EE  0B07               	andlw	7
  2644   0015F0  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2645   0015F2  0E01               	movlw	1
  2646   0015F4  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2647   0015F6  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  2648   0015F8  EF00  F00B         	goto	u944
  2649   0015FC                     u945:
  2650   0015FC  90D8               	bcf	status,0,c
  2651   0015FE  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2652   001600                     u944:
  2653   001600  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  2654   001602  EFFE  F00A         	goto	u945
  2655   001606  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2656   00160A  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2657   00160E  50DF               	movf	223,w,c
  2658   001610  0B07               	andlw	7
  2659   001612  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2660   001614  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2661   001616  0D02               	mullw	2
  2662   001618  0E3B               	movlw	low _lat_registers
  2663   00161A  24F3               	addwf	243,w,c
  2664   00161C  6ED9               	movwf	fsr2l,c
  2665   00161E  0E00               	movlw	high _lat_registers
  2666   001620  20F4               	addwfc	prodh,w,c
  2667   001622  6EDA               	movwf	fsr2h,c
  2668   001624  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  2669   001628  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  2670   00162C  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2671   001630  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2672   001634  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2673   001636  12DF               	iorwf	indf2,f,c
  2674                           
  2675                           ;MCAL_Layer/GPIO/mcal_gpio.c: 102:                 break;
  2676   001638  EF33  F00B         	goto	l2009
  2677   00163C                     l2007:
  2678   00163C  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  2679   00163E  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2680   001640  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2681                           
  2682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2683                           ; Switch size 1, requested type "simple"
  2684                           ; Number of cases is 1, Range of values is 0 to 0
  2685                           ; switch strategies available:
  2686                           ; Name         Instructions Cycles
  2687                           ; simple_byte            4     3 (average)
  2688                           ;	Chosen strategy is simple_byte
  2689   001642  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2690   001644  0A00               	xorlw	0	; case 0
  2691   001646  B4D8               	btfsc	status,2,c
  2692   001648  EF28  F00B         	goto	l2671
  2693   00164C  EFBB  F00A         	goto	l1999
  2694   001650                     l2671:
  2695                           
  2696                           ; Switch size 1, requested type "simple"
  2697                           ; Number of cases is 2, Range of values is 0 to 1
  2698                           ; switch strategies available:
  2699                           ; Name         Instructions Cycles
  2700                           ; simple_byte            7     4 (average)
  2701                           ;	Chosen strategy is simple_byte
  2702   001650  5004               	movf	??_gpio_pin_write_logic^0,w,c
  2703   001652  0A00               	xorlw	0	; case 0
  2704   001654  B4D8               	btfsc	status,2,c
  2705   001656  EFBF  F00A         	goto	l2001
  2706   00165A  0A01               	xorlw	1	; case 1
  2707   00165C  B4D8               	btfsc	status,2,c
  2708   00165E  EFF0  F00A         	goto	l2003
  2709   001662  EFBB  F00A         	goto	l1999
  2710   001666                     l2009:
  2711                           
  2712                           ;MCAL_Layer/GPIO/mcal_gpio.c: 108:     return ret;
  2713   001666  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  2714   001668  0012               	return		;funcret
  2715   00166A                     __end_of_gpio_pin_write_logic:
  2716                           	callstack 0
  2717                           
  2718                           	psect	rparam
  2719   000000                     
  2720                           	psect	idloc
  2721                           
  2722                           ;Config register IDLOC0 @ 0x200000
  2723                           ;	unspecified, using default values
  2724   200000                     	org	2097152
  2725   200000  FF                 	db	255
  2726                           
  2727                           ;Config register IDLOC1 @ 0x200001
  2728                           ;	unspecified, using default values
  2729   200001                     	org	2097153
  2730   200001  FF                 	db	255
  2731                           
  2732                           ;Config register IDLOC2 @ 0x200002
  2733                           ;	unspecified, using default values
  2734   200002                     	org	2097154
  2735   200002  FF                 	db	255
  2736                           
  2737                           ;Config register IDLOC3 @ 0x200003
  2738                           ;	unspecified, using default values
  2739   200003                     	org	2097155
  2740   200003  FF                 	db	255
  2741                           
  2742                           ;Config register IDLOC4 @ 0x200004
  2743                           ;	unspecified, using default values
  2744   200004                     	org	2097156
  2745   200004  FF                 	db	255
  2746                           
  2747                           ;Config register IDLOC5 @ 0x200005
  2748                           ;	unspecified, using default values
  2749   200005                     	org	2097157
  2750   200005  FF                 	db	255
  2751                           
  2752                           ;Config register IDLOC6 @ 0x200006
  2753                           ;	unspecified, using default values
  2754   200006                     	org	2097158
  2755   200006  FF                 	db	255
  2756                           
  2757                           ;Config register IDLOC7 @ 0x200007
  2758                           ;	unspecified, using default values
  2759   200007                     	org	2097159
  2760   200007  FF                 	db	255
  2761                           
  2762                           	psect	config
  2763                           
  2764                           ; Padding undefined space
  2765   300000                     	org	3145728
  2766   300000  FF                 	db	255
  2767                           
  2768                           ;Config register CONFIG1H @ 0x300001
  2769                           ;	unspecified, using default values
  2770                           ;	Oscillator Selection bits
  2771                           ;	OSC = 0x7, unprogrammed default
  2772                           ;	Fail-Safe Clock Monitor Enable bit
  2773                           ;	FCMEN = 0x0, unprogrammed default
  2774                           ;	Internal/External Oscillator Switchover bit
  2775                           ;	IESO = 0x0, unprogrammed default
  2776   300001                     	org	3145729
  2777   300001  07                 	db	7
  2778                           
  2779                           ;Config register CONFIG2L @ 0x300002
  2780                           ;	unspecified, using default values
  2781                           ;	Power-up Timer Enable bit
  2782                           ;	PWRT = 0x1, unprogrammed default
  2783                           ;	Brown-out Reset Enable bits
  2784                           ;	BOREN = 0x3, unprogrammed default
  2785                           ;	Brown Out Reset Voltage bits
  2786                           ;	BORV = 0x3, unprogrammed default
  2787   300002                     	org	3145730
  2788   300002  1F                 	db	31
  2789                           
  2790                           ;Config register CONFIG2H @ 0x300003
  2791                           ;	unspecified, using default values
  2792                           ;	Watchdog Timer Enable bit
  2793                           ;	WDT = 0x1, unprogrammed default
  2794                           ;	Watchdog Timer Postscale Select bits
  2795                           ;	WDTPS = 0xF, unprogrammed default
  2796   300003                     	org	3145731
  2797   300003  1F                 	db	31
  2798                           
  2799                           ; Padding undefined space
  2800   300004                     	org	3145732
  2801   300004  FF                 	db	255
  2802                           
  2803                           ;Config register CONFIG3H @ 0x300005
  2804                           ;	unspecified, using default values
  2805                           ;	CCP2 MUX bit
  2806                           ;	CCP2MX = 0x1, unprogrammed default
  2807                           ;	PORTB A/D Enable bit
  2808                           ;	PBADEN = 0x1, unprogrammed default
  2809                           ;	Low-Power Timer1 Oscillator Enable bit
  2810                           ;	LPT1OSC = 0x0, unprogrammed default
  2811                           ;	MCLR Pin Enable bit
  2812                           ;	MCLRE = 0x1, unprogrammed default
  2813   300005                     	org	3145733
  2814   300005  83                 	db	131
  2815                           
  2816                           ;Config register CONFIG4L @ 0x300006
  2817                           ;	unspecified, using default values
  2818                           ;	Stack Full/Underflow Reset Enable bit
  2819                           ;	STVREN = 0x1, unprogrammed default
  2820                           ;	Single-Supply ICSP Enable bit
  2821                           ;	LVP = 0x1, unprogrammed default
  2822                           ;	Extended Instruction Set Enable bit
  2823                           ;	XINST = 0x0, unprogrammed default
  2824                           ;	Background Debugger Enable bit
  2825                           ;	DEBUG = 0x1, unprogrammed default
  2826   300006                     	org	3145734
  2827   300006  85                 	db	133
  2828                           
  2829                           ; Padding undefined space
  2830   300007                     	org	3145735
  2831   300007  FF                 	db	255
  2832                           
  2833                           ;Config register CONFIG5L @ 0x300008
  2834                           ;	unspecified, using default values
  2835                           ;	Code Protection bit
  2836                           ;	CP0 = 0x1, unprogrammed default
  2837                           ;	Code Protection bit
  2838                           ;	CP1 = 0x1, unprogrammed default
  2839                           ;	Code Protection bit
  2840                           ;	CP2 = 0x1, unprogrammed default
  2841                           ;	Code Protection bit
  2842                           ;	CP3 = 0x1, unprogrammed default
  2843   300008                     	org	3145736
  2844   300008  0F                 	db	15
  2845                           
  2846                           ;Config register CONFIG5H @ 0x300009
  2847                           ;	unspecified, using default values
  2848                           ;	Boot Block Code Protection bit
  2849                           ;	CPB = 0x1, unprogrammed default
  2850                           ;	Data EEPROM Code Protection bit
  2851                           ;	CPD = 0x1, unprogrammed default
  2852   300009                     	org	3145737
  2853   300009  C0                 	db	192
  2854                           
  2855                           ;Config register CONFIG6L @ 0x30000A
  2856                           ;	unspecified, using default values
  2857                           ;	Write Protection bit
  2858                           ;	WRT0 = 0x1, unprogrammed default
  2859                           ;	Write Protection bit
  2860                           ;	WRT1 = 0x1, unprogrammed default
  2861                           ;	Write Protection bit
  2862                           ;	WRT2 = 0x1, unprogrammed default
  2863                           ;	Write Protection bit
  2864                           ;	WRT3 = 0x1, unprogrammed default
  2865   30000A                     	org	3145738
  2866   30000A  0F                 	db	15
  2867                           
  2868                           ;Config register CONFIG6H @ 0x30000B
  2869                           ;	unspecified, using default values
  2870                           ;	Configuration Register Write Protection bit
  2871                           ;	WRTC = 0x1, unprogrammed default
  2872                           ;	Boot Block Write Protection bit
  2873                           ;	WRTB = 0x1, unprogrammed default
  2874                           ;	Data EEPROM Write Protection bit
  2875                           ;	WRTD = 0x1, unprogrammed default
  2876   30000B                     	org	3145739
  2877   30000B  E0                 	db	224
  2878                           
  2879                           ;Config register CONFIG7L @ 0x30000C
  2880                           ;	unspecified, using default values
  2881                           ;	Table Read Protection bit
  2882                           ;	EBTR0 = 0x1, unprogrammed default
  2883                           ;	Table Read Protection bit
  2884                           ;	EBTR1 = 0x1, unprogrammed default
  2885                           ;	Table Read Protection bit
  2886                           ;	EBTR2 = 0x1, unprogrammed default
  2887                           ;	Table Read Protection bit
  2888                           ;	EBTR3 = 0x1, unprogrammed default
  2889   30000C                     	org	3145740
  2890   30000C  0F                 	db	15
  2891                           
  2892                           ;Config register CONFIG7H @ 0x30000D
  2893                           ;	unspecified, using default values
  2894                           ;	Boot Block Table Read Protection bit
  2895                           ;	EBTRB = 0x1, unprogrammed default
  2896   30000D                     	org	3145741
  2897   30000D  40                 	db	64
  2898                           tosu	equ	0xFFF
  2899                           tosh	equ	0xFFE
  2900                           tosl	equ	0xFFD
  2901                           stkptr	equ	0xFFC
  2902                           pclatu	equ	0xFFB
  2903                           pclath	equ	0xFFA
  2904                           pcl	equ	0xFF9
  2905                           tblptru	equ	0xFF8
  2906                           tblptrh	equ	0xFF7
  2907                           tblptrl	equ	0xFF6
  2908                           tablat	equ	0xFF5
  2909                           prodh	equ	0xFF4
  2910                           prodl	equ	0xFF3
  2911                           indf0	equ	0xFEF
  2912                           postinc0	equ	0xFEE
  2913                           postdec0	equ	0xFED
  2914                           preinc0	equ	0xFEC
  2915                           plusw0	equ	0xFEB
  2916                           fsr0h	equ	0xFEA
  2917                           fsr0l	equ	0xFE9
  2918                           wreg	equ	0xFE8
  2919                           indf1	equ	0xFE7
  2920                           postinc1	equ	0xFE6
  2921                           postdec1	equ	0xFE5
  2922                           preinc1	equ	0xFE4
  2923                           plusw1	equ	0xFE3
  2924                           fsr1h	equ	0xFE2
  2925                           fsr1l	equ	0xFE1
  2926                           bsr	equ	0xFE0
  2927                           indf2	equ	0xFDF
  2928                           postinc2	equ	0xFDE
  2929                           postdec2	equ	0xFDD
  2930                           preinc2	equ	0xFDC
  2931                           plusw2	equ	0xFDB
  2932                           fsr2h	equ	0xFDA
  2933                           fsr2l	equ	0xFD9
  2934                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    64
    Data        46
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     48      96
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1170$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1170$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_8bits_set_cursor@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4bits_send_enable_signal@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bits@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    ecu_lcd_8bits_send_custom_char@_char	PTR const unsigned char  size(2) Largest target is 8
		 -> customchar6(CODE[8]), customchar5(CODE[8]), customchar4(CODE[8]), customchar3(CODE[8]), 
		 -> customchar2(CODE[8]), customchar1(CODE[8]), 

    ecu_lcd_8bits_send_custom_char@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    ecu_lcd_8bits_send_char_data@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    ecu_lcd_8bits_send_command@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    ecu_lcd_8bits_initialize@_lcd_8bits_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    ecu_lcd_4bits_send_command@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    ecu_lcd_4bits_initialize@_lcd_4bits_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data_pins(COMRAM[8]), lcd_2(COMRAM[10]), lcd_1.lcd_data_pins(COMRAM[4]), lcd_1(COMRAM[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data_pins(COMRAM[8]), lcd_2(COMRAM[10]), lcd_1.lcd_data_pins(COMRAM[4]), lcd_1(COMRAM[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data_pins(COMRAM[8]), lcd_2(COMRAM[10]), lcd_1.lcd_data_pins(COMRAM[4]), lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_ecu_lcd_8bits_send_custom_char
    _ecu_lcd_8bits_send_custom_char->_ecu_lcd_8bits_send_char_data_pos
    _ecu_lcd_8bits_send_char_data_pos->_lcd_8bits_set_cursor
    _lcd_8bits_set_cursor->_ecu_lcd_8bits_send_command
    _ecu_lcd_8bits_send_char_data->_lcd_8bits_send_enable_signal
    _ecu_layer_initialize->_ecu_lcd_8bits_initialize
    _ecu_lcd_8bits_initialize->_ecu_lcd_8bits_send_command
    _ecu_lcd_8bits_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _ecu_lcd_4bits_initialize->_ecu_lcd_4bits_send_command
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ecu_lcd_4bits_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   85499
                                             46 COMRAM     2     2      0
             _application_initialize
     _ecu_lcd_8bits_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _ecu_lcd_8bits_send_custom_char                      11     4      7   44969
                                             35 COMRAM    11     4      7
       _ecu_lcd_8bits_send_char_data
   _ecu_lcd_8bits_send_char_data_pos
         _ecu_lcd_8bits_send_command
 ---------------------------------------------------------------------------------
 (2) _ecu_lcd_8bits_send_char_data_pos                     6     1      5   21759
                                             29 COMRAM     6     1      5
       _ecu_lcd_8bits_send_char_data
               _lcd_8bits_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bits_set_cursor                                 7     3      4   11826
                                             22 COMRAM     7     3      4
         _ecu_lcd_8bits_send_command
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_8bits_send_char_data                         9     6      3    9471
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   40530
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   40530
           _ecu_lcd_4bits_initialize
           _ecu_lcd_8bits_initialize
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_8bits_initialize                             6     4      2   17652
                                             22 COMRAM     6     4      2
         _ecu_lcd_8bits_send_command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_lcd_8bits_send_command                           9     6      3   11143
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (3) _lcd_8bits_send_enable_signal                         3     1      2    4504
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _ecu_lcd_4bits_initialize                             6     4      2   22875
                                             18 COMRAM     6     4      2
         _ecu_lcd_4bits_send_command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6042
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _ecu_lcd_4bits_send_command                           4     1      3   16366
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       4     1      3    5094
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bits_send_enable_signal                         3     1      2    4656
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    4283
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _ecu_lcd_4bits_initialize
         _ecu_lcd_4bits_send_command
           _gpio_pin_write_logic
           _lcd_4bits_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _ecu_lcd_8bits_initialize
         _ecu_lcd_8bits_send_command
           _gpio_pin_write_logic
           _lcd_8bits_send_enable_signal
             _gpio_pin_write_logic
         _gpio_pin_initialize
   _ecu_lcd_8bits_send_custom_char
     _ecu_lcd_8bits_send_char_data
       _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
     _ecu_lcd_8bits_send_char_data_pos
       _ecu_lcd_8bits_send_char_data
       _lcd_8bits_set_cursor
         _ecu_lcd_8bits_send_command
     _ecu_lcd_8bits_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     30      60       1       75.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      39        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 20:23:03 2023

                                  ?_lcd_send_4bits 000B                ecu_lcd_8bits_send_char_data@counter 0016  
                                              l220 19B6                                                l132 1B40  
                                              l322 194A                                                l410 17B4  
                                              l180 12E4                                                l317 153C  
                                              l431 1ACC                                                l428 1A1E  
                                              l444 1A98                                                l372 18D4  
                                              l365 1410                                                l286 1B46  
                                              l454 1714                                                l199 1668  
                                              l384 1A64                                                l379 1844  
                                              u910 1554                                                u911 1550  
                                              u920 1576                                                u921 1572  
             __end_of_lcd_4bits_send_enable_signal 1ACE                       _lcd_4bits_send_enable_signal 1A9A  
                                              u934 159E                                                u950 11B8  
                                              u935 159A                                                u951 11B4  
                                              u944 1600                                                u960 11DA  
                                              u945 15FC                                                u961 11D6  
                                              u990 12B8                                                u974 1202  
                                              u991 12B2                                                u975 11FE  
                                              u984 1264                                                u985 1260  
                                              _ret 005F                   ecu_lcd_8bits_send_char_data@data 0010  
                                              prod 0FF3                                                wreg 0FE8  
                                             l2001 157E                                               l2003 15E0  
                                             l2021 11B8                                               l2101 184A  
                                             l2007 163C                                               l2031 12A0  
                                             l2023 11DA                                               l2103 185C  
                                             l2009 1666                                               l2041 19B8  
                                             l2025 11E2                                               l2033 12E2  
                                             l2017 11A2                                               l2113 1878  
                                             l2121 18D2                                               l2105 1864  
                                             l2201 13AC                                               l2043 19B8  
                                             l2027 1244                                               l2019 11A6  
                                             l2131 1430                                               l2115 18B2  
                                             l2107 1874                                               l2211 13FC  
                                             l2203 13BC                                               l2053 1A9A  
                                             l2045 19CE                                               l2141 1470  
                                             l2133 1450                                               l2125 1412  
                                             l2117 18B4                                               l2205 13CC  
                                             l2213 140E                                               l2221 17CC  
                                             l2301 171A                                               l2055 1A9A  
                                             l2047 19E6                                               l2151 14C2  
                                             l2143 1472                                               l2127 1416  
                                             l2063 1A66                                               l2119 18C4  
                                             l2207 13DC                                               l2231 17E8  
                                             l2223 17D4                                               l2303 172C  
                                             l2057 1AAE                                               l2049 1A00  
                                             l2081 1988                                               l2073 194C  
                                             l2161 1508                                               l2153 14C8  
                                             l2145 1482                                               l2129 1428  
                                             l2065 1A66                                               l2209 13EC  
                                             l2233 1822                                               l2225 17E4  
                                             l2217 17B6                                               l2321 1798  
                                             l2305 173E                                               l2059 1AB4  
                                             l2091 18E8                                               l2083 19B4  
                                             l2075 194C                                               l2163 1518  
                                             l2155 14D8                                               l2147 1492  
                                             l2139 1454                                               l2067 1A7A  
                                             l2171 12E6                                               l2235 1824  
                                             l2219 17BA                                               l2251 16A0  
                                             l2243 166A                                               l2315 1760  
                                             l2323 17B2                                               l2307 1746  
                                             l2093 18F0                                               l2077 195E  
                                             l2165 1528                                               l2157 14E8  
                                             l2149 14A2                                               l2069 1A80  
                                             l2173 12EA                                               l2237 1834  
                                             l2253 16B8                                               l2245 166A  
                                             l2317 1786                                               l2309 175C  
                                             l2095 1948                                               l2087 18D6  
                                             l2079 1980                                               l2159 14F8  
                                             l2167 153A                                               l2191 1356  
                                             l2175 12FC                                               l2271 1B34  
                                             l2239 1842                                               l2255 16D0  
                                             l2247 1670                                               l2319 1788  
                                             l2089 18D6                                               l2193 1366  
                                             l2185 1328                                               l2177 1304  
                                             l2249 1688                                               l2257 16D8  
                                             l2099 1846                                               l2195 1376  
                                             l2187 1344                                               l2179 1324  
                                             l2267 1B28                                               l2259 1712  
                                             l2291 1A3A                                               l2197 1396  
                                             l2189 1346                                               l2269 1B28  
                                             l2293 1A62                                               l2285 1A20  
                                             l2199 139C                                               l2287 1A20  
                                             l2297 1B42                                               l2289 1A32  
                                             l2561 1082                                               l2299 1716  
                                             l2571 1114                                               l2563 10A4  
                                             l2555 1046                                               l2573 112A  
                                             l2565 10BA                                               l2557 104A  
                                             l2671 1650                                               l2575 114C  
                                             l2567 10DC                                               l2559 106C  
                                             l2577 1162                                               l2569 10F2  
                                             l2667 16EC                                               l2579 1184  
                                             l2669 12CC                                               l1993 153E  
                                             l1995 1542                                               l1997 1554  
                                             l1999 1576                                               STR_1 1041  
                                             u1000 12BA                                               u1010 195E  
                                             u1011 195A                                               u1020 1980  
                                             u1100 1356                                               u1021 197C  
                                             u1101 1352                                               u1030 18E8  
                                             u1110 17CC                                               u1031 18E4  
                                             u1111 17C8                                               u1040 185C  
                                             u1041 1858                                               u1130 1834  
                                             u1131 1830                                               u1060 18C4  
                                             u1124 1812                                               u1061 18C0  
                                             u1125 180E                                               u1070 1428  
                                             u1054 18A2                                               u1150 1A32  
                                             u1071 1424                                               u1055 189E  
                                             u1151 1A2E                                               u1080 1482  
                                             u1160 172C                                               u1081 147E  
                                             u1161 1728                                               u1090 12FC  
                                             u1170 173E                                               u1091 12F8  
                                             u1171 173A                                               u1180 1798  
                                             u1181 1794                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             u1607 137C                                               u1617 1398  
                                             u1537 1076                                               u1627 1488  
                                             u1547 10AE                                               u1637 14A8  
                                             u1557 10E6                                               u1647 14C4  
                                             u1567 111E                                               u1577 1156  
                                             u1587 118E                                               u1597 135C  
                                             _main 1046                                               fsr2h 0FDA  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             fsr2l 0FD9                    ecu_lcd_4bits_initialize@counter 0017  
                                             prodl 0FF3                                               start 0000  
                                     ___param_bank 0000                               _gpio_pin_write_logic 153E  
              ecu_lcd_8bits_send_char_data_pos@col 0021                ecu_lcd_8bits_send_char_data_pos@ret 0023  
                                            ?_main 0001                           ??_application_initialize 001D  
              ecu_lcd_8bits_send_char_data_pos@row 0020                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                      ?_lcd_4bits_send_enable_signal 000B  
                          lcd_8bits_set_cursor@col 001A                            lcd_8bits_set_cursor@ret 001D  
                                            _lcd_1 0059                                              _lcd_2 004F  
                          lcd_8bits_set_cursor@row 0019                           _ecu_lcd_8bits_initialize 12E6  
                                            tablat 0FF5                                              status 0FD8  
    lcd_8bits_send_enable_signal@_lcd_8bits_config 000B    ecu_lcd_8bits_send_custom_char@_lcd_8bits_config 0024  
                   ?_gpio_pin_direction_initialize 0001                                    __initialization 1AFC  
                                     __end_of_main 11A2                              ?_gpio_pin_write_logic 0001  
                                    _lat_registers 003B                                             ??_main 002F  
                                    __activetblptr 0002               ecu_lcd_8bits_send_char_data_pos@data 0022  
                       ??_ecu_lcd_4bits_initialize 0015             __end_of_ecu_lcd_8bits_send_custom_char 17B6  
                   _ecu_lcd_8bits_send_custom_char 1716  ecu_lcd_8bits_send_char_data_pos@_lcd_8bits_config 001E  
                                           isa$std 0001                                       __pdataCOMRAM 0031  
                                     __mediumconst 0000                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             tblptru 0FF8  
                  lcd_8bits_send_enable_signal@ret 000D                                         __accesstop 0080  
                          __end_of__initialization 1B1E                                      ___rparam_used 0001  
                                 ??_lcd_send_4bits 000E                        ecu_lcd_8bits_initialize@ret 001C  
                    ecu_lcd_4bits_send_command@ret 0012                             ??_gpio_pin_write_logic 0004  
                                   __pcstackCOMRAM 0001           gpio_pin_direction_initialize@_pin_config 0001  
                           _application_initialize 1B42                                         __pnvCOMRAM 005F  
                  lcd_4bits_send_enable_signal@ret 000D              lcd_8bits_set_cursor@_lcd_8bits_config 0017  
                   ??_lcd_8bits_send_enable_signal 000D                 __end_of_ecu_lcd_8bits_send_command 18D6  
                       _ecu_lcd_8bits_send_command 1846               __end_of_ecu_lcd_8bits_send_char_data 1846  
                     _ecu_lcd_8bits_send_char_data 17B6                         ??_ecu_lcd_8bits_initialize 0019  
                 __end_of_ecu_lcd_4bits_initialize 153E                                     _tris_registers 0045  
                                          __Hparam 0000      ecu_lcd_8bits_send_char_data@_lcd_8bits_config 000E  
                                          __Lparam 0000                                _gpio_pin_initialize 194C  
                                     __psmallconst 1000                                            __pcinit 1AFC  
                                          __ramtop 1000                                            __ptext0 1046  
                                          __ptext1 1716                                            __ptext2 1A20  
                                          __ptext3 166A                                            __ptext4 17B6  
                                          __ptext5 1B42                                            __ptext6 1B28  
                                          __ptext7 12E6                                            __ptext8 1846  
                                          __ptext9 1A66                      ?_ecu_lcd_8bits_send_char_data 000E  
                  ??_gpio_pin_direction_initialize 0003                                            _counter 0060  
                ecu_lcd_8bits_send_custom_char@col 0027                  ecu_lcd_8bits_send_custom_char@ret 002D  
                ecu_lcd_8bits_send_custom_char@row 0026                               ?_gpio_pin_initialize 000B  
                             end_of_initialization 1B1E                                  lcd_send_4bits@ret 000E  
                             __end_of_keypad_valus 1011                                      __Lmediumconst 0000  
                                          postdec1 0FE5                                            postdec2 0FDD  
                                          postinc0 0FEE                                            postinc2 0FDE  
                     __end_of_lcd_8bits_set_cursor 1716                ecu_lcd_8bits_send_custom_char@_char 0028  
                            ??_gpio_pin_initialize 000D                    ecu_lcd_8bits_send_char_data@ret 0015  
         __end_of_ecu_lcd_8bits_send_char_data_pos 1A66                 ??_ecu_lcd_8bits_send_char_data_pos 0023  
                ?_ecu_lcd_8bits_send_char_data_pos 001E                   _ecu_lcd_8bits_send_char_data_pos 1A20  
                                    __pidataCOMRAM 1ACE                   __end_of_ecu_lcd_8bits_initialize 1412  
                        ?_ecu_lcd_4bits_initialize 0013                       ??_ecu_lcd_8bits_send_command 0011  
                              start_initialization 1AFC              __end_of_gpio_pin_direction_initialize 12E6  
                    _gpio_pin_direction_initialize 11A2                            ?_application_initialize 0001  
                      ecu_lcd_4bits_initialize@ret 0018                        ?_ecu_lcd_8bits_send_command 000E  
                     __end_of_ecu_layer_initialize 1B42                                        __pbssCOMRAM 0060  
                   __end_of_application_initialize 1B48                     ??_lcd_4bits_send_enable_signal 000D  
                             _lcd_8bits_set_cursor 166A                    gpio_pin_write_logic@_pin_config 0001  
               __end_of_ecu_lcd_4bits_send_command 194C                         _ecu_lcd_4bits_send_command 18D6  
                        gpio_pin_write_logic@logic 0003                                       _keypad_valus 1001  
                                      __smallconst 1000                  ecu_lcd_8bits_send_command@command 0010  
                ecu_lcd_8bits_send_command@counter 0016               __end_of_lcd_8bits_send_enable_signal 1A9A  
                     _lcd_8bits_send_enable_signal 1A66                          ?_ecu_lcd_8bits_initialize 0017  
                       lcd_send_4bits@data_command 000D                              ?_lcd_8bits_set_cursor 0017  
                              __end_of_customchar1 1041                                __end_of_customchar2 1039  
                              __end_of_customchar3 1031                                __end_of_customchar4 1029  
                              __end_of_customchar5 1021                                __end_of_customchar6 1019  
                 gpio_pin_direction_initialize@ret 0009                    ecu_lcd_8bits_initialize@counter 001B  
                  lcd_send_4bits@_lcd_4bits_config 000B                             gpio_pin_initialize@ret 000E  
                          gpio_pin_write_logic@ret 000A                                          copy_data0 1B10  
                    ?_lcd_8bits_send_enable_signal 000B                               _ecu_layer_initialize 1B28  
                                         __Hrparam 0000                                           __Lrparam 0000  
        ecu_lcd_4bits_initialize@_lcd_4bits_config 0013        ecu_lcd_4bits_send_command@_lcd_4bits_config 000F  
                      __end_of_gpio_pin_initialize 19B8                     gpio_pin_initialize@_pin_config 000B  
                                         __ptext10 1412                                           __ptext11 194C  
                                         __ptext12 11A2                                           __ptext13 18D6  
                                         __ptext14 19B8                                           __ptext15 1A9A  
                                         __ptext16 153E                                        _customchar1 1039  
                                      _customchar2 1031                                        _customchar3 1029  
                                      _customchar4 1021                                        _customchar5 1019  
                                      _customchar6 1011                             ??_lcd_8bits_set_cursor 001B  
                            ?_ecu_layer_initialize 0001                                           isa$xinst 0000  
                                   _lcd_send_4bits 19B8                       ??_ecu_lcd_4bits_send_command 0012  
                 ??_ecu_lcd_8bits_send_custom_char 002B                    ?_ecu_lcd_8bits_send_custom_char 0024  
                     __end_of_gpio_pin_write_logic 166A                      ecu_lcd_8bits_send_command@ret 0015  
                         _ecu_lcd_4bits_initialize 1412                             __end_of_lcd_send_4bits 1A20  
        ecu_lcd_8bits_initialize@_lcd_8bits_config 0017        ecu_lcd_8bits_send_command@_lcd_8bits_config 000E  
                      ?_ecu_lcd_4bits_send_command 000F                                     _port_registers 0031  
                ecu_lcd_4bits_send_command@command 0011                     ??_ecu_lcd_8bits_send_char_data 0011  
                           ??_ecu_layer_initialize 001D      lcd_4bits_send_enable_signal@_lcd_4bits_config 000B  
            ecu_lcd_8bits_send_custom_char@counter 002E              ecu_lcd_8bits_send_custom_char@mem_pos 002A  
