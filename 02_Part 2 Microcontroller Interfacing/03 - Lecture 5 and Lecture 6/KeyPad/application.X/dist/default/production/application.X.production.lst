

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 22 13:55:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4620 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     
    65                           	psect	idataCOMRAM
    66   001642                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _port_registers
    70   001642  80                 	db	128
    71   001643  0F                 	db	15
    72   001644  81                 	db	129
    73   001645  0F                 	db	15
    74   001646  82                 	db	130
    75   001647  0F                 	db	15
    76   001648  83                 	db	131
    77   001649  0F                 	db	15
    78   00164A  84                 	db	132
    79   00164B  0F                 	db	15
    80                           
    81                           ;initializer for _lat_registers
    82   00164C  89                 	db	137
    83   00164D  0F                 	db	15
    84   00164E  8A                 	db	138
    85   00164F  0F                 	db	15
    86   001650  8B                 	db	139
    87   001651  0F                 	db	15
    88   001652  8C                 	db	140
    89   001653  0F                 	db	15
    90   001654  8D                 	db	141
    91   001655  0F                 	db	15
    92                           
    93                           ;initializer for _tris_registers
    94   001656  92                 	db	146
    95   001657  0F                 	db	15
    96   001658  93                 	db	147
    97   001659  0F                 	db	15
    98   00165A  94                 	db	148
    99   00165B  0F                 	db	15
   100   00165C  95                 	db	149
   101   00165D  0F                 	db	15
   102   00165E  96                 	db	150
   103   00165F  0F                 	db	15
   104                           
   105                           ;initializer for _keypad_1
   106   001660  02                 	db	2
   107   001661  0A                 	db	10
   108   001662  12                 	db	18
   109   001663  1A                 	db	26
   110   001664  62                 	db	98
   111   001665  6A                 	db	106
   112   001666  72                 	db	114
   113   001667  7A                 	db	122
   114                           
   115                           ;initializer for _led_1
   116   001668  03                 	db	3
   117                           
   118                           	psect	smallconst
   119   001000                     __psmallconst:
   120                           	callstack 0
   121   001000  00                 	db	0
   122   001001                     _keypad_valus:
   123                           	callstack 0
   124   001001  37                 	db	55
   125   001002  38                 	db	56
   126   001003  39                 	db	57
   127   001004  2F                 	db	47
   128   001005  34                 	db	52
   129   001006  35                 	db	53
   130   001007  36                 	db	54
   131   001008  2A                 	db	42
   132   001009  31                 	db	49
   133   00100A  32                 	db	50
   134   00100B  33                 	db	51
   135   00100C  2D                 	db	45
   136   00100D  23                 	db	35
   137   00100E  30                 	db	48
   138   00100F  3D                 	db	61
   139   001010  2B                 	db	43
   140   001011                     __end_of_keypad_valus:
   141                           	callstack 0
   142   001011  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           	psect	nvCOMRAM
   145   00003D                     __pnvCOMRAM:
   146                           	callstack 0
   147   00003D                     _ret:
   148                           	callstack 0
   149   00003D                     	ds	1
   150   000000                     _PORTE	set	3972
   151   000000                     _PORTD	set	3971
   152   000000                     _PORTC	set	3970
   153   000000                     _PORTB	set	3969
   154   000000                     _PORTA	set	3968
   155   000000                     _LATA	set	3977
   156   000000                     _TRISA	set	3986
   157   000000                     _TRISE	set	3990
   158   000000                     _TRISD	set	3989
   159   000000                     _TRISC	set	3988
   160   000000                     _TRISB	set	3987
   161   000000                     _LATE	set	3981
   162   000000                     _LATD	set	3980
   163   000000                     _LATC	set	3979
   164   000000                     _LATB	set	3978
   165                           
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   00159A                     __pcinit:
   170                           	callstack 0
   171   00159A                     start_initialization:
   172                           	callstack 0
   173   00159A                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Initialize objects allocated to COMRAM (39 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178   00159A  0E42               	movlw	low __pidataCOMRAM
   179   00159C  6EF6               	movwf	tblptrl,c
   180   00159E  0E16               	movlw	high __pidataCOMRAM
   181   0015A0  6EF7               	movwf	tblptrh,c
   182   0015A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183   0015A4  6EF8               	movwf	tblptru,c
   184   0015A6  EE00  F001         	lfsr	0,__pdataCOMRAM
   185   0015AA  EE10 F027          	lfsr	1,39
   186   0015AE                     copy_data0:
   187   0015AE  0009               	tblrd		*+
   188   0015B0  CFF5 FFEE          	movff	tablat,postinc0
   189   0015B4  50E5               	movf	postdec1,w,c
   190   0015B6  50E1               	movf	fsr1l,w,c
   191   0015B8  E1FA               	bnz	copy_data0
   192                           
   193                           ; Clear objects allocated to COMRAM (1 bytes)
   194   0015BA  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   195   0015BC                     end_of_initialization:
   196                           	callstack 0
   197   0015BC                     __end_of__initialization:
   198                           	callstack 0
   199   0015BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200   0015BE  6EF8               	movwf	tblptru,c
   201   0015C0  0100               	movlb	0
   202   0015C2  EF9A  F00A         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205   00003E                     __pbssCOMRAM:
   206                           	callstack 0
   207   00003E                     _keypad_val:
   208                           	callstack 0
   209   00003E                     	ds	1
   210                           
   211                           	psect	dataCOMRAM
   212   000001                     __pdataCOMRAM:
   213                           	callstack 0
   214   000001                     _port_registers:
   215                           	callstack 0
   216   000001                     	ds	10
   217   00000B                     _lat_registers:
   218                           	callstack 0
   219   00000B                     	ds	10
   220   000015                     _tris_registers:
   221                           	callstack 0
   222   000015                     	ds	10
   223   00001F                     _keypad_1:
   224                           	callstack 0
   225   00001F                     	ds	8
   226   000027                     _led_1:
   227                           	callstack 0
   228   000027                     	ds	1
   229                           
   230                           	psect	cstackCOMRAM
   231   000028                     __pcstackCOMRAM:
   232                           	callstack 0
   233   000028                     gpio_pin_direction_initialize@_pin_config:
   234                           	callstack 0
   235   000028                     gpio_pin_write_logic@_pin_config:
   236                           	callstack 0
   237   000028                     gpio_pin_read_logic@_pin_config:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241   000028                     	ds	2
   242   00002A                     ??_gpio_pin_direction_initialize:
   243   00002A                     gpio_pin_write_logic@logic:
   244                           	callstack 0
   245   00002A                     gpio_pin_read_logic@logic:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249   00002A                     	ds	1
   250   00002B                     ??_gpio_pin_write_logic:
   251                           
   252                           ; 1 bytes @ 0x3
   253   00002B                     	ds	1
   254   00002C                     ??_gpio_pin_read_logic:
   255                           
   256                           ; 1 bytes @ 0x4
   257   00002C                     	ds	4
   258   000030                     gpio_pin_direction_initialize@ret:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x8
   262   000030                     	ds	1
   263   000031                     gpio_pin_write_logic@ret:
   264                           	callstack 0
   265   000031                     gpio_pin_read_logic@ret:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x9
   269   000031                     	ds	1
   270   000032                     ecu_led_turn_off@_led_config:
   271                           	callstack 0
   272   000032                     ecu_led_turn_on@_led_config:
   273                           	callstack 0
   274   000032                     gpio_pin_initialize@_pin_config:
   275                           	callstack 0
   276   000032                     ecu_keypad_get_value@_keypad_config:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xA
   280   000032                     	ds	2
   281   000034                     ??_gpio_pin_initialize:
   282   000034                     ecu_keypad_get_value@value:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xC
   286   000034                     	ds	1
   287   000035                     gpio_pin_initialize@ret:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0xD
   291   000035                     	ds	1
   292   000036                     ??_ecu_keypad_get_value:
   293   000036                     ecu_led_initialize@_led_config:
   294                           	callstack 0
   295   000036                     ecu_keypad_initialize@_keypad_config:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xE
   299   000036                     	ds	2
   300   000038                     ??_ecu_keypad_initialize:
   301   000038                     ecu_led_initialize@ret:
   302                           	callstack 0
   303   000038                     ecu_keypad_get_value@ret:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x10
   307   000038                     	ds	1
   308   000039                     ecu_keypad_get_value@column_logic:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x11
   312   000039                     	ds	1
   313   00003A                     ecu_keypad_initialize@ret:
   314                           	callstack 0
   315   00003A                     ecu_keypad_get_value@counter:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x12
   319   00003A                     	ds	1
   320   00003B                     ecu_keypad_initialize@rows_counter:
   321                           	callstack 0
   322   00003B                     ecu_keypad_get_value@rows_counter:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x13
   326   00003B                     	ds	1
   327   00003C                     ecu_keypad_initialize@columns_counter:
   328                           	callstack 0
   329   00003C                     ecu_keypad_get_value@columns_counter:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x14
   333   00003C                     	ds	1
   334   00003D                     
   335                           ; 1 bytes @ 0x15
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 13 in file "application.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  2  227[None  ] int 
   348 ;; Registers used:
   349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called: 5
   361 ;; This function calls:
   362 ;;		_application_initialize
   363 ;;		_ecu_keypad_get_value
   364 ;;		_ecu_led_turn_off
   365 ;;		_ecu_led_turn_on
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372   001534                     __ptext0:
   373                           	callstack 0
   374   001534                     _main:
   375                           	callstack 26
   376   001534                     
   377                           ;application.c: 15:     application_initialize();
   378   001534  EC42  F00B         	call	_application_initialize	;wreg free
   379   001538                     l1688:
   380                           
   381                           ;application.c: 18:     {;application.c: 19:         ret = ecu_keypad_get_value(&keypad_
      +                          1, &keypad_val);
   382   001538  0E1F               	movlw	low _keypad_1
   383   00153A  6E32               	movwf	ecu_keypad_get_value@_keypad_config^0,c
   384   00153C  0E00               	movlw	high _keypad_1
   385   00153E  6E33               	movwf	(ecu_keypad_get_value@_keypad_config+1)^0,c
   386   001540  0E3E               	movlw	low _keypad_val
   387   001542  6E34               	movwf	ecu_keypad_get_value@value^0,c
   388   001544  0E00               	movlw	high _keypad_val
   389   001546  6E35               	movwf	(ecu_keypad_get_value@value+1)^0,c
   390   001548  EC41  F009         	call	_ecu_keypad_get_value	;wreg free
   391   00154C  6E3D               	movwf	_ret^0,c
   392   00154E                     
   393                           ;application.c: 20:         if('1' == keypad_val)
   394   00154E  0E31               	movlw	49
   395   001550  183E               	xorwf	_keypad_val^0,w,c
   396   001552  A4D8               	btfss	status,2,c
   397   001554  EFAE  F00A         	goto	u1021
   398   001558  EFB0  F00A         	goto	u1020
   399   00155C                     u1021:
   400   00155C  EFB8  F00A         	goto	l1694
   401   001560                     u1020:
   402   001560                     
   403                           ;application.c: 21:         {;application.c: 22:             ecu_led_turn_on(&led_1);
   404   001560  0E27               	movlw	low _led_1
   405   001562  6E32               	movwf	ecu_led_turn_on@_led_config^0,c
   406   001564  0E00               	movlw	high _led_1
   407   001566  6E33               	movwf	(ecu_led_turn_on@_led_config+1)^0,c
   408   001568  ECF9  F00A         	call	_ecu_led_turn_on	;wreg free
   409                           
   410                           ;application.c: 23:         }
   411   00156C  EF9C  F00A         	goto	l1688
   412   001570                     l1694:
   413   001570  0E30               	movlw	48
   414   001572  183E               	xorwf	_keypad_val^0,w,c
   415   001574  A4D8               	btfss	status,2,c
   416   001576  EFBF  F00A         	goto	u1031
   417   00157A  EFC1  F00A         	goto	u1030
   418   00157E                     u1031:
   419   00157E  EFC9  F00A         	goto	l230
   420   001582                     u1030:
   421   001582                     
   422                           ;application.c: 25:         {;application.c: 26:             ecu_led_turn_off(&led_1);
   423   001582  0E27               	movlw	low _led_1
   424   001584  6E32               	movwf	ecu_led_turn_off@_led_config^0,c
   425   001586  0E00               	movlw	high _led_1
   426   001588  6E33               	movwf	(ecu_led_turn_off@_led_config+1)^0,c
   427   00158A  EC0D  F00B         	call	_ecu_led_turn_off	;wreg free
   428                           
   429                           ;application.c: 27:         }
   430   00158E  EF9C  F00A         	goto	l1688
   431   001592                     l230:
   432   001592  EF9C  F00A         	goto	l1688
   433   001596  EF00  F000         	goto	start
   434   00159A                     __end_of_main:
   435                           	callstack 0
   436                           
   437 ;; *************** function _ecu_led_turn_on *****************
   438 ;; Defined at:
   439 ;;		line 59 in file "ECU_Layer/LED/ecu_led.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  _led_config     2   10[COMRAM] PTR const struct .
   442 ;;		 -> led_1(1), 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  ret             1    0        unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      unsigned char 
   447 ;; Registers used:
   448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;Total ram usage:        2 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 1
   461 ;; This function calls:
   462 ;;		_gpio_pin_write_logic
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text1
   469   0015F2                     __ptext1:
   470                           	callstack 0
   471   0015F2                     _ecu_led_turn_on:
   472                           	callstack 29
   473   0015F2                     
   474                           ;ECU_Layer/LED/ecu_led.c: 63:     if(((void*)0) == _led_config)
   475   0015F2  5032               	movf	ecu_led_turn_on@_led_config^0,w,c
   476   0015F4  1033               	iorwf	(ecu_led_turn_on@_led_config+1)^0,w,c
   477   0015F6  A4D8               	btfss	status,2,c
   478   0015F8  EF00  F00B         	goto	u811
   479   0015FC  EF02  F00B         	goto	u810
   480   001600                     u811:
   481   001600  EF04  F00B         	goto	l1524
   482   001604                     u810:
   483   001604                     
   484                           ;ECU_Layer/LED/ecu_led.c: 66:     }
   485   001604  EF0C  F00B         	goto	l83
   486   001608                     l1524:
   487   001608  C032  F028         	movff	ecu_led_turn_on@_led_config,gpio_pin_write_logic@_pin_config
   488   00160C  C033  F029         	movff	ecu_led_turn_on@_led_config+1,gpio_pin_write_logic@_pin_config+1
   489   001610  0E01               	movlw	1
   490   001612  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   491   001614  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   492   001618                     l83:
   493   001618  0012               	return		;funcret
   494   00161A                     __end_of_ecu_led_turn_on:
   495                           	callstack 0
   496                           
   497 ;; *************** function _ecu_led_turn_off *****************
   498 ;; Defined at:
   499 ;;		line 37 in file "ECU_Layer/LED/ecu_led.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  _led_config     2   10[COMRAM] PTR const struct .
   502 ;;		 -> led_1(1), 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  ret             1    0        unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      unsigned char 
   507 ;; Registers used:
   508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;Total ram usage:        2 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; Hardware stack levels required when called: 1
   521 ;; This function calls:
   522 ;;		_gpio_pin_write_logic
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text2
   529   00161A                     __ptext2:
   530                           	callstack 0
   531   00161A                     _ecu_led_turn_off:
   532                           	callstack 29
   533   00161A                     
   534                           ;ECU_Layer/LED/ecu_led.c: 41:     if(((void*)0) == _led_config)
   535   00161A  5032               	movf	ecu_led_turn_off@_led_config^0,w,c
   536   00161C  1033               	iorwf	(ecu_led_turn_off@_led_config+1)^0,w,c
   537   00161E  A4D8               	btfss	status,2,c
   538   001620  EF14  F00B         	goto	u801
   539   001624  EF16  F00B         	goto	u800
   540   001628                     u801:
   541   001628  EF18  F00B         	goto	l1514
   542   00162C                     u800:
   543   00162C                     
   544                           ;ECU_Layer/LED/ecu_led.c: 44:     }
   545   00162C  EF20  F00B         	goto	l78
   546   001630                     l1514:
   547   001630  C032  F028         	movff	ecu_led_turn_off@_led_config,gpio_pin_write_logic@_pin_config
   548   001634  C033  F029         	movff	ecu_led_turn_off@_led_config+1,gpio_pin_write_logic@_pin_config+1
   549   001638  0E00               	movlw	0
   550   00163A  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   551   00163C  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   552   001640                     l78:
   553   001640  0012               	return		;funcret
   554   001642                     __end_of_ecu_led_turn_off:
   555                           	callstack 0
   556                           
   557 ;; *************** function _ecu_keypad_get_value *****************
   558 ;; Defined at:
   559 ;;		line 44 in file "ECU_Layer/KeyPad/ecu_keypad.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  _keypad_conf    2   10[COMRAM] PTR const struct .
   562 ;;		 -> keypad_1(8), 
   563 ;;  value           2   12[COMRAM] PTR unsigned char 
   564 ;;		 -> keypad_val(1), 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  columns_coun    1   20[COMRAM] unsigned char 
   567 ;;  rows_counter    1   19[COMRAM] unsigned char 
   568 ;;  counter         1   18[COMRAM] unsigned char 
   569 ;;  column_logic    1   17[COMRAM] enum E2801
   570 ;;  ret             1   16[COMRAM] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      unsigned char 
   573 ;; Registers used:
   574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:       11 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 1
   587 ;; This function calls:
   588 ;;		_gpio_pin_read_logic
   589 ;;		_gpio_pin_write_logic
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text3
   596   001282                     __ptext3:
   597                           	callstack 0
   598   001282                     _ecu_keypad_get_value:
   599                           	callstack 29
   600   001282                     
   601                           ;ECU_Layer/KeyPad/ecu_keypad.c: 47:     uint8 rows_counter = 0, columns_counter = 0, cou
      +                          nter = 0;
   602   001282  0E00               	movlw	0
   603   001284  6E3B               	movwf	ecu_keypad_get_value@rows_counter^0,c
   604   001286  0E00               	movlw	0
   605   001288  6E3C               	movwf	ecu_keypad_get_value@columns_counter^0,c
   606   00128A  0E00               	movlw	0
   607   00128C  6E3A               	movwf	ecu_keypad_get_value@counter^0,c
   608                           
   609                           ;ECU_Layer/KeyPad/ecu_keypad.c: 48:     logic_t column_logic = GPIO_LOW;
   610   00128E  0E00               	movlw	0
   611   001290  6E39               	movwf	ecu_keypad_get_value@column_logic^0,c
   612   001292                     
   613                           ;ECU_Layer/KeyPad/ecu_keypad.c: 50:     if(((void*)0) == _keypad_config || ((void*)0) ==
      +                           value)
   614   001292  5032               	movf	ecu_keypad_get_value@_keypad_config^0,w,c
   615   001294  1033               	iorwf	(ecu_keypad_get_value@_keypad_config+1)^0,w,c
   616   001296  B4D8               	btfsc	status,2,c
   617   001298  EF50  F009         	goto	u821
   618   00129C  EF52  F009         	goto	u820
   619   0012A0                     u821:
   620   0012A0  EF5B  F009         	goto	l1536
   621   0012A4                     u820:
   622   0012A4  5034               	movf	ecu_keypad_get_value@value^0,w,c
   623   0012A6  1035               	iorwf	(ecu_keypad_get_value@value+1)^0,w,c
   624   0012A8  A4D8               	btfss	status,2,c
   625   0012AA  EF59  F009         	goto	u831
   626   0012AE  EF5B  F009         	goto	u830
   627   0012B2                     u831:
   628   0012B2  EF5F  F009         	goto	l1538
   629   0012B6                     u830:
   630   0012B6                     l1536:
   631                           
   632                           ;ECU_Layer/KeyPad/ecu_keypad.c: 51:     {;ECU_Layer/KeyPad/ecu_keypad.c: 52:         ret
      +                           = (Std_ReturnType)0x00;
   633   0012B6  0E00               	movlw	0
   634   0012B8  6E38               	movwf	ecu_keypad_get_value@ret^0,c
   635                           
   636                           ;ECU_Layer/KeyPad/ecu_keypad.c: 53:     }
   637   0012BA  EFC6  F009         	goto	l1578
   638   0012BE                     l1538:
   639                           
   640                           ;ECU_Layer/KeyPad/ecu_keypad.c: 56:     {;ECU_Layer/KeyPad/ecu_keypad.c: 57:         for
      +                          (rows_counter = 0; rows_counter < 4; rows_counter++)
   641   0012BE  0E00               	movlw	0
   642   0012C0  6E3B               	movwf	ecu_keypad_get_value@rows_counter^0,c
   643   0012C2                     l1544:
   644                           
   645                           ;ECU_Layer/KeyPad/ecu_keypad.c: 58:         {;ECU_Layer/KeyPad/ecu_keypad.c: 59:        
      +                               for(counter = 0; counter < 4; counter++)
   646   0012C2  0E00               	movlw	0
   647   0012C4  6E3A               	movwf	ecu_keypad_get_value@counter^0,c
   648   0012C6                     l1550:
   649   0012C6  503A               	movf	ecu_keypad_get_value@counter^0,w,c
   650   0012C8  2432               	addwf	ecu_keypad_get_value@_keypad_config^0,w,c
   651   0012CA  6E28               	movwf	gpio_pin_write_logic@_pin_config^0,c
   652   0012CC  0E00               	movlw	0
   653   0012CE  2033               	addwfc	(ecu_keypad_get_value@_keypad_config+1)^0,w,c
   654   0012D0  6E29               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   655   0012D2  0E00               	movlw	0
   656   0012D4  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   657   0012D6  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   658   0012DA                     
   659                           ;ECU_Layer/KeyPad/ecu_keypad.c: 62:             }
   660   0012DA  2A3A               	incf	ecu_keypad_get_value@counter^0,f,c
   661   0012DC  0E03               	movlw	3
   662   0012DE  643A               	cpfsgt	ecu_keypad_get_value@counter^0,c
   663   0012E0  EF74  F009         	goto	u841
   664   0012E4  EF76  F009         	goto	u840
   665   0012E8                     u841:
   666   0012E8  EF63  F009         	goto	l1550
   667   0012EC                     u840:
   668   0012EC  503B               	movf	ecu_keypad_get_value@rows_counter^0,w,c
   669   0012EE  2432               	addwf	ecu_keypad_get_value@_keypad_config^0,w,c
   670   0012F0  6E28               	movwf	gpio_pin_write_logic@_pin_config^0,c
   671   0012F2  0E00               	movlw	0
   672   0012F4  2033               	addwfc	(ecu_keypad_get_value@_keypad_config+1)^0,w,c
   673   0012F6  6E29               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   674   0012F8  0E01               	movlw	1
   675   0012FA  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   676   0012FC  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
   677   001300                     
   678                           ;ECU_Layer/KeyPad/ecu_keypad.c: 66:             for(columns_counter = 0; columns_counter
      +                           < 4; columns_counter++)
   679   001300  0E00               	movlw	0
   680   001302  6E3C               	movwf	ecu_keypad_get_value@columns_counter^0,c
   681   001304                     l1564:
   682                           
   683                           ;ECU_Layer/KeyPad/ecu_keypad.c: 67:             {;ECU_Layer/KeyPad/ecu_keypad.c: 68:    
      +                                       ret = gpio_pin_read_logic(&_keypad_config->keypad_columns_pins[columns_coun
      +                          ter], &column_logic);
   684   001304  503C               	movf	ecu_keypad_get_value@columns_counter^0,w,c
   685   001306  2432               	addwf	ecu_keypad_get_value@_keypad_config^0,w,c
   686   001308  6E36               	movwf	??_ecu_keypad_get_value^0,c
   687   00130A  0E00               	movlw	0
   688   00130C  2033               	addwfc	(ecu_keypad_get_value@_keypad_config+1)^0,w,c
   689   00130E  6E37               	movwf	(??_ecu_keypad_get_value+1)^0,c
   690   001310  0E04               	movlw	4
   691   001312  2436               	addwf	??_ecu_keypad_get_value^0,w,c
   692   001314  6E28               	movwf	gpio_pin_read_logic@_pin_config^0,c
   693   001316  0E00               	movlw	0
   694   001318  2037               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
   695   00131A  6E29               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
   696   00131C  0E39               	movlw	low ecu_keypad_get_value@column_logic
   697   00131E  6E2A               	movwf	gpio_pin_read_logic@logic^0,c
   698   001320  0E00               	movlw	high ecu_keypad_get_value@column_logic
   699   001322  6E2B               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   700   001324  ECC8  F009         	call	_gpio_pin_read_logic	;wreg free
   701   001328  6E38               	movwf	ecu_keypad_get_value@ret^0,c
   702   00132A                     
   703                           ;ECU_Layer/KeyPad/ecu_keypad.c: 69:                 if(GPIO_HIGH == column_logic)
   704   00132A  0439               	decf	ecu_keypad_get_value@column_logic^0,w,c
   705   00132C  A4D8               	btfss	status,2,c
   706   00132E  EF9B  F009         	goto	u851
   707   001332  EF9D  F009         	goto	u850
   708   001336                     u851:
   709   001336  EFB4  F009         	goto	l1570
   710   00133A                     u850:
   711   00133A                     
   712                           ;ECU_Layer/KeyPad/ecu_keypad.c: 70:                 {;ECU_Layer/KeyPad/ecu_keypad.c: 71:
      +                                              *value = keypad_valus[rows_counter][columns_counter];
   713   00133A  503B               	movf	ecu_keypad_get_value@rows_counter^0,w,c
   714   00133C  0D04               	mullw	4
   715   00133E  0E01               	movlw	low _keypad_valus
   716   001340  24F3               	addwf	243,w,c
   717   001342  6E36               	movwf	??_ecu_keypad_get_value^0,c
   718   001344  0E10               	movlw	high _keypad_valus
   719   001346  20F4               	addwfc	prodh,w,c
   720   001348  6E37               	movwf	(??_ecu_keypad_get_value+1)^0,c
   721   00134A  503C               	movf	ecu_keypad_get_value@columns_counter^0,w,c
   722   00134C  2636               	addwf	??_ecu_keypad_get_value^0,f,c
   723   00134E  0E00               	movlw	0
   724   001350  2237               	addwfc	(??_ecu_keypad_get_value+1)^0,f,c
   725   001352  C036  FFF6         	movff	??_ecu_keypad_get_value,tblptrl
   726   001356  C037  FFF7         	movff	??_ecu_keypad_get_value+1,tblptrh
   727   00135A                     	if	0	;tblptru may be non-zero
   728   00135A                     	endif
   729   00135A                     	if	0	;tblptru may be non-zero
   730   00135A                     	endif
   731   00135A  C034  FFD9         	movff	ecu_keypad_get_value@value,fsr2l
   732   00135E  C035  FFDA         	movff	ecu_keypad_get_value@value+1,fsr2h
   733   001362  0008               	tblrd		*
   734   001364  CFF5 FFDF          	movff	tablat,indf2
   735   001368                     l1570:
   736                           
   737                           ;ECU_Layer/KeyPad/ecu_keypad.c: 73:             }
   738   001368  2A3C               	incf	ecu_keypad_get_value@columns_counter^0,f,c
   739   00136A  0E03               	movlw	3
   740   00136C  643C               	cpfsgt	ecu_keypad_get_value@columns_counter^0,c
   741   00136E  EFBB  F009         	goto	u861
   742   001372  EFBD  F009         	goto	u860
   743   001376                     u861:
   744   001376  EF82  F009         	goto	l1564
   745   00137A                     u860:
   746   00137A                     
   747                           ;ECU_Layer/KeyPad/ecu_keypad.c: 74:         }
   748   00137A  2A3B               	incf	ecu_keypad_get_value@rows_counter^0,f,c
   749   00137C  0E03               	movlw	3
   750   00137E  643B               	cpfsgt	ecu_keypad_get_value@rows_counter^0,c
   751   001380  EFC4  F009         	goto	u871
   752   001384  EFC6  F009         	goto	u870
   753   001388                     u871:
   754   001388  EF61  F009         	goto	l1544
   755   00138C                     u870:
   756   00138C                     l1578:
   757                           
   758                           ;ECU_Layer/KeyPad/ecu_keypad.c: 77:     return ret;
   759   00138C  5038               	movf	ecu_keypad_get_value@ret^0,w,c
   760   00138E  0012               	return		;funcret
   761   001390                     __end_of_ecu_keypad_get_value:
   762                           	callstack 0
   763                           
   764 ;; *************** function _gpio_pin_read_logic *****************
   765 ;; Defined at:
   766 ;;		line 117 in file "MCAL_Layer/GPIO/mcal_gpio.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   769 ;;		 -> keypad_1.keypad_columns_pins(4), keypad_1(8), 
   770 ;;  logic           2    2[COMRAM] PTR enum E2801
   771 ;;		 -> ecu_keypad_get_value@column_logic(1), ecu_button_read_state@pin_logic_state(1), 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  ret             1    9[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      unsigned char 
   776 ;; Registers used:
   777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;Total ram usage:       10 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_ecu_keypad_get_value
   793 ;;		_ecu_button_read_state
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798   001390                     __ptext4:
   799                           	callstack 0
   800   001390                     _gpio_pin_read_logic:
   801                           	callstack 29
   802   001390                     
   803                           ;MCAL_Layer/GPIO/mcal_gpio.c: 117: Std_ReturnType gpio_pin_read_logic(const pin_config_t
      +                          * _pin_config, logic_t* logic);MCAL_Layer/GPIO/mcal_gpio.c: 118: {;MCAL_Layer/GPIO/mcal_
      +                          gpio.c: 119:     Std_ReturnType ret = (Std_ReturnType)0x01;
   804   001390  0E01               	movlw	1
   805   001392  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   806   001394                     
   807                           ;MCAL_Layer/GPIO/mcal_gpio.c: 121:     if(((void*)0) == _pin_config || ((void*)0) == log
      +                          ic || _pin_config->pin > 7)
   808   001394  5028               	movf	gpio_pin_read_logic@_pin_config^0,w,c
   809   001396  1029               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
   810   001398  B4D8               	btfsc	status,2,c
   811   00139A  EFD1  F009         	goto	u761
   812   00139E  EFD3  F009         	goto	u760
   813   0013A2                     u761:
   814   0013A2  EFED  F009         	goto	l1494
   815   0013A6                     u760:
   816   0013A6  502A               	movf	gpio_pin_read_logic@logic^0,w,c
   817   0013A8  102B               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
   818   0013AA  B4D8               	btfsc	status,2,c
   819   0013AC  EFDA  F009         	goto	u771
   820   0013B0  EFDC  F009         	goto	u770
   821   0013B4                     u771:
   822   0013B4  EFED  F009         	goto	l1494
   823   0013B8                     u770:
   824   0013B8  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
   825   0013BC  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
   826   0013C0  30DF               	rrcf	223,w,c
   827   0013C2  32E8               	rrcf	wreg,f,c
   828   0013C4  32E8               	rrcf	wreg,f,c
   829   0013C6  0B07               	andlw	7
   830   0013C8  6E2C               	movwf	??_gpio_pin_read_logic^0,c
   831   0013CA  0E07               	movlw	7
   832   0013CC  642C               	cpfsgt	??_gpio_pin_read_logic^0,c
   833   0013CE  EFEB  F009         	goto	u781
   834   0013D2  EFED  F009         	goto	u780
   835   0013D6                     u781:
   836   0013D6  EFF1  F009         	goto	l1496
   837   0013DA                     u780:
   838   0013DA                     l1494:
   839                           
   840                           ;MCAL_Layer/GPIO/mcal_gpio.c: 122:     {;MCAL_Layer/GPIO/mcal_gpio.c: 123:         ret =
      +                           (Std_ReturnType)0x00;
   841   0013DA  0E00               	movlw	0
   842   0013DC  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   843                           
   844                           ;MCAL_Layer/GPIO/mcal_gpio.c: 124:     }
   845   0013DE  EF22  F00A         	goto	l1498
   846   0013E2                     l1496:
   847                           
   848                           ;MCAL_Layer/GPIO/mcal_gpio.c: 127:     {;MCAL_Layer/GPIO/mcal_gpio.c: 128:         *logi
      +                          c = ((*port_registers[_pin_config->port] >> _pin_config->pin) & (Std_ReturnType)1);
   849   0013E2  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
   850   0013E6  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
   851   0013EA  30DF               	rrcf	223,w,c
   852   0013EC  32E8               	rrcf	wreg,f,c
   853   0013EE  32E8               	rrcf	wreg,f,c
   854   0013F0  0B07               	andlw	7
   855   0013F2  6E2C               	movwf	??_gpio_pin_read_logic^0,c
   856   0013F4  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
   857   0013F8  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
   858   0013FC  50DF               	movf	223,w,c
   859   0013FE  0B07               	andlw	7
   860   001400  6E2D               	movwf	(??_gpio_pin_read_logic+1)^0,c
   861   001402  502D               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   862   001404  0D02               	mullw	2
   863   001406  0E01               	movlw	low _port_registers
   864   001408  24F3               	addwf	243,w,c
   865   00140A  6ED9               	movwf	fsr2l,c
   866   00140C  0E00               	movlw	high _port_registers
   867   00140E  20F4               	addwfc	prodh,w,c
   868   001410  6EDA               	movwf	fsr2h,c
   869   001412  CFDE F02E          	movff	postinc2,??_gpio_pin_read_logic+2
   870   001416  CFDD F02F          	movff	postdec2,??_gpio_pin_read_logic+3
   871   00141A  C02E  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
   872   00141E  C02F  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
   873   001422  50DF               	movf	indf2,w,c
   874   001424  6E30               	movwf	(??_gpio_pin_read_logic+4)^0,c
   875   001426  2A2C               	incf	??_gpio_pin_read_logic^0,f,c
   876   001428  EF18  F00A         	goto	u794
   877   00142C                     u795:
   878   00142C  90D8               	bcf	status,0,c
   879   00142E  3230               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
   880   001430                     u794:
   881   001430  2E2C               	decfsz	??_gpio_pin_read_logic^0,f,c
   882   001432  EF16  F00A         	goto	u795
   883   001436  5030               	movf	(??_gpio_pin_read_logic+4)^0,w,c
   884   001438  0B01               	andlw	1
   885   00143A  C02A  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
   886   00143E  C02B  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
   887   001442  6EDF               	movwf	indf2,c
   888   001444                     l1498:
   889                           
   890                           ;MCAL_Layer/GPIO/mcal_gpio.c: 131:     return ret;
   891   001444  5031               	movf	gpio_pin_read_logic@ret^0,w,c
   892   001446  0012               	return		;funcret
   893   001448                     __end_of_gpio_pin_read_logic:
   894                           	callstack 0
   895                           
   896 ;; *************** function _application_initialize *****************
   897 ;; Defined at:
   898 ;;		line 36 in file "application.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 4
   919 ;; This function calls:
   920 ;;		_ecu_layer_initialize
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text5
   927   001684                     __ptext5:
   928                           	callstack 0
   929   001684                     _application_initialize:
   930                           	callstack 26
   931   001684                     
   932                           ;application.c: 38:     ecu_layer_initialize();
   933   001684  EC35  F00B         	call	_ecu_layer_initialize	;wreg free
   934   001688  0012               	return		;funcret
   935   00168A                     __end_of_application_initialize:
   936                           	callstack 0
   937                           
   938 ;; *************** function _ecu_layer_initialize *****************
   939 ;; Defined at:
   940 ;;		line 60 in file "ECU_Layer/ecu_layer_init.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  ret             1    0        unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 3
   961 ;; This function calls:
   962 ;;		_ecu_keypad_initialize
   963 ;;		_ecu_led_initialize
   964 ;; This function is called by:
   965 ;;		_application_initialize
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text6
   970   00166A                     __ptext6:
   971                           	callstack 0
   972   00166A                     _ecu_layer_initialize:
   973                           	callstack 26
   974   00166A  0E27               	movlw	low _led_1
   975   00166C  6E36               	movwf	ecu_led_initialize@_led_config^0,c
   976   00166E  0E00               	movlw	high _led_1
   977   001670  6E37               	movwf	(ecu_led_initialize@_led_config+1)^0,c
   978   001672  ECE3  F00A         	call	_ecu_led_initialize	;wreg free
   979   001676  0E1F               	movlw	low _keypad_1
   980   001678  6E36               	movwf	ecu_keypad_initialize@_keypad_config^0,c
   981   00167A  0E00               	movlw	high _keypad_1
   982   00167C  6E37               	movwf	(ecu_keypad_initialize@_keypad_config+1)^0,c
   983   00167E  EC24  F00A         	call	_ecu_keypad_initialize	;wreg free
   984   001682  0012               	return		;funcret
   985   001684                     __end_of_ecu_layer_initialize:
   986                           	callstack 0
   987                           
   988 ;; *************** function _ecu_led_initialize *****************
   989 ;; Defined at:
   990 ;;		line 15 in file "ECU_Layer/LED/ecu_led.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  _led_config     2   14[COMRAM] PTR const struct .
   993 ;;		 -> led_1(1), 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  ret             1   16[COMRAM] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      unsigned char 
   998 ;; Registers used:
   999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;Total ram usage:        3 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 2
  1012 ;; This function calls:
  1013 ;;		_gpio_pin_initialize
  1014 ;; This function is called by:
  1015 ;;		_ecu_layer_initialize
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text7
  1020   0015C6                     __ptext7:
  1021                           	callstack 0
  1022   0015C6                     _ecu_led_initialize:
  1023                           	callstack 26
  1024   0015C6                     
  1025                           ;ECU_Layer/LED/ecu_led.c: 19:     if(((void*)0) == _led_config)
  1026   0015C6  5036               	movf	ecu_led_initialize@_led_config^0,w,c
  1027   0015C8  1037               	iorwf	(ecu_led_initialize@_led_config+1)^0,w,c
  1028   0015CA  A4D8               	btfss	status,2,c
  1029   0015CC  EFEA  F00A         	goto	u721
  1030   0015D0  EFEC  F00A         	goto	u720
  1031   0015D4                     u721:
  1032   0015D4  EFF0  F00A         	goto	l1446
  1033   0015D8                     u720:
  1034   0015D8                     
  1035                           ;ECU_Layer/LED/ecu_led.c: 20:     {;ECU_Layer/LED/ecu_led.c: 21:         ret = (Std_Retu
      +                          rnType)0x00;
  1036   0015D8  0E00               	movlw	0
  1037   0015DA  6E38               	movwf	ecu_led_initialize@ret^0,c
  1038                           
  1039                           ;ECU_Layer/LED/ecu_led.c: 22:     }
  1040   0015DC  EFF7  F00A         	goto	l1448
  1041   0015E0                     l1446:
  1042                           
  1043                           ;ECU_Layer/LED/ecu_led.c: 25:     {;ECU_Layer/LED/ecu_led.c: 26:         ret = gpio_pin_
      +                          initialize(&_led_config->led_pin);
  1044   0015E0  C036  F032         	movff	ecu_led_initialize@_led_config,gpio_pin_initialize@_pin_config
  1045   0015E4  C037  F033         	movff	ecu_led_initialize@_led_config+1,gpio_pin_initialize@_pin_config+1
  1046   0015E8  EC64  F00A         	call	_gpio_pin_initialize	;wreg free
  1047   0015EC  6E38               	movwf	ecu_led_initialize@ret^0,c
  1048   0015EE                     l1448:
  1049                           
  1050                           ;ECU_Layer/LED/ecu_led.c: 29:     return ret;
  1051   0015EE  5038               	movf	ecu_led_initialize@ret^0,w,c
  1052   0015F0  0012               	return		;funcret
  1053   0015F2                     __end_of_ecu_led_initialize:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _ecu_keypad_initialize *****************
  1057 ;; Defined at:
  1058 ;;		line 18 in file "ECU_Layer/KeyPad/ecu_keypad.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  _keypad_conf    2   14[COMRAM] PTR const struct .
  1061 ;;		 -> keypad_1(8), 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  columns_coun    1   20[COMRAM] unsigned char 
  1064 ;;  rows_counter    1   19[COMRAM] unsigned char 
  1065 ;;  ret             1   18[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      unsigned char 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        7 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 2
  1082 ;; This function calls:
  1083 ;;		_gpio_pin_direction_initialize
  1084 ;;		_gpio_pin_initialize
  1085 ;; This function is called by:
  1086 ;;		_ecu_layer_initialize
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text8
  1091   001448                     __ptext8:
  1092                           	callstack 0
  1093   001448                     _ecu_keypad_initialize:
  1094                           	callstack 26
  1095   001448                     
  1096                           ;ECU_Layer/KeyPad/ecu_keypad.c: 21:     uint8 rows_counter = 0, columns_counter = 0;
  1097   001448  0E00               	movlw	0
  1098   00144A  6E3B               	movwf	ecu_keypad_initialize@rows_counter^0,c
  1099   00144C  0E00               	movlw	0
  1100   00144E  6E3C               	movwf	ecu_keypad_initialize@columns_counter^0,c
  1101   001450                     
  1102                           ;ECU_Layer/KeyPad/ecu_keypad.c: 23:     if(((void*)0) == _keypad_config)
  1103   001450  5036               	movf	ecu_keypad_initialize@_keypad_config^0,w,c
  1104   001452  1037               	iorwf	(ecu_keypad_initialize@_keypad_config+1)^0,w,c
  1105   001454  A4D8               	btfss	status,2,c
  1106   001456  EF2F  F00A         	goto	u731
  1107   00145A  EF31  F00A         	goto	u730
  1108   00145E                     u731:
  1109   00145E  EF35  F00A         	goto	l1458
  1110   001462                     u730:
  1111   001462                     
  1112                           ;ECU_Layer/KeyPad/ecu_keypad.c: 24:     {;ECU_Layer/KeyPad/ecu_keypad.c: 25:         ret
      +                           = (Std_ReturnType)0x00;
  1113   001462  0E00               	movlw	0
  1114   001464  6E3A               	movwf	ecu_keypad_initialize@ret^0,c
  1115                           
  1116                           ;ECU_Layer/KeyPad/ecu_keypad.c: 26:     }
  1117   001466  EF62  F00A         	goto	l1482
  1118   00146A                     l1458:
  1119                           
  1120                           ;ECU_Layer/KeyPad/ecu_keypad.c: 29:     {;ECU_Layer/KeyPad/ecu_keypad.c: 30:         for
      +                          (rows_counter = 0; rows_counter < 4; rows_counter++)
  1121   00146A  0E00               	movlw	0
  1122   00146C  6E3B               	movwf	ecu_keypad_initialize@rows_counter^0,c
  1123   00146E                     l1464:
  1124   00146E  503B               	movf	ecu_keypad_initialize@rows_counter^0,w,c
  1125   001470  2436               	addwf	ecu_keypad_initialize@_keypad_config^0,w,c
  1126   001472  6E32               	movwf	gpio_pin_initialize@_pin_config^0,c
  1127   001474  0E00               	movlw	0
  1128   001476  2037               	addwfc	(ecu_keypad_initialize@_keypad_config+1)^0,w,c
  1129   001478  6E33               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1130   00147A  EC64  F00A         	call	_gpio_pin_initialize	;wreg free
  1131   00147E                     
  1132                           ;ECU_Layer/KeyPad/ecu_keypad.c: 33:         }
  1133   00147E  2A3B               	incf	ecu_keypad_initialize@rows_counter^0,f,c
  1134   001480  0E03               	movlw	3
  1135   001482  643B               	cpfsgt	ecu_keypad_initialize@rows_counter^0,c
  1136   001484  EF46  F00A         	goto	u741
  1137   001488  EF48  F00A         	goto	u740
  1138   00148C                     u741:
  1139   00148C  EF37  F00A         	goto	l1464
  1140   001490                     u740:
  1141   001490                     
  1142                           ;ECU_Layer/KeyPad/ecu_keypad.c: 35:         for(columns_counter = 0; columns_counter < 4
      +                          ; columns_counter++)
  1143   001490  0E00               	movlw	0
  1144   001492  6E3C               	movwf	ecu_keypad_initialize@columns_counter^0,c
  1145   001494                     l1476:
  1146                           
  1147                           ;ECU_Layer/KeyPad/ecu_keypad.c: 36:         {;ECU_Layer/KeyPad/ecu_keypad.c: 37:        
      +                               ret = gpio_pin_direction_initialize(&_keypad_config->keypad_columns_pins[columns_co
      +                          unter]);
  1148   001494  503C               	movf	ecu_keypad_initialize@columns_counter^0,w,c
  1149   001496  2436               	addwf	ecu_keypad_initialize@_keypad_config^0,w,c
  1150   001498  6E38               	movwf	??_ecu_keypad_initialize^0,c
  1151   00149A  0E00               	movlw	0
  1152   00149C  2037               	addwfc	(ecu_keypad_initialize@_keypad_config+1)^0,w,c
  1153   00149E  6E39               	movwf	(??_ecu_keypad_initialize+1)^0,c
  1154   0014A0  0E04               	movlw	4
  1155   0014A2  2438               	addwf	??_ecu_keypad_initialize^0,w,c
  1156   0014A4  6E28               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1157   0014A6  0E00               	movlw	0
  1158   0014A8  2039               	addwfc	(??_ecu_keypad_initialize+1)^0,w,c
  1159   0014AA  6E29               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1160   0014AC  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1161   0014B0  6E3A               	movwf	ecu_keypad_initialize@ret^0,c
  1162   0014B2                     
  1163                           ;ECU_Layer/KeyPad/ecu_keypad.c: 38:         }
  1164   0014B2  2A3C               	incf	ecu_keypad_initialize@columns_counter^0,f,c
  1165   0014B4  0E03               	movlw	3
  1166   0014B6  643C               	cpfsgt	ecu_keypad_initialize@columns_counter^0,c
  1167   0014B8  EF60  F00A         	goto	u751
  1168   0014BC  EF62  F00A         	goto	u750
  1169   0014C0                     u751:
  1170   0014C0  EF4A  F00A         	goto	l1476
  1171   0014C4                     u750:
  1172   0014C4                     l1482:
  1173                           
  1174                           ;ECU_Layer/KeyPad/ecu_keypad.c: 41:     return ret;
  1175   0014C4  503A               	movf	ecu_keypad_initialize@ret^0,w,c
  1176   0014C6  0012               	return		;funcret
  1177   0014C8                     __end_of_ecu_keypad_initialize:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _gpio_pin_initialize *****************
  1181 ;; Defined at:
  1182 ;;		line 161 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  1185 ;;		 -> keypad_1.keypad_rows_pins(4), led_1(1), keypad_1(8), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  ret             1   13[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      unsigned char 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        4 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 1
  1204 ;; This function calls:
  1205 ;;		_gpio_pin_direction_initialize
  1206 ;;		_gpio_pin_write_logic
  1207 ;; This function is called by:
  1208 ;;		_ecu_led_initialize
  1209 ;;		_ecu_keypad_initialize
  1210 ;;		_ecu_7_segment_initialize
  1211 ;;		_ecu_dc_motor_initialize
  1212 ;;		_ecu_dc_motor_stop
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text9
  1217   0014C8                     __ptext9:
  1218                           	callstack 0
  1219   0014C8                     _gpio_pin_initialize:
  1220                           	callstack 26
  1221   0014C8                     
  1222                           ;MCAL_Layer/GPIO/mcal_gpio.c: 165:     if(((void*)0) == _pin_config || _pin_config->pin 
      +                          > 7)
  1223   0014C8  5032               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1224   0014CA  1033               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  1225   0014CC  B4D8               	btfsc	status,2,c
  1226   0014CE  EF6B  F00A         	goto	u701
  1227   0014D2  EF6D  F00A         	goto	u700
  1228   0014D6                     u701:
  1229   0014D6  EF7E  F00A         	goto	l1432
  1230   0014DA                     u700:
  1231   0014DA  C032  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1232   0014DE  C033  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1233   0014E2  30DF               	rrcf	223,w,c
  1234   0014E4  32E8               	rrcf	wreg,f,c
  1235   0014E6  32E8               	rrcf	wreg,f,c
  1236   0014E8  0B07               	andlw	7
  1237   0014EA  6E34               	movwf	??_gpio_pin_initialize^0,c
  1238   0014EC  0E07               	movlw	7
  1239   0014EE  6434               	cpfsgt	??_gpio_pin_initialize^0,c
  1240   0014F0  EF7C  F00A         	goto	u711
  1241   0014F4  EF7E  F00A         	goto	u710
  1242   0014F8                     u711:
  1243   0014F8  EF82  F00A         	goto	l1434
  1244   0014FC                     u710:
  1245   0014FC                     l1432:
  1246                           
  1247                           ;MCAL_Layer/GPIO/mcal_gpio.c: 166:     {;MCAL_Layer/GPIO/mcal_gpio.c: 167:         ret =
      +                           (Std_ReturnType)0x00;
  1248   0014FC  0E00               	movlw	0
  1249   0014FE  6E35               	movwf	gpio_pin_initialize@ret^0,c
  1250                           
  1251                           ;MCAL_Layer/GPIO/mcal_gpio.c: 168:     }
  1252   001500  EF98  F00A         	goto	l1436
  1253   001504                     l1434:
  1254                           
  1255                           ;MCAL_Layer/GPIO/mcal_gpio.c: 171:     {;MCAL_Layer/GPIO/mcal_gpio.c: 172:         ret =
      +                           gpio_pin_direction_initialize(_pin_config);
  1256   001504  C032  F028         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1257   001508  C033  F029         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  1258   00150C  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1259   001510  6E35               	movwf	gpio_pin_initialize@ret^0,c
  1260                           
  1261                           ;MCAL_Layer/GPIO/mcal_gpio.c: 173:         ret = gpio_pin_write_logic(_pin_config, _pin_
      +                          config->logic);
  1262   001512  C032  F028         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1263   001516  C033  F029         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1264   00151A  C032  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1265   00151E  C033  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1266   001522  0E00               	movlw	0
  1267   001524  BEDF               	btfsc	indf2,7,c
  1268   001526  0E01               	movlw	1
  1269   001528  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  1270   00152A  ECAB  F008         	call	_gpio_pin_write_logic	;wreg free
  1271   00152E  6E35               	movwf	gpio_pin_initialize@ret^0,c
  1272   001530                     l1436:
  1273                           
  1274                           ;MCAL_Layer/GPIO/mcal_gpio.c: 176:     return ret;
  1275   001530  5035               	movf	gpio_pin_initialize@ret^0,w,c
  1276   001532  0012               	return		;funcret
  1277   001534                     __end_of_gpio_pin_initialize:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _gpio_pin_write_logic *****************
  1281 ;; Defined at:
  1282 ;;		line 83 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1285 ;;		 -> keypad_1.keypad_rows_pins(4), led_1(1), keypad_1(8), 
  1286 ;;  logic           1    2[COMRAM] enum E2801
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  ret             1    9[COMRAM] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;Total ram usage:       10 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_ecu_led_turn_off
  1308 ;;		_ecu_led_turn_on
  1309 ;;		_gpio_pin_initialize
  1310 ;;		_ecu_keypad_get_value
  1311 ;;		_ecu_7_segment_write_number
  1312 ;;		_ecu_dc_motor_move_right
  1313 ;;		_ecu_dc_motor_move_left
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text10
  1318   001156                     __ptext10:
  1319                           	callstack 0
  1320   001156                     _gpio_pin_write_logic:
  1321                           	callstack 29
  1322   001156                     
  1323                           ;MCAL_Layer/GPIO/mcal_gpio.c: 83: Std_ReturnType gpio_pin_write_logic(const pin_config_t
      +                          * _pin_config, logic_t logic);MCAL_Layer/GPIO/mcal_gpio.c: 84: {;MCAL_Layer/GPIO/mcal_gp
      +                          io.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1324   001156  0E01               	movlw	1
  1325   001158  6E31               	movwf	gpio_pin_write_logic@ret^0,c
  1326   00115A                     
  1327                           ;MCAL_Layer/GPIO/mcal_gpio.c: 87:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  1328   00115A  5028               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1329   00115C  1029               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  1330   00115E  B4D8               	btfsc	status,2,c
  1331   001160  EFB4  F008         	goto	u601
  1332   001164  EFB6  F008         	goto	u600
  1333   001168                     u601:
  1334   001168  EFC7  F008         	goto	l1384
  1335   00116C                     u600:
  1336   00116C  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1337   001170  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1338   001174  30DF               	rrcf	223,w,c
  1339   001176  32E8               	rrcf	wreg,f,c
  1340   001178  32E8               	rrcf	wreg,f,c
  1341   00117A  0B07               	andlw	7
  1342   00117C  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1343   00117E  0E07               	movlw	7
  1344   001180  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  1345   001182  EFC5  F008         	goto	u611
  1346   001186  EFC7  F008         	goto	u610
  1347   00118A                     u611:
  1348   00118A  EF2A  F009         	goto	l1392
  1349   00118E                     u610:
  1350   00118E                     l1384:
  1351                           
  1352                           ;MCAL_Layer/GPIO/mcal_gpio.c: 88:     {;MCAL_Layer/GPIO/mcal_gpio.c: 89:         ret = (
      +                          Std_ReturnType)0x00;
  1353   00118E  0E00               	movlw	0
  1354   001190  6E31               	movwf	gpio_pin_write_logic@ret^0,c
  1355                           
  1356                           ;MCAL_Layer/GPIO/mcal_gpio.c: 90:     }
  1357   001192  EF3F  F009         	goto	l1394
  1358   001196                     l1386:
  1359                           
  1360                           ;MCAL_Layer/GPIO/mcal_gpio.c: 97:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((Std_ReturnType)1 << _pin_config->pin));
  1361   001196  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1362   00119A  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1363   00119E  30DF               	rrcf	223,w,c
  1364   0011A0  32E8               	rrcf	wreg,f,c
  1365   0011A2  32E8               	rrcf	wreg,f,c
  1366   0011A4  0B07               	andlw	7
  1367   0011A6  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1368   0011A8  0E01               	movlw	1
  1369   0011AA  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1370   0011AC  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1371   0011AE  EFDB  F008         	goto	u624
  1372   0011B2                     u625:
  1373   0011B2  90D8               	bcf	status,0,c
  1374   0011B4  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1375   0011B6                     u624:
  1376   0011B6  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1377   0011B8  EFD9  F008         	goto	u625
  1378   0011BC  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1379   0011BE  0AFF               	xorlw	255
  1380   0011C0  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1381   0011C2  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1382   0011C6  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1383   0011CA  50DF               	movf	223,w,c
  1384   0011CC  0B07               	andlw	7
  1385   0011CE  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1386   0011D0  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1387   0011D2  0D02               	mullw	2
  1388   0011D4  0E0B               	movlw	low _lat_registers
  1389   0011D6  24F3               	addwf	243,w,c
  1390   0011D8  6ED9               	movwf	fsr2l,c
  1391   0011DA  0E00               	movlw	high _lat_registers
  1392   0011DC  20F4               	addwfc	prodh,w,c
  1393   0011DE  6EDA               	movwf	fsr2h,c
  1394   0011E0  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  1395   0011E4  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  1396   0011E8  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1397   0011EC  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1398   0011F0  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1399   0011F2  16DF               	andwf	indf2,f,c
  1400                           
  1401                           ;MCAL_Layer/GPIO/mcal_gpio.c: 98:                 break;
  1402   0011F4  EF3F  F009         	goto	l1394
  1403   0011F8                     l1388:
  1404                           
  1405                           ;MCAL_Layer/GPIO/mcal_gpio.c: 101:                 (*lat_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  1406   0011F8  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1407   0011FC  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1408   001200  30DF               	rrcf	223,w,c
  1409   001202  32E8               	rrcf	wreg,f,c
  1410   001204  32E8               	rrcf	wreg,f,c
  1411   001206  0B07               	andlw	7
  1412   001208  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1413   00120A  0E01               	movlw	1
  1414   00120C  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1415   00120E  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1416   001210  EF0C  F009         	goto	u634
  1417   001214                     u635:
  1418   001214  90D8               	bcf	status,0,c
  1419   001216  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1420   001218                     u634:
  1421   001218  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1422   00121A  EF0A  F009         	goto	u635
  1423   00121E  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1424   001222  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1425   001226  50DF               	movf	223,w,c
  1426   001228  0B07               	andlw	7
  1427   00122A  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1428   00122C  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1429   00122E  0D02               	mullw	2
  1430   001230  0E0B               	movlw	low _lat_registers
  1431   001232  24F3               	addwf	243,w,c
  1432   001234  6ED9               	movwf	fsr2l,c
  1433   001236  0E00               	movlw	high _lat_registers
  1434   001238  20F4               	addwfc	prodh,w,c
  1435   00123A  6EDA               	movwf	fsr2h,c
  1436   00123C  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  1437   001240  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  1438   001244  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1439   001248  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1440   00124C  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1441   00124E  12DF               	iorwf	indf2,f,c
  1442                           
  1443                           ;MCAL_Layer/GPIO/mcal_gpio.c: 102:                 break;
  1444   001250  EF3F  F009         	goto	l1394
  1445   001254                     l1392:
  1446   001254  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  1447   001256  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1448   001258  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ;	Chosen strategy is simple_byte
  1457   00125A  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1458   00125C  0A00               	xorlw	0	; case 0
  1459   00125E  B4D8               	btfsc	status,2,c
  1460   001260  EF34  F009         	goto	l1706
  1461   001264  EFC7  F008         	goto	l1384
  1462   001268                     l1706:
  1463                           
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 2, Range of values is 0 to 1
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte            7     4 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470   001268  502B               	movf	??_gpio_pin_write_logic^0,w,c
  1471   00126A  0A00               	xorlw	0	; case 0
  1472   00126C  B4D8               	btfsc	status,2,c
  1473   00126E  EFCB  F008         	goto	l1386
  1474   001272  0A01               	xorlw	1	; case 1
  1475   001274  B4D8               	btfsc	status,2,c
  1476   001276  EFFC  F008         	goto	l1388
  1477   00127A  EFC7  F008         	goto	l1384
  1478   00127E                     l1394:
  1479                           
  1480                           ;MCAL_Layer/GPIO/mcal_gpio.c: 108:     return ret;
  1481   00127E  5031               	movf	gpio_pin_write_logic@ret^0,w,c
  1482   001280  0012               	return		;funcret
  1483   001282                     __end_of_gpio_pin_write_logic:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _gpio_pin_direction_initialize *****************
  1487 ;; Defined at:
  1488 ;;		line 25 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1491 ;;		 -> keypad_1.keypad_columns_pins(4), keypad_1.keypad_rows_pins(4), led_1(1), keypad_1(8), 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  ret             1    8[COMRAM] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      unsigned char 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        9 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_gpio_pin_initialize
  1513 ;;		_ecu_keypad_initialize
  1514 ;;		_ecu_button_initialize
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text11
  1519   001012                     __ptext11:
  1520                           	callstack 0
  1521   001012                     _gpio_pin_direction_initialize:
  1522                           	callstack 26
  1523   001012                     
  1524                           ;MCAL_Layer/GPIO/mcal_gpio.c: 25: Std_ReturnType gpio_pin_direction_initialize(const pin
      +                          _config_t* _pin_config);MCAL_Layer/GPIO/mcal_gpio.c: 26: {;MCAL_Layer/GPIO/mcal_gpio.c: 
      +                          27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1525   001012  0E01               	movlw	1
  1526   001014  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  1527   001016                     
  1528                           ;MCAL_Layer/GPIO/mcal_gpio.c: 29:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           7)
  1529   001016  5028               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1530   001018  1029               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  1531   00101A  B4D8               	btfsc	status,2,c
  1532   00101C  EF12  F008         	goto	u641
  1533   001020  EF14  F008         	goto	u640
  1534   001024                     u641:
  1535   001024  EF25  F008         	goto	l1408
  1536   001028                     u640:
  1537   001028  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1538   00102C  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1539   001030  30DF               	rrcf	223,w,c
  1540   001032  32E8               	rrcf	wreg,f,c
  1541   001034  32E8               	rrcf	wreg,f,c
  1542   001036  0B07               	andlw	7
  1543   001038  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  1544   00103A  0E07               	movlw	7
  1545   00103C  642A               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1546   00103E  EF23  F008         	goto	u651
  1547   001042  EF25  F008         	goto	u650
  1548   001046                     u651:
  1549   001046  EF88  F008         	goto	l1416
  1550   00104A                     u650:
  1551   00104A                     l1408:
  1552                           
  1553                           ;MCAL_Layer/GPIO/mcal_gpio.c: 30:     {;MCAL_Layer/GPIO/mcal_gpio.c: 31:         ret = (
      +                          Std_ReturnType)0x00;
  1554   00104A  0E00               	movlw	0
  1555   00104C  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  1556                           
  1557                           ;MCAL_Layer/GPIO/mcal_gpio.c: 32:     }
  1558   00104E  EFA9  F008         	goto	l1418
  1559   001052                     l1410:
  1560                           
  1561                           ;MCAL_Layer/GPIO/mcal_gpio.c: 39:                 (*tris_registers[_pin_config->port] &=
      +                           ~((Std_ReturnType)1 << _pin_config->pin));
  1562   001052  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1563   001056  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1564   00105A  30DF               	rrcf	223,w,c
  1565   00105C  32E8               	rrcf	wreg,f,c
  1566   00105E  32E8               	rrcf	wreg,f,c
  1567   001060  0B07               	andlw	7
  1568   001062  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  1569   001064  0E01               	movlw	1
  1570   001066  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1571   001068  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  1572   00106A  EF39  F008         	goto	u664
  1573   00106E                     u665:
  1574   00106E  90D8               	bcf	status,0,c
  1575   001070  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1576   001072                     u664:
  1577   001072  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1578   001074  EF37  F008         	goto	u665
  1579   001078  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1580   00107A  0AFF               	xorlw	255
  1581   00107C  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1582   00107E  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1583   001082  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1584   001086  50DF               	movf	223,w,c
  1585   001088  0B07               	andlw	7
  1586   00108A  6E2D               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1587   00108C  502D               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1588   00108E  0D02               	mullw	2
  1589   001090  0E15               	movlw	low _tris_registers
  1590   001092  24F3               	addwf	243,w,c
  1591   001094  6ED9               	movwf	fsr2l,c
  1592   001096  0E00               	movlw	high _tris_registers
  1593   001098  20F4               	addwfc	prodh,w,c
  1594   00109A  6EDA               	movwf	fsr2h,c
  1595   00109C  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1596   0010A0  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1597   0010A4  C02E  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1598   0010A8  C02F  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1599   0010AC  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1600   0010AE  16DF               	andwf	indf2,f,c
  1601                           
  1602                           ;MCAL_Layer/GPIO/mcal_gpio.c: 40:                 break;
  1603   0010B0  EFA9  F008         	goto	l1418
  1604   0010B4                     l1412:
  1605                           
  1606                           ;MCAL_Layer/GPIO/mcal_gpio.c: 43:                 (*tris_registers[_pin_config->port] |=
      +                           ((Std_ReturnType)1 << _pin_config->pin));
  1607   0010B4  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1608   0010B8  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1609   0010BC  30DF               	rrcf	223,w,c
  1610   0010BE  32E8               	rrcf	wreg,f,c
  1611   0010C0  32E8               	rrcf	wreg,f,c
  1612   0010C2  0B07               	andlw	7
  1613   0010C4  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  1614   0010C6  0E01               	movlw	1
  1615   0010C8  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1616   0010CA  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  1617   0010CC  EF6A  F008         	goto	u674
  1618   0010D0                     u675:
  1619   0010D0  90D8               	bcf	status,0,c
  1620   0010D2  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1621   0010D4                     u674:
  1622   0010D4  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1623   0010D6  EF68  F008         	goto	u675
  1624   0010DA  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1625   0010DE  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1626   0010E2  50DF               	movf	223,w,c
  1627   0010E4  0B07               	andlw	7
  1628   0010E6  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1629   0010E8  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1630   0010EA  0D02               	mullw	2
  1631   0010EC  0E15               	movlw	low _tris_registers
  1632   0010EE  24F3               	addwf	243,w,c
  1633   0010F0  6ED9               	movwf	fsr2l,c
  1634   0010F2  0E00               	movlw	high _tris_registers
  1635   0010F4  20F4               	addwfc	prodh,w,c
  1636   0010F6  6EDA               	movwf	fsr2h,c
  1637   0010F8  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1638   0010FC  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1639   001100  C02D  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1640   001104  C02E  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1641   001108  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1642   00110A  12DF               	iorwf	indf2,f,c
  1643                           
  1644                           ;MCAL_Layer/GPIO/mcal_gpio.c: 44:                 break;
  1645   00110C  EFA9  F008         	goto	l1418
  1646   001110                     l1416:
  1647   001110  C028  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1648   001114  C029  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1649   001118  BCDF               	btfsc	indf2,6,c
  1650   00111A  EF91  F008         	goto	u681
  1651   00111E  EF94  F008         	goto	u680
  1652   001122                     u681:
  1653   001122  0E01               	movlw	1
  1654   001124  EF95  F008         	goto	u690
  1655   001128                     u680:
  1656   001128  0E00               	movlw	0
  1657   00112A                     u690:
  1658   00112A  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  1659   00112C  6A2B               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1660                           
  1661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 1, Range of values is 0 to 0
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte            4     3 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668   00112E  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1669   001130  0A00               	xorlw	0	; case 0
  1670   001132  B4D8               	btfsc	status,2,c
  1671   001134  EF9E  F008         	goto	l1708
  1672   001138  EF25  F008         	goto	l1408
  1673   00113C                     l1708:
  1674                           
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 2, Range of values is 0 to 1
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            7     4 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681   00113C  502A               	movf	??_gpio_pin_direction_initialize^0,w,c
  1682   00113E  0A00               	xorlw	0	; case 0
  1683   001140  B4D8               	btfsc	status,2,c
  1684   001142  EF29  F008         	goto	l1410
  1685   001146  0A01               	xorlw	1	; case 1
  1686   001148  B4D8               	btfsc	status,2,c
  1687   00114A  EF5A  F008         	goto	l1412
  1688   00114E  EF25  F008         	goto	l1408
  1689   001152                     l1418:
  1690                           
  1691                           ;MCAL_Layer/GPIO/mcal_gpio.c: 51:     return ret;
  1692   001152  5030               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1693   001154  0012               	return		;funcret
  1694   001156                     __end_of_gpio_pin_direction_initialize:
  1695                           	callstack 0
  1696                           
  1697                           	psect	rparam
  1698   000000                     
  1699                           	psect	idloc
  1700                           
  1701                           ;Config register IDLOC0 @ 0x200000
  1702                           ;	unspecified, using default values
  1703   200000                     	org	2097152
  1704   200000  FF                 	db	255
  1705                           
  1706                           ;Config register IDLOC1 @ 0x200001
  1707                           ;	unspecified, using default values
  1708   200001                     	org	2097153
  1709   200001  FF                 	db	255
  1710                           
  1711                           ;Config register IDLOC2 @ 0x200002
  1712                           ;	unspecified, using default values
  1713   200002                     	org	2097154
  1714   200002  FF                 	db	255
  1715                           
  1716                           ;Config register IDLOC3 @ 0x200003
  1717                           ;	unspecified, using default values
  1718   200003                     	org	2097155
  1719   200003  FF                 	db	255
  1720                           
  1721                           ;Config register IDLOC4 @ 0x200004
  1722                           ;	unspecified, using default values
  1723   200004                     	org	2097156
  1724   200004  FF                 	db	255
  1725                           
  1726                           ;Config register IDLOC5 @ 0x200005
  1727                           ;	unspecified, using default values
  1728   200005                     	org	2097157
  1729   200005  FF                 	db	255
  1730                           
  1731                           ;Config register IDLOC6 @ 0x200006
  1732                           ;	unspecified, using default values
  1733   200006                     	org	2097158
  1734   200006  FF                 	db	255
  1735                           
  1736                           ;Config register IDLOC7 @ 0x200007
  1737                           ;	unspecified, using default values
  1738   200007                     	org	2097159
  1739   200007  FF                 	db	255
  1740                           
  1741                           	psect	config
  1742                           
  1743                           ; Padding undefined space
  1744   300000                     	org	3145728
  1745   300000  FF                 	db	255
  1746                           
  1747                           ;Config register CONFIG1H @ 0x300001
  1748                           ;	unspecified, using default values
  1749                           ;	Oscillator Selection bits
  1750                           ;	OSC = 0x7, unprogrammed default
  1751                           ;	Fail-Safe Clock Monitor Enable bit
  1752                           ;	FCMEN = 0x0, unprogrammed default
  1753                           ;	Internal/External Oscillator Switchover bit
  1754                           ;	IESO = 0x0, unprogrammed default
  1755   300001                     	org	3145729
  1756   300001  07                 	db	7
  1757                           
  1758                           ;Config register CONFIG2L @ 0x300002
  1759                           ;	unspecified, using default values
  1760                           ;	Power-up Timer Enable bit
  1761                           ;	PWRT = 0x1, unprogrammed default
  1762                           ;	Brown-out Reset Enable bits
  1763                           ;	BOREN = 0x3, unprogrammed default
  1764                           ;	Brown Out Reset Voltage bits
  1765                           ;	BORV = 0x3, unprogrammed default
  1766   300002                     	org	3145730
  1767   300002  1F                 	db	31
  1768                           
  1769                           ;Config register CONFIG2H @ 0x300003
  1770                           ;	unspecified, using default values
  1771                           ;	Watchdog Timer Enable bit
  1772                           ;	WDT = 0x1, unprogrammed default
  1773                           ;	Watchdog Timer Postscale Select bits
  1774                           ;	WDTPS = 0xF, unprogrammed default
  1775   300003                     	org	3145731
  1776   300003  1F                 	db	31
  1777                           
  1778                           ; Padding undefined space
  1779   300004                     	org	3145732
  1780   300004  FF                 	db	255
  1781                           
  1782                           ;Config register CONFIG3H @ 0x300005
  1783                           ;	unspecified, using default values
  1784                           ;	CCP2 MUX bit
  1785                           ;	CCP2MX = 0x1, unprogrammed default
  1786                           ;	PORTB A/D Enable bit
  1787                           ;	PBADEN = 0x1, unprogrammed default
  1788                           ;	Low-Power Timer1 Oscillator Enable bit
  1789                           ;	LPT1OSC = 0x0, unprogrammed default
  1790                           ;	MCLR Pin Enable bit
  1791                           ;	MCLRE = 0x1, unprogrammed default
  1792   300005                     	org	3145733
  1793   300005  83                 	db	131
  1794                           
  1795                           ;Config register CONFIG4L @ 0x300006
  1796                           ;	unspecified, using default values
  1797                           ;	Stack Full/Underflow Reset Enable bit
  1798                           ;	STVREN = 0x1, unprogrammed default
  1799                           ;	Single-Supply ICSP Enable bit
  1800                           ;	LVP = 0x1, unprogrammed default
  1801                           ;	Extended Instruction Set Enable bit
  1802                           ;	XINST = 0x0, unprogrammed default
  1803                           ;	Background Debugger Enable bit
  1804                           ;	DEBUG = 0x1, unprogrammed default
  1805   300006                     	org	3145734
  1806   300006  85                 	db	133
  1807                           
  1808                           ; Padding undefined space
  1809   300007                     	org	3145735
  1810   300007  FF                 	db	255
  1811                           
  1812                           ;Config register CONFIG5L @ 0x300008
  1813                           ;	unspecified, using default values
  1814                           ;	Code Protection bit
  1815                           ;	CP0 = 0x1, unprogrammed default
  1816                           ;	Code Protection bit
  1817                           ;	CP1 = 0x1, unprogrammed default
  1818                           ;	Code Protection bit
  1819                           ;	CP2 = 0x1, unprogrammed default
  1820                           ;	Code Protection bit
  1821                           ;	CP3 = 0x1, unprogrammed default
  1822   300008                     	org	3145736
  1823   300008  0F                 	db	15
  1824                           
  1825                           ;Config register CONFIG5H @ 0x300009
  1826                           ;	unspecified, using default values
  1827                           ;	Boot Block Code Protection bit
  1828                           ;	CPB = 0x1, unprogrammed default
  1829                           ;	Data EEPROM Code Protection bit
  1830                           ;	CPD = 0x1, unprogrammed default
  1831   300009                     	org	3145737
  1832   300009  C0                 	db	192
  1833                           
  1834                           ;Config register CONFIG6L @ 0x30000A
  1835                           ;	unspecified, using default values
  1836                           ;	Write Protection bit
  1837                           ;	WRT0 = 0x1, unprogrammed default
  1838                           ;	Write Protection bit
  1839                           ;	WRT1 = 0x1, unprogrammed default
  1840                           ;	Write Protection bit
  1841                           ;	WRT2 = 0x1, unprogrammed default
  1842                           ;	Write Protection bit
  1843                           ;	WRT3 = 0x1, unprogrammed default
  1844   30000A                     	org	3145738
  1845   30000A  0F                 	db	15
  1846                           
  1847                           ;Config register CONFIG6H @ 0x30000B
  1848                           ;	unspecified, using default values
  1849                           ;	Configuration Register Write Protection bit
  1850                           ;	WRTC = 0x1, unprogrammed default
  1851                           ;	Boot Block Write Protection bit
  1852                           ;	WRTB = 0x1, unprogrammed default
  1853                           ;	Data EEPROM Write Protection bit
  1854                           ;	WRTD = 0x1, unprogrammed default
  1855   30000B                     	org	3145739
  1856   30000B  E0                 	db	224
  1857                           
  1858                           ;Config register CONFIG7L @ 0x30000C
  1859                           ;	unspecified, using default values
  1860                           ;	Table Read Protection bit
  1861                           ;	EBTR0 = 0x1, unprogrammed default
  1862                           ;	Table Read Protection bit
  1863                           ;	EBTR1 = 0x1, unprogrammed default
  1864                           ;	Table Read Protection bit
  1865                           ;	EBTR2 = 0x1, unprogrammed default
  1866                           ;	Table Read Protection bit
  1867                           ;	EBTR3 = 0x1, unprogrammed default
  1868   30000C                     	org	3145740
  1869   30000C  0F                 	db	15
  1870                           
  1871                           ;Config register CONFIG7H @ 0x30000D
  1872                           ;	unspecified, using default values
  1873                           ;	Boot Block Table Read Protection bit
  1874                           ;	EBTRB = 0x1, unprogrammed default
  1875   30000D                     	org	3145741
  1876   30000D  40                 	db	64
  1877                           tosu	equ	0xFFF
  1878                           tosh	equ	0xFFE
  1879                           tosl	equ	0xFFD
  1880                           stkptr	equ	0xFFC
  1881                           pclatu	equ	0xFFB
  1882                           pclath	equ	0xFFA
  1883                           pcl	equ	0xFF9
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           indf0	equ	0xFEF
  1891                           postinc0	equ	0xFEE
  1892                           postdec0	equ	0xFED
  1893                           preinc0	equ	0xFEC
  1894                           plusw0	equ	0xFEB
  1895                           fsr0h	equ	0xFEA
  1896                           fsr0l	equ	0xFE9
  1897                           wreg	equ	0xFE8
  1898                           indf1	equ	0xFE7
  1899                           postinc1	equ	0xFE6
  1900                           postdec1	equ	0xFE5
  1901                           preinc1	equ	0xFE4
  1902                           plusw1	equ	0xFE3
  1903                           fsr1h	equ	0xFE2
  1904                           fsr1l	equ	0xFE1
  1905                           bsr	equ	0xFE0
  1906                           indf2	equ	0xFDF
  1907                           postinc2	equ	0xFDE
  1908                           postdec2	equ	0xFDD
  1909                           preinc2	equ	0xFDC
  1910                           plusw2	equ	0xFDB
  1911                           fsr2h	equ	0xFDA
  1912                           fsr2l	equ	0xFD9
  1913                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        39
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ecu_keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_val(COMRAM[1]), 

    ecu_keypad_get_value@_keypad_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(COMRAM[8]), 

    ecu_keypad_initialize@_keypad_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(COMRAM[8]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1.keypad_rows_pins(COMRAM[4]), led_1(COMRAM[1]), keypad_1(COMRAM[8]), 

    gpio_pin_read_logic@logic	PTR enum E2801 size(2) Largest target is 1
		 -> ecu_keypad_get_value@column_logic(COMRAM[1]), ecu_button_read_state@pin_logic_state(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1.keypad_columns_pins(COMRAM[4]), keypad_1(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1.keypad_rows_pins(COMRAM[4]), led_1(COMRAM[1]), keypad_1(COMRAM[8]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad_1.keypad_columns_pins(COMRAM[4]), keypad_1.keypad_rows_pins(COMRAM[4]), led_1(COMRAM[1]), keypad_1(COMRAM[8]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    ecu_led_turn_on@_led_config	PTR const struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 

    ecu_led_turn_off@_led_config	PTR const struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 

    ecu_led_initialize@_led_config	PTR const struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ecu_keypad_get_value
    _ecu_led_turn_on->_gpio_pin_write_logic
    _ecu_led_turn_off->_gpio_pin_write_logic
    _ecu_keypad_get_value->_gpio_pin_read_logic
    _ecu_keypad_get_value->_gpio_pin_write_logic
    _ecu_layer_initialize->_ecu_keypad_initialize
    _ecu_led_initialize->_gpio_pin_initialize
    _ecu_keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15721
             _application_initialize
               _ecu_keypad_get_value
                   _ecu_led_turn_off
                    _ecu_led_turn_on
 ---------------------------------------------------------------------------------
 (1) _ecu_led_turn_on                                      3     1      2    2284
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_led_turn_off                                     3     1      2    2284
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_keypad_get_value                                11     7      4    3376
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     612
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    7777
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0    7777
              _ecu_keypad_initialize
                 _ecu_led_initialize
 ---------------------------------------------------------------------------------
 (3) _ecu_led_initialize                                   3     1      2    3603
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _ecu_keypad_initialize                                7     5      2    4171
                                             14 COMRAM     7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    3458
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2155
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _ecu_keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _ecu_led_initialize
         _gpio_pin_initialize
   _ecu_keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _ecu_led_turn_off
     _gpio_pin_write_logic
   _ecu_led_turn_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      3E       1       48.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      39        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 22 13:55:52 2023

                                      l73 15F0                                        l83 1618  
                                      l78 1640                                       l230 1592  
                                     l136 1154                                       l162 1446  
                                     l155 1280                                       l238 1688  
                                     l271 138E                                       l176 1532  
                                     l257 14C6                                       l282 1682  
                                     u600 116C                                       u601 1168  
                                     u610 118E                                       u611 118A  
                                     u700 14DA                                       u701 14D6  
                                     u710 14FC                                       u711 14F8  
                                     u640 1028                                       u624 11B6  
                                     u720 15D8                                       u800 162C  
                                     u641 1024                                       u625 11B2  
                                     u721 15D4                                       u801 1628  
                                     u650 104A                                       u634 1218  
                                     u730 1462                                       u810 1604  
                                     u651 1046                                       u635 1214  
                                     u731 145E                                       u811 1600  
                                     u740 1490                                       u820 12A4  
                                     u741 148C                                       u821 12A0  
                                     u750 14C4                                       u830 12B6  
                                     u751 14C0                                       u831 12B2  
                                     u680 1128                                       u664 1072  
                                     u760 13A6                                       u840 12EC  
                                     u681 1122                                       u665 106E  
                                     u761 13A2                                       u841 12E8  
                                     u690 112A                                       u674 10D4  
                                     u770 13B8                                       u850 133A  
                                     u675 10D0                                       u771 13B4  
                                     u851 1336                                       u780 13DA  
                                     u860 137A                                       u781 13D6  
                                     u861 1376                                       u870 138C  
                                     u871 1388                                       u794 1430  
                                     u795 142C                   __end_of_ecu_led_turn_on 161A  
                                     _ret 003D                                       prod 0FF3  
                                     wreg 0FE8                                      l1410 1052  
                                    l1402 1012                                      l1412 10B4  
                                    l1404 1016                                      l1406 1028  
                                    l1430 14DA                                      l1502 166A  
                                    l1510 161A                                      l1416 1110  
                                    l1408 104A                                      l1432 14FC  
                                    l1440 15C6                                      l1504 166A  
                                    l1512 162C                                      l1520 15F2  
                                    l1418 1152                                      l1434 1504  
                                    l1426 14C8                                      l1442 15C6  
                                    l1506 1676                                      l1530 1282  
                                    l1514 1630                                      l1522 1604  
                                    l1380 115A                                      l1436 1530  
                                    l1428 14C8                                      l1452 1448  
                                    l1444 15D8                                      l1532 1292  
                                    l1508 161A                                      l1524 1608  
                                    l1382 116C                                      l1470 1490  
                                    l1454 1450                                      l1446 15E0  
                                    l1550 12C6                                      l1534 12A4  
                                    l1518 15F2                                      l1392 1254  
                                    l1384 118E                                      l1480 14B4  
                                    l1464 146E                                      l1456 1462  
                                    l1448 15EE                                      l1528 1684  
                                    l1552 12DA                                      l1544 12C2  
                                    l1536 12B6                                      l1706 1268  
                                    l1386 1196                                      l1394 127E  
                                    l1378 1156                                      l1466 147E  
                                    l1482 14C4                                      l1458 146A  
                                    l1490 13A6                                      l1570 1368  
                                    l1554 12DC                                      l1538 12BE  
                                    l1708 113C                                      l1388 11F8  
                                    l1476 1494                                      l1468 1480  
                                    l1492 13B8                                      l1572 136A  
                                    l1564 1304                                      l1556 12EC  
                                    l1478 14B2                                      l1494 13DA  
                                    l1486 1390                                      l1574 137A  
                                    l1566 132A                                      l1558 1300  
                                    l1496 13E2                                      l1488 1394  
                                    l1576 137C                                      l1568 133A  
                                    l1498 1444                                      l1578 138C  
                                    l1690 154E                                      l1692 1560  
                                    l1694 1570                                      l1686 1534  
                                    l1696 1582                                      l1688 1538  
                                    u1020 1560                                      u1021 155C  
                                    u1030 1582                                      u1031 157E  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      _LATD 0F8C  
                                    _LATE 0F8D            gpio_pin_read_logic@_pin_config 0028  
                                    _main 1534                  __end_of_ecu_led_turn_off 1642  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
                            ___param_bank 0000                      _gpio_pin_write_logic 1156  
                                   ?_main 0028                  ??_application_initialize 003D  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                  ?_ecu_keypad_initialize 0036               ecu_led_turn_off@_led_config 0032  
                                   _led_1 0027         ecu_keypad_initialize@rows_counter 003B  
                                   tablat 0FF5                                     status 0FD8  
             ecu_keypad_get_value@counter 003A            ?_gpio_pin_direction_initialize 0028  
                         __initialization 159A                              __end_of_main 159A  
                   ?_gpio_pin_write_logic 0028                        _ecu_led_initialize 15C6  
                gpio_pin_read_logic@logic 002A                             _lat_registers 000B  
                                  ??_main 003D                             __activetblptr 0002  
     ecu_keypad_initialize@_keypad_config 0036                       ?_ecu_led_initialize 0036  
                        ?_ecu_led_turn_on 0032                      ??_ecu_led_initialize 0038  
                                  isa$std 0001                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
               ecu_keypad_get_value@value 0034                                __accesstop 0080  
                 __end_of__initialization 15BC                             ___rparam_used 0001  
                  ??_gpio_pin_write_logic 002B                            __pcstackCOMRAM 0028  
        ecu_keypad_get_value@rows_counter 003B              __end_of_ecu_keypad_get_value 1390  
gpio_pin_direction_initialize@_pin_config 0028                    _application_initialize 1684  
                              __pnvCOMRAM 003D                         ?_ecu_led_turn_off 0032  
                      ??_ecu_led_turn_off 0034                   ??_ecu_keypad_initialize 0038  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 14C8  
                     _gpio_pin_read_logic 1390                ecu_led_turn_on@_led_config 0032  
    ecu_keypad_initialize@columns_counter 003C                              __psmallconst 1000  
                                 __pcinit 159A                                   __ramtop 1000  
                                 __ptext0 1534                                   __ptext1 15F2  
                                 __ptext2 161A                                   __ptext3 1282  
                                 __ptext4 1390                                   __ptext5 1684  
                                 __ptext6 166A                                   __ptext7 15C6  
                                 __ptext8 1448                                   __ptext9 14C8  
                              _keypad_val 003E           ??_gpio_pin_direction_initialize 002A  
                    ?_gpio_pin_initialize 0032                      ?_gpio_pin_read_logic 0028  
                    end_of_initialization 15BC                      __end_of_keypad_valus 1011  
                           __Lmediumconst 0000                     ecu_led_initialize@ret 0038  
                    _ecu_keypad_get_value 1282                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                     ??_gpio_pin_initialize 0034  
                   ??_gpio_pin_read_logic 002C                     ?_ecu_keypad_get_value 0032  
                           __pidataCOMRAM 1642                       start_initialization 159A  
   __end_of_gpio_pin_direction_initialize 1156             _gpio_pin_direction_initialize 1012  
                 ?_application_initialize 0028                  ecu_keypad_initialize@ret 003A  
            __end_of_ecu_layer_initialize 1684             __end_of_ecu_keypad_initialize 14C8  
                             __pbssCOMRAM 003E             ecu_led_initialize@_led_config 0036  
          __end_of_application_initialize 168A                    ??_ecu_keypad_get_value 0036  
                       ??_ecu_led_turn_on 0034           gpio_pin_write_logic@_pin_config 0028  
               gpio_pin_write_logic@logic 002A                              _keypad_valus 1001  
                             __smallconst 1000          ecu_keypad_get_value@column_logic 0039  
        gpio_pin_direction_initialize@ret 0030                    gpio_pin_initialize@ret 0035  
     ecu_keypad_get_value@columns_counter 003C                   gpio_pin_write_logic@ret 0031  
                               copy_data0 15AE                    gpio_pin_read_logic@ret 0031  
                    _ecu_layer_initialize 166A                                  __Hrparam 0000  
                                __Lrparam 0000                          _ecu_led_turn_off 161A  
             __end_of_gpio_pin_initialize 1534               __end_of_gpio_pin_read_logic 1448  
          gpio_pin_initialize@_pin_config 0032                                  __ptext10 1156  
                                __ptext11 1012        ecu_keypad_get_value@_keypad_config 0032  
                   ?_ecu_layer_initialize 0028                __end_of_ecu_led_initialize 15F2  
                                _keypad_1 001F                                  isa$xinst 0000  
            __end_of_gpio_pin_write_logic 1282                           _ecu_led_turn_on 15F2  
                 ecu_keypad_get_value@ret 0038                            _port_registers 0001  
                   _ecu_keypad_initialize 1448                    ??_ecu_layer_initialize 003D  
